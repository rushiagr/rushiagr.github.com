<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>rushiagr</title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://www.rushiagr.com/tags/server/index.xml</link>
    <language>en-us</language>
    <author>Rushi Agrawal</author>
    <copyright>0001 Rushi Agrawal</copyright>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    
    <item>
      <title>Apache mod_wsgi parallelization notes</title>
      <link>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</link>
      <pubDate>Fri, 24 Jul 2015 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</guid>
      <description>

&lt;p&gt;This is my notes on
&lt;a href=&#34;https://code.google.com/p/modwsgi/wiki/ProcessesAndThreading&#34;&gt;&amp;lsquo;Processes and Threading&amp;rsquo;&lt;/a&gt;
doc by the author of mod_wsgi module of Apache. This blog post just serves as a &amp;lsquo;quick refresher&amp;rsquo;, and
is only useful if you have read the original document but it&amp;rsquo;s been too long since you
read it :)&lt;/p&gt;

&lt;h2 id=&#34;apache-with-mod-wsgi&#34;&gt;Apache with mod_wsgi&lt;/h2&gt;

&lt;p&gt;A Python application can run with multiple processes as well as multiple threads
with mod_wsgi.&lt;/p&gt;

&lt;h3 id=&#34;prefork-multiprocessing-module&#34;&gt;Prefork multiprocessing module&lt;/h3&gt;

&lt;p&gt;Apache creates multiple processes, and each request is handled by one process.
A process only handles one request at a time.
This means, if you have set number of processes to 1, there will be only one
request handeled at a time overall.&lt;/p&gt;

&lt;h3 id=&#34;worker-multiprocessing-module&#34;&gt;Worker multiprocessing module&lt;/h3&gt;

&lt;p&gt;Multiple processes, and multiple threads in each processa.
Even if a process is handling a request, another thread in the same process
can handle one more request.
You might need some synchronization primitive to make sure multiple threads
of same process don&amp;rsquo;t corrupt shared memory (only occurs when shared memory
is mutated)&lt;/p&gt;

&lt;h3 id=&#34;but-gil&#34;&gt;But GIL?&lt;/h3&gt;

&lt;p&gt;Python GIL problem is largely alleviated with mod_wsgi since multiple processes
can handle requests, and GIL has impact ranging to only one process. One more
point to note is that the apache code which maps a URL/request to a wsgi application,
and the code which maps static file URLs to actual static files to serve is
written in C, and is free from GIL.&lt;/p&gt;

&lt;p&gt;In the wsgi python code, two environment variables: &amp;lsquo;wsgi.multithread&amp;rsquo; and
&amp;lsquo;wsgi.multiprocess&amp;rsquo; will define which of the above two modules are going to be
used.&lt;/p&gt;
</description>
    </item>
    
    
  </channel>
</rss>