<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cheatsheet on rushiagr</title>
    <link>http://www.rushiagr.com/tags/cheatsheet/</link>
    <description>Recent content in cheatsheet on rushiagr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Rushi Agrawal</copyright>
    <lastBuildDate>Thu, 08 Dec 2016 19:05:21 +0530</lastBuildDate>
    
	<atom:link href="http://www.rushiagr.com/tags/cheatsheet/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cassandra server in 10 minutes</title>
      <link>http://www.rushiagr.com/blog/2016/12/08/cassandra-server-in-10-minutes/</link>
      <pubDate>Thu, 08 Dec 2016 19:05:21 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/12/08/cassandra-server-in-10-minutes/</guid>
      <description>Want to quickly find out how a Cassandra server feels? In this blog post, we&#39;ll create a single-node Cassandra cluster on an Ubuntu Xenial (16.04) system. It&#39;s not really a &amp;lsquo;cluster&amp;rsquo;, but you can access the Cassandra shell cqlsh and try out all of its commands. Since we are just looking for a quick start, we&#39;re installing one of the latest Cassandra versions &amp;ndash; version 3.7. Even more, the steps here are totally scriptable, so you can just blindly paste the lines and it&#39;ll work!</description>
    </item>
    
    <item>
      <title>Tmux session shortcuts</title>
      <link>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</guid>
      <description>Tmux is awesome. But the session management commands are way too long for my liking. Listing all sessions is tmux list-sessions, attaching to a session mysession is tmux attach -t mysession, etc.
So I created a few functions and aliases, which can be found here.
The general idea is, all commands start with mx, which is basically a shortcut for &amp;lsquo;tMuX&amp;rsquo;. So mxl is to &amp;lsquo;l&#39;ist tmux sessions, mxa is to &amp;lsquo;a&#39;ttach to a tmux session, etc.</description>
    </item>
    
    <item>
      <title>Build VM Images using Diskimage-builder</title>
      <link>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</guid>
      <description>OpenStack has this nice tool diskimage-builderto create virtual machine images without the need of a cloud. These vm images can then be uploaded to cloud (e.g. in Glance for OpenStack cloud), and they become immediately usable. You can also create VMs in virtualbox from these images (though I don&#39;t remember exact steps to make the image work with VirtualBox. Do let me know if you get the VM working with VirtualBox/Vagrant)</description>
    </item>
    
    <item>
      <title>Better way to view MySQL tables</title>
      <link>http://www.rushiagr.com/blog/2015/12/12/better-way-to-view-mysql-tables/</link>
      <pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/12/12/better-way-to-view-mysql-tables/</guid>
      <description>The problem You are trying to print a MySQL table with a large number of columns, with SELECT * command. You type SELECT * FROM mysql.user LIMIT 1, and your terminal becomes this. If you wanted to view more than one row, you&#39;re in a trouble :)
The solution Run MySQL with this option:
mysql --pager=&amp;quot;less --chop-long-lines --quit-if-one-screen --no-init&#39;  This will make your table display only the rows it can in the current screen, something like this.</description>
    </item>
    
    <item>
      <title>Quick JustDial scraper</title>
      <link>http://www.rushiagr.com/blog/2015/09/14/quick-justdial-scraper/</link>
      <pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/14/quick-justdial-scraper/</guid>
      <description>So my friend asked me to scrape data from JustDial and give it to him in an excel sheet. I thought let&#39;s give it a try. He needed name of firm, address and phone number of any JustDial URL he wants to scrape. After effectively around 4 hours of work, the below script was created.
Note that the script is dirty. You need to edit the jd_url to search any other URL.</description>
    </item>
    
    <item>
      <title>OpenStack Keystone with Cassandra Database in DevStack</title>
      <link>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</guid>
      <description>Using Cassandra as backing database for OpenStack Keystone was our solution to multi-region deployment problem of OpenStack cloud. This blog post is not to discuss the problem. We are talking about how to have a development environment to play around with Keystone working with a dev Cassandra deployment.
&amp;ldquo;Just run this script and you&#39;re all set!&amp;rdquo; I&#39;ve put together all commands into a script which can be found here:
https://raw.githubusercontent.com/rushiagr/keystone-cassandra/master/keystone-cassandra.sh  If you have a fresh Ubuntu VM, just copy this script into that machine and execute it.</description>
    </item>
    
    <item>
      <title>Apache mod_wsgi parallelization notes</title>
      <link>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</link>
      <pubDate>Fri, 24 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</guid>
      <description>This is my notes on &amp;lsquo;Processes and Threading&amp;rsquo; doc by the author of mod_wsgi module of Apache. This blog post just serves as a &amp;lsquo;quick refresher&amp;rsquo;, and is only useful if you have read the original document but it&#39;s been too long since you read it :)
Apache with mod_wsgi A Python application can run with multiple processes as well as multiple threads with mod_wsgi.
Prefork multiprocessing module Apache creates multiple processes, and each request is handled by one process.</description>
    </item>
    
    <item>
      <title>Docker quick start notes</title>
      <link>http://www.rushiagr.com/blog/2015/06/07/docker-quick-start-notes/</link>
      <pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/06/07/docker-quick-start-notes/</guid>
      <description>Update *: Blog updated to use latest way to install docker.  After reading about docker and containers, I thought let&#39;s try them out. Here are my notes. Obviously all of them are taken from Internet. Maybe this collection here will help someone start with docker faster than spending time searching all over the internet.
It assumes your base OS is Ubuntu 14.04 Trusty Tahr (when was the last time you saw the codename spelled &amp;lsquo;Trusty Tahr&amp;rsquo; and not &amp;lsquo;Trusty&amp;rsquo;?</description>
    </item>
    
    <item>
      <title>Puppet installation from modules</title>
      <link>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</link>
      <pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</guid>
      <description>A quick example of how to use Puppet to install and manage MySQL. We&#39;ll download required Puppet modules from their git repositories.
Again, everything is tried on Ubuntu (14.04).
Make sure hostname -f shows your FQDN. Then install puppet
sudo apt-get install puppet  We&#39;ll use git submodules to manage different git repositories. But first, create our own repository
mkdir puppet-mysql cd puppet-mysql git init  Install Puppet modules stdlib and mysql into directory modules as git submodules.</description>
    </item>
    
    <item>
      <title>iSCSI administration on Ubuntu - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</guid>
      <description>This post get&#39;s you started with iSCSI administration on an Ubuntu machine. Although I have used Ubuntu Trusty (14.04) version, it should work with Precise (12.04) too, with the latest packages.
Prerequisites Make sure you have atleast a little idea of what these terms mean: iSCSI, LUN, IQN, initiator, target and portal. Google and wikipedia are your friends.
A quick summary: There are two parts of iSCSI communication - initiator and target.</description>
    </item>
    
    <item>
      <title>OpenStack Unit Testing Nuggets</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</guid>
      <description>A small post about little things I found out while running unit tests in OpenStack.
Unit-testing setup Everybody knows ./run_tests.sh is used to run the unit tests of an OpenStack project. But, you require to install dependencies before doing it. And installing dependencies might not always succeed. So make sure you install these packages before running pip install -r requirements.txt:
sudo apt-get install build-essential libssl-dev libffi-dev \ python-dev libxslt1-dev libpq-dev python-mysqldb \ libmysqlclient-dev libvirt-dev  Atleast cinder and nova dependencies will get installed properly after this.</description>
    </item>
    
    <item>
      <title>Amazon EC2 API with OpenStack - Developer Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</guid>
      <description>OpenStack has support for EC2 API, that is, you can fire Amazon&#39;s API against an OpenStack cloud and it will still work. This article gets you started with using them locally against DevStack. It is more of a starter guide to a novice.
Fire a DevStack with it&#39;s default settings. See this post for more information on it.
git clone http://github.com/openstack-dev/devstack cd devstack/ ./stack.sh  Source openrc
source openrc  View all EC2 credentials available for the current user (here, demo user in demo tenant)</description>
    </item>
    
    <item>
      <title>Open Source Puppet - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</link>
      <pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</guid>
      <description>This post aims to be your quickest guide to get started with Puppet. We&#39;ll be using the open source version of Puppet. An hour of spare time and two Ubuntu machines (physical or virtual doesn&#39;t matter) is all that is needed.
Quick Introduction Lets say you want to install and run apache server on one of the machines in your lab. On another, you want to create a new user. On a third machine, you want to install MySQL, and allow access to this machine only from the first server.</description>
    </item>
    
    <item>
      <title>OpenStack in an hour with DevStack</title>
      <link>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</guid>
      <description>&lt;p&gt;So you found out a cool new technology &amp;ldquo;OpenStack&amp;rdquo; and want to try it real quick? Or probably you are hired in a company for your Python skills and now you are supposed to work on OpenStack in the shortest possible time? Fear not, it is not that hard to get started. &lt;a href=&#34;http://devstack.org&#34;&gt;DevStack&lt;/a&gt; is your friend-in-need. No, don&#39;t click that hyperlink just yet :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</guid>
      <description>Databases are so important, yet almost all the time I need to work with it, I find that I have already forgotten all the syntax! So here I am writing down a quick cheat sheet to get me up and running when I&#39;m waking up from slumber. I hope this will help atleast one other guy on this planet.
I use mostly Ubuntu, so some of the commands might be Ubuntu specific.</description>
    </item>
    
    <item>
      <title>Installing OpenID plugin for MediaWiki</title>
      <link>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</link>
      <pubDate>Sun, 12 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</guid>
      <description>&lt;p&gt;This post is about setting up your wiki such that their users access the wiki
only via an OpenID provider login (e.g. Google or Facebook login). This post assumes
MediaWiki is already installed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cinder on DevStack - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</guid>
      <description>&lt;p&gt;This blog post covers all the important commands for OpenStack Cinder - The block storage project.
Although this guide is written based on DevStack, it will work with actual deployment of OpenStack
cloud also (except the DevStack/Linux specific bits).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git(hub) Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2013/03/19/github-cheat-sheet/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/03/19/github-cheat-sheet/</guid>
      <description>&lt;p&gt;I am posting my github cheat sheet here. I started writing it as soon as I started
learning Github and Git. So, some of the content here can appear quite naive.
I will try to keep this blog post as updated as I can, and if you find any
suggestion, please comment!&lt;/p&gt;
&lt;p&gt;This post is just for a reference of commands. This post will be a bad way to learn
how git works. A basic understanding of git is assumed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>