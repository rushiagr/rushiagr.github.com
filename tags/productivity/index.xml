<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>rushiagr</title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://www.rushiagr.com/tags/productivity/index.xml</link>
    <language>en-us</language>
    <author>Rushi Agrawal</author>
    <copyright>0001 Rushi Agrawal</copyright>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    
    <item>
      <title>You dont need Vim swap files. And how to get rid of them</title>
      <link>http://www.rushiagr.com/blog/2016/06/17/you-dont-need-vim-swap-files-and-how-to-get-rid-of-them/</link>
      <pubDate>Fri, 17 Jun 2016 11:18:27 IST</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2016/06/17/you-dont-need-vim-swap-files-and-how-to-get-rid-of-them/</guid>
      <description>

&lt;p&gt;Estimated reading time: 5 minutes.&lt;/p&gt;

&lt;p&gt;Almost all IDEs today have &amp;lsquo;autosave&amp;rsquo; feature. That is, you don&amp;rsquo;t need to
explicitly save a file. The file is automatically saved as you type, so that
even if your computer crashes, you don&amp;rsquo;t lose data. This makes me wonder why
Vim&amp;rsquo;s default behavior is of using swap files. Swap files are annoying.
I&amp;rsquo;ve seen all Vim developers, including me, struggle with swap files at one
point in their life.&lt;/p&gt;

&lt;p&gt;There is a Vim plugin for autosaving, and it has saved a lot of my time. I have
used the plugin such that every time I enter normal mode (after making edits in
Insert mode), it autosaves file. And more importantly, I have disabled swap
file creation by Vim. It&amp;rsquo;s really that simple folks. You don&amp;rsquo;t really need swap
files 99.99% of the times.&lt;/p&gt;

&lt;h3 id=&#34;how-to-vim-autosave&#34;&gt;How to Vim autosave&lt;/h3&gt;

&lt;p&gt;Download the plugin, which is present at
&lt;a href=&#34;https://github.com/907th/vim-auto-save&#34;&gt;https://github.com/907th/vim-auto-save&lt;/a&gt;, and put the plugin file in &lt;code&gt;~/.vim/plugin&lt;/code&gt; directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p ~/.vim/plugin
cd ~/.vim/plugin
wget https://raw.githubusercontent.com/907th/vim-auto-save/master/plugin/AutoSave.vim
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open the &lt;code&gt;~/.vimrc&lt;/code&gt; file and add these lines. Comments are
self-explanatory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Enable autosave plugin
let g:auto_save = 1

# Only save in Normal mode periodically. If the value is changed to &#39;1&#39;,
# then changes are saved when you are in Insert mode too, as you type, but
# I would say prefer not save in Insert mode
let g:auto_save_in_insert_mode = 0

# Silently autosave. If you disable this option by changing value to &#39;0&#39;,
# then in the vim status, it will display &amp;quot;(AutoSaved at &amp;lt;current time&amp;gt;)&amp;quot; all
# the time, which might get annoying
let g:auto_save_silent = 1

# And now turn Vim swapfile off
set noswapfile
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;things-to-note&#34;&gt;Things to note&lt;/h3&gt;

&lt;p&gt;There are a few things to note when you switch to this &amp;lsquo;autosave, no swap
files&amp;rsquo; mode:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can&amp;rsquo;t just do a &lt;code&gt;:q!&lt;/code&gt; to discard unsaved changes.  Autosave already has
saved your changes! So the only real way to discard your changes is to undo
all the changes you&amp;rsquo;ve made (&lt;code&gt;u&lt;/code&gt; key) and then exit the file.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Earlier, you can&amp;rsquo;t modify a Vim file which is already open in another
terminal. Now too Vim will throw a warning message. The difference is how
you&amp;rsquo;re notified of it. Previously, even before opening the file Vim will say
that a swap file exists. But now, Vim will allow you to open the file, and
start editing it too. Only when you come out of Insert mode, AND you are
making a conflicting change, will it say:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WARNING: The file has been changed since reading it!!!
Do you really want to write to it (y/n)?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A conflicting change basically means you are making edits at a place where
edits are already made in another terminal where that same file is open.
For example, the file initially had &amp;lsquo;one&amp;rsquo; written on first line when it&amp;rsquo;s
opened in both terminals. In one terminal, you add a second line saying
&amp;lsquo;two&amp;rsquo;, and in another terminal when you add the second line saying &amp;lsquo;three&amp;rsquo;,
we have a conflict. This is because we are writing &amp;lsquo;three&amp;rsquo; at line number 2
where &amp;lsquo;two&amp;rsquo; is alredy written (from another terminal)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After reading these &amp;lsquo;things to note&amp;rsquo;, you might be thinking if it is really a good idea to autosave. Everybody is entitled to have an opinion. My opinion is that over a longer time period, getting rid of swap files saved me much more headache. I just have to be careful while exiting files.&lt;/p&gt;

&lt;p&gt;I hope this helps. Questions, comments, suggestions, feedback? Comment :)&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Everything you need to know about Tmux copy paste - Ubuntu</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</link>
      <pubDate>Thu, 16 Jun 2016 10:59:02 IST</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</guid>
      <description>

&lt;p&gt;Copying from a Tmux session is something every Tmux user struggled with once.
I&amp;rsquo;m listing out all the stuff I learnt in this blog.&lt;/p&gt;

&lt;p&gt;I tested everything on Ubuntu 14.04 Trusty Tahr, which runs Tmux version 1.8 (I have a few commands included for Tmux version 2+ also)
To check your Tmux version, run &lt;code&gt;tmux -V&lt;/code&gt;. If you have a Mac, see
&lt;a href=&#34;http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;know-about-copy-buffers&#34;&gt;Know about copy buffers&lt;/h2&gt;

&lt;p&gt;When you do a &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;, the stuff you copy is stored in your computer&amp;rsquo;s
buffer, called &amp;lsquo;clipboard&amp;rsquo; from where you can paste anywhere by doing a
&lt;code&gt;CTRL&lt;/code&gt;+&amp;lsquo;v&amp;rsquo;. Tmux has it&amp;rsquo;s own buffer for coppying, which we&amp;rsquo;ll
call &amp;lsquo;tmux buffer&amp;rsquo;. Our goal is to understand in a Tmux session how to copy to
tmux buffer, and also to clipboard.&lt;/p&gt;

&lt;p&gt;You can always copy stuff into clipboard while usin Tmux. &amp;ldquo;Why do I need a Tmux
buffer then&amp;rdquo;, you might wonder. This is because, in your shell, the text you
want to select might not fit in your current screen (e.g. output of &lt;code&gt;cat
/etc/passwd&lt;/code&gt; file). If you copy normally, you will only be able to copy text
visible on your screen, and not the output which is &amp;lsquo;scrolled up&amp;rsquo; due to a lot
of output.&lt;/p&gt;

&lt;h2 id=&#34;tmux-copy-paste-the-defaults&#34;&gt;Tmux copy-paste - the defaults&lt;/h2&gt;

&lt;p&gt;The defaults are slighly involved, so this section is purely for informational purposes, and shouldn&amp;rsquo;t be memorized. Skipping this section is perfectly okay.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter &amp;lsquo;copy mode&amp;rsquo; by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Use the arrow keys to go to the position from where you want to start copying. Press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;SPACE&lt;/code&gt; to start copying.&lt;/li&gt;
&lt;li&gt;Use arrow keys to go to the end of text you want to copy. Press &lt;code&gt;ALT&lt;/code&gt;+&lt;code&gt;w&lt;/code&gt; or &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;w&lt;/code&gt; to copy into Tmux buffer.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt; to paste in a possibly different Tmux pane/window.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;tmux-vim-bindings-for-copying-into-tmux-buffer&#34;&gt;Tmux Vim-bindings for copying into tmux buffer&lt;/h2&gt;

&lt;p&gt;Adding configuration described in this section will give you easier shortcuts
for copy-pasting in Tmux. Moreover, these shortcuts work very similar to Vim&amp;rsquo;s
copy-pasting shortcuts!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Add these lines in a file by name &lt;code&gt;~/.tmux.conf&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind P paste-buffer
bind-key -t vi-copy &#39;v&#39; begin-selection
bind-key -t vi-copy &#39;y&#39; copy-selection
bind-key -t vi-copy &#39;r&#39; rectangle-toggle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that for a newer tmux version (2.4 and above I think, not sure), the last three lines should be replaced with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now you can enter copy mode by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;[&lt;/code&gt;, and then go
to start point, press &amp;lsquo;v&amp;rsquo; and start copying. After you have selected text
you want to copy, you can just press &amp;lsquo;y&amp;rsquo; (or the default &amp;lsquo;enter&amp;rsquo; key) to
copy the text into Tmux&amp;rsquo;s buffer. This is exactly the commands you would use
in Vim to copy text.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To paste, press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;P&lt;/code&gt;. Note that it&amp;rsquo;s capital &amp;lsquo;p&amp;rsquo; (i.e.
&lt;code&gt;SHIFT&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;). This again is similar to Vim&amp;rsquo;s shortcut &amp;lsquo;p&amp;rsquo; for paste, though
not exactly similar. You&amp;rsquo;ll realize in your Tmux journey why didn&amp;rsquo;t we use a
small &amp;lsquo;p&amp;rsquo; instead of a capital &amp;lsquo;P&amp;rsquo; ;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;copy-from-tmux-buffer-to-system-buffer-clipboard&#34;&gt;Copy from tmux buffer to system buffer (clipboard)&lt;/h2&gt;

&lt;p&gt;For this to happen, you need to install &lt;code&gt;xclip&lt;/code&gt; on your computer. Do it as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install --assume-yes xclip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, you need to add this line in &lt;code&gt;~/.tmux.conf&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind -t vi-copy y copy-pipe &amp;quot;xclip -sel clip -i&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now close all your tmux sessions. From now onwards, whatever you copy in Tmux
buffer will also land into system clipboard.&lt;/p&gt;

&lt;h2 id=&#34;tmux-copy-with-mouse-drag&#34;&gt;Tmux copy with mouse drag!&lt;/h2&gt;

&lt;p&gt;You can enable &amp;lsquo;mouse mode&amp;rsquo;, using which you can copy text into tmux buffer by
mouse drag. For doing that, you just need to add this line to your
&lt;code&gt;~/.tmux.conf&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setw -g mode-mouse on
set -g mouse-select-window on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that if your tmux version is 2.1 or above, you need to include the following line instead of the above two&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -g mouse on
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;but-now-i-can-t-do-normal-copy-paste-with-mouse&#34;&gt;But now I can&amp;rsquo;t do normal copy-paste with mouse!&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll notice that now all your selections will go to tmux buffer, and not
clipboard buffer. Of course, you can enable copying to system clipboard as
described in a section above. However, you can notice that you can&amp;rsquo;t double
click to select a complete word with vi&amp;rsquo;s tmux copy-pasting shortcuts + mouse
option enabled.&lt;/p&gt;

&lt;p&gt;Just press &lt;code&gt;SHIFT&lt;/code&gt; button when copying, and now you can copy as if Tmux
doesn&amp;rsquo;t exist! :)&lt;/p&gt;

&lt;h2 id=&#34;copy-from-a-remote-server&#34;&gt;Copy from a remote server&lt;/h2&gt;

&lt;p&gt;Install &lt;code&gt;xclip&lt;/code&gt; on the remote Ubuntu/Linux server, and add the line mentioned
above (&lt;code&gt;bind -t vi-copy y copy-pipe &amp;quot;xclip -sel clip -i&amp;quot;&lt;/code&gt;) to &lt;code&gt;~/.tmux.conf&lt;/code&gt; on
that server. Also, pass &lt;code&gt;-X&lt;/code&gt; option when making SSH connection to the server,
like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -X remoteuser@remotehost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And after that everything you copy into remote&amp;rsquo;s Tmux buffer will get copied
over to local clipboard. Magic!&lt;/p&gt;

&lt;h2 id=&#34;other-information&#34;&gt;Other information&lt;/h2&gt;

&lt;p&gt;Done! Don&amp;rsquo;t forget to comment if you know something worth letting everybody
know! Thank you:)&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Everything you need to know about Tmux copy paste</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/</link>
      <pubDate>Thu, 16 Jun 2016 10:58:02 IST</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/</guid>
      <description>

&lt;p&gt;Copying from a Tmux session is something every Tmux user struggled with once.
I&amp;rsquo;m listing out all the stuff I learnt in this blog.&lt;/p&gt;

&lt;p&gt;I tested everything on Mac OS X El Capitan. For Ubuntu/Linux guide, see &lt;a href=&#34;http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/&#34;&gt;here&lt;/a&gt;. Mac OS X El Capitan runs Tmux version 2.1. To check your Tmux version, run &lt;code&gt;tmux -V&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;know-about-your-terminal&#34;&gt;Know about your terminal&lt;/h2&gt;

&lt;p&gt;The default terminal which comes with Mac is pretty limiting. Instead of
listing the limitations (and workarounds around it), I&amp;rsquo;ll just say that before
you proceed, please install iTerm 2 and start using that immediately. What I&amp;rsquo;m
writing below is all for iTerm 2. (Do let me know if you absolutely need Tmux
copy-paste to work in Terminal, and I&amp;rsquo;ll provide steps for that).&lt;/p&gt;

&lt;h2 id=&#34;know-about-copy-buffers&#34;&gt;Know about copy buffers&lt;/h2&gt;

&lt;p&gt;When you do a &lt;code&gt;Command&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;, the stuff you copy is stored in your computer&amp;rsquo;s
buffer, called &amp;lsquo;clipboard&amp;rsquo; from where you can paste anywhere by doing a
&lt;code&gt;Command&lt;/code&gt;+&lt;code&gt;v&lt;/code&gt;. Tmux has it&amp;rsquo;s own buffer for coppying, which we&amp;rsquo;ll
call &amp;lsquo;tmux buffer&amp;rsquo;. Our goal is to understand in a Tmux session how to copy to
tmux buffer, and also to clipboard.&lt;/p&gt;

&lt;p&gt;You can always copy stuff into clipboard while usin Tmux. &amp;ldquo;Why do I need a Tmux
buffer then&amp;rdquo;, you might wonder. This is because, in your shell, the text you
want to select might not fit in your current screen (e.g. output of &lt;code&gt;cat
/etc/passwd&lt;/code&gt; file). If you copy normally, you will only be able to copy text
visible on your screen, and not the output which is &amp;lsquo;scrolled up&amp;rsquo; due to a lot
of output.&lt;/p&gt;

&lt;h2 id=&#34;tmux-copy-paste-the-defaults&#34;&gt;Tmux copy-paste - the defaults&lt;/h2&gt;

&lt;p&gt;Well, the defaults in Mac are horrible. There is simply no way to copy into
tmux buffer without using any external plugin. BUT you can copy stuff into
system clipboard by just using your mouse for selecting text.&lt;/p&gt;

&lt;h2 id=&#34;tmux-vim-bindings-for-copying-into-tmux-buffer&#34;&gt;Tmux Vim-bindings for copying into tmux buffer&lt;/h2&gt;

&lt;p&gt;Adding configuration described in this section will give you easier shortcuts
for copy-pasting in Tmux. Moreover, these shortcuts work very similar to Vim&amp;rsquo;s
copy-pasting shortcuts!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Add these lines in a file by name &lt;code&gt;~/.tmux.conf&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind P paste-buffer
bind-key -t vi-copy &#39;v&#39; begin-selection
bind-key -t vi-copy &#39;y&#39; copy-selection
bind-key -t vi-copy &#39;r&#39; rectangle-toggle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that for a newer tmux version (2.4 and above I think, not sure), the last three lines should be replaced with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now you can enter copy mode by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;[&lt;/code&gt;, and then go
to start point, press &amp;lsquo;v&amp;rsquo; and start copying. After you have selected text
you want to copy, you can just press &amp;lsquo;y&amp;rsquo; (or the default &amp;lsquo;enter&amp;rsquo; key) to
copy the text into Tmux&amp;rsquo;s buffer. This is exactly the commands you would use
in Vim to copy text.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To paste, press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;P&lt;/code&gt;. Note that it&amp;rsquo;s capital &amp;lsquo;p&amp;rsquo; (i.e.
&lt;code&gt;SHIFT&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;). This again is similar to Vim&amp;rsquo;s shortcut &amp;lsquo;p&amp;rsquo; for paste, though
not exactly similar. You&amp;rsquo;ll realize in your Tmux journey why didn&amp;rsquo;t we use a
small &amp;lsquo;p&amp;rsquo; instead of a capital &amp;lsquo;P&amp;rsquo; ;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;copy-from-tmux-buffer-to-system-buffer-clipboard&#34;&gt;Copy from tmux buffer to system buffer (clipboard)&lt;/h2&gt;

&lt;p&gt;In newer iTerm2, you need to enable one option in settings to copy a text into
both tmux buffer and clipboard at the same time. Go to iTerm2 &amp;gt; Preferences &amp;gt;
&amp;ldquo;General&amp;rdquo; tab, and in the &amp;ldquo;Selection&amp;rdquo; section, check the box which says
&amp;ldquo;Applications in terminal may access clipboard&amp;rdquo; if it isn&amp;rsquo;t checked. See
&lt;a href=&#34;http://apple.stackexchange.com/a/248828&#34;&gt;here&lt;/a&gt; for a screenshot.&lt;/p&gt;

&lt;h2 id=&#34;tmux-copy-with-mouse-drag&#34;&gt;Tmux copy with mouse drag!&lt;/h2&gt;

&lt;p&gt;You can enable &amp;lsquo;mouse mode&amp;rsquo;, using which you can copy text into tmux buffer by
mouse drag. For doing that, you just need to add this line to your
&lt;code&gt;~/.tmux.conf&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -g mouse on
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;but-now-i-can-t-do-normal-copy-paste-with-mouse&#34;&gt;But now I can&amp;rsquo;t do normal copy-paste with mouse!&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll notice that now all your selections will go to tmux buffer, and not
clipboard buffer. Of course, you can enable copying to system clipboard as
described in a section above. However, you can notice that you can&amp;rsquo;t double
click to select a complete word with vi&amp;rsquo;s tmux copy-pasting shortcuts + mouse
option enabled.&lt;/p&gt;

&lt;p&gt;Just press &lt;code&gt;Option&lt;/code&gt; (Alt) button when copying, and now you can copy as if Tmux
doesn&amp;rsquo;t exist! :)&lt;/p&gt;

&lt;h2 id=&#34;copy-from-a-remote-server&#34;&gt;Copy from a remote server&lt;/h2&gt;

&lt;p&gt;Now if your remote server is a Linux machine (e.g. an Ubuntu server), then
getting that remote server&amp;rsquo;s tmux buffer copied into our local Mac&amp;rsquo;s clipboard
makes for an interesting story! If the iTerm setting to allow applications in
terminal to access clipboard is enabled, then if you are running a tmux session
on remote server, and you copy stuff there into the tmux buffer of that system,
the copied text is already into your local system&amp;rsquo;s clipboard! Amazing! BUT but
but, this only works if you are connecting to the remote machine directly from
your terminal, i.e. not from inside a local Tmux session!! If you have a local
Tmux session, and then you SSH into remote machine, connect to remote Tmux
session and then try to copy text in the &amp;lsquo;remote&amp;rsquo; Tmux session (i.e. using
&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt; twice to send Tmux commands to inner Tmux session), then this won&amp;rsquo;t
work! (Note that you can always copy in the &amp;lsquo;outer&amp;rsquo; Tmux session, i.e. local
Tmux session, but as stated previously, you won&amp;rsquo;t be able to copy text which is
&amp;lsquo;scrolled up&amp;rsquo; in the inner Tmux session.)&lt;/p&gt;

&lt;p&gt;Generally I&amp;rsquo;m satisfied with the limitation mentioned here. In order to get
full copying from remote session working, you will need to do something more
involved, like &lt;a href=&#34;http://superuser.com/a/408374/315134&#34;&gt;here&lt;/a&gt;. Do let me know if
you need a better explanation of that method (e.g. more details on SSH keys and
enabling remote option on Mac OS X)&lt;/p&gt;

&lt;h2 id=&#34;other-information&#34;&gt;Other information&lt;/h2&gt;

&lt;p&gt;Done! Don&amp;rsquo;t forget to comment if you know something worth letting everybody
know! Thank you:)&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Tmux session shortcuts</title>
      <link>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</guid>
      <description>

&lt;p&gt;Tmux is awesome. But the session management commands are way too long for my
liking. Listing all sessions is &lt;code&gt;tmux list-sessions&lt;/code&gt;, attaching to a session
&lt;code&gt;mysession&lt;/code&gt; is &lt;code&gt;tmux attach -t mysession&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;So I created a few functions and aliases, which can be found
&lt;a href=&#34;https://github.com/rushiagr/myutils/blob/master/aliases/tmux.sh&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The general idea is, all commands start with &lt;code&gt;mx&lt;/code&gt;, which is basically a
shortcut for &amp;lsquo;tMuX&amp;rsquo;. So &lt;code&gt;mxl&lt;/code&gt; is to &amp;lsquo;l&amp;rsquo;ist tmux sessions, &lt;code&gt;mxa&lt;/code&gt; is to &amp;lsquo;a&amp;rsquo;ttach
to a tmux session, etc.&lt;/p&gt;

&lt;p&gt;List all running tmux sessions&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@rushi:~$ mxl
0: 4 windows (created Sun Jan 10 17:14:11 2016) [89x23] (attached)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see one tmux session. Let&amp;rsquo;s create another tmux session with name
&lt;code&gt;dev&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mx dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List all sessions now&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@rushi:~$ mxl
0: 4 windows (created Sun Jan 10 17:14:11 2016) [89x23] (attached)
dev: 1 windows (created Sun Jan 10 17:59:30 2016) [89x23] (attached)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To attach to session with name &lt;code&gt;dev&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mxa dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also omit session name, and it will attach to the last session you
attached to.&lt;/p&gt;

&lt;p&gt;If there was no session with name &lt;code&gt;dev2&lt;/code&gt;, and you type this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mxa dev2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will automatically create a session for you and attach you to it.&lt;/p&gt;

&lt;p&gt;To detach:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mxd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I find this &lt;code&gt;mxd&lt;/code&gt; to be easier to type than both &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;d&lt;/code&gt; and &lt;code&gt;tmux
detach&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;You just need to copy the content in the above referenced link to &lt;code&gt;~/.bashrc&lt;/code&gt;
file and from a new terminal session things will be ready for you to use :)&lt;/p&gt;
</description>
    </item>
    
    
  </channel>
</rss>