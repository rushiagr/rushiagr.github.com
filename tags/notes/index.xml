<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notes on rushiagr</title>
    <link>http://www.rushiagr.com/tags/notes/</link>
    <description>Recent content in notes on rushiagr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Rushi Agrawal</copyright>
    <lastBuildDate>Sun, 10 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.rushiagr.com/tags/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tmux session shortcuts</title>
      <link>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</guid>
      <description>Tmux is awesome. But the session management commands are way too long for my liking. Listing all sessions is tmux list-sessions, attaching to a session mysession is tmux attach -t mysession, etc.
So I created a few functions and aliases, which can be found here.
The general idea is, all commands start with mx, which is basically a shortcut for &amp;lsquo;tMuX&amp;rsquo;. So mxl is to &amp;lsquo;l&#39;ist tmux sessions, mxa is to &amp;lsquo;a&#39;ttach to a tmux session, etc.</description>
    </item>
    
    <item>
      <title>Build VM Images using Diskimage-builder</title>
      <link>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</guid>
      <description>OpenStack has this nice tool diskimage-builderto create virtual machine images without the need of a cloud. These vm images can then be uploaded to cloud (e.g. in Glance for OpenStack cloud), and they become immediately usable. You can also create VMs in virtualbox from these images (though I don&#39;t remember exact steps to make the image work with VirtualBox. Do let me know if you get the VM working with VirtualBox/Vagrant)</description>
    </item>
    
    <item>
      <title>Quick JustDial scraper</title>
      <link>http://www.rushiagr.com/blog/2015/09/14/quick-justdial-scraper/</link>
      <pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/14/quick-justdial-scraper/</guid>
      <description>So my friend asked me to scrape data from JustDial and give it to him in an excel sheet. I thought let&#39;s give it a try. He needed name of firm, address and phone number of any JustDial URL he wants to scrape. After effectively around 4 hours of work, the below script was created.
Note that the script is dirty. You need to edit the jd_url to search any other URL.</description>
    </item>
    
    <item>
      <title>OpenStack Keystone with Cassandra Database in DevStack</title>
      <link>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</guid>
      <description>Using Cassandra as backing database for OpenStack Keystone was our solution to multi-region deployment problem of OpenStack cloud. This blog post is not to discuss the problem. We are talking about how to have a development environment to play around with Keystone working with a dev Cassandra deployment.
&amp;ldquo;Just run this script and you&#39;re all set!&amp;rdquo; I&#39;ve put together all commands into a script which can be found here:
https://raw.githubusercontent.com/rushiagr/keystone-cassandra/master/keystone-cassandra.sh  If you have a fresh Ubuntu VM, just copy this script into that machine and execute it.</description>
    </item>
    
    <item>
      <title>Apache mod_wsgi parallelization notes</title>
      <link>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</link>
      <pubDate>Fri, 24 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</guid>
      <description>This is my notes on &amp;lsquo;Processes and Threading&amp;rsquo; doc by the author of mod_wsgi module of Apache. This blog post just serves as a &amp;lsquo;quick refresher&amp;rsquo;, and is only useful if you have read the original document but it&#39;s been too long since you read it :)
Apache with mod_wsgi A Python application can run with multiple processes as well as multiple threads with mod_wsgi.
Prefork multiprocessing module Apache creates multiple processes, and each request is handled by one process.</description>
    </item>
    
  </channel>
</rss>