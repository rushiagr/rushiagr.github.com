<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>openstack on rushiagr</title>
    <link>http://www.rushiagr.com/tags/openstack/</link>
    <description>Recent content in openstack on rushiagr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Rushi Agrawal</copyright>
    <lastBuildDate>Sat, 02 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.rushiagr.com/tags/openstack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build VM Images using Diskimage-builder</title>
      <link>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</guid>
      <description>OpenStack has this nice tool diskimage-builderto create virtual machine images without the need of a cloud. These vm images can then be uploaded to cloud (e.g. in Glance for OpenStack cloud), and they become immediately usable. You can also create VMs in virtualbox from these images (though I don&#39;t remember exact steps to make the image work with VirtualBox. Do let me know if you get the VM working with VirtualBox/Vagrant)</description>
    </item>
    
    <item>
      <title>OpenStack Keystone with Cassandra Database in DevStack</title>
      <link>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</guid>
      <description>Using Cassandra as backing database for OpenStack Keystone was our solution to multi-region deployment problem of OpenStack cloud. This blog post is not to discuss the problem. We are talking about how to have a development environment to play around with Keystone working with a dev Cassandra deployment.
&amp;ldquo;Just run this script and you&#39;re all set!&amp;rdquo; I&#39;ve put together all commands into a script which can be found here:
https://raw.githubusercontent.com/rushiagr/keystone-cassandra/master/keystone-cassandra.sh  If you have a fresh Ubuntu VM, just copy this script into that machine and execute it.</description>
    </item>
    
    <item>
      <title>Cache APT packages with Squid proxy</title>
      <link>http://www.rushiagr.com/blog/2015/06/05/cache-apt-packages-with-squid-proxy/</link>
      <pubDate>Fri, 05 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/06/05/cache-apt-packages-with-squid-proxy/</guid>
      <description>TL;DR: Know how to install and set up Squid proxy, so that you can cache packages, and hence save bandwidth if you want to install those packages again and again. Also works if you are already behind a squid proxy.
Problem: Repetitive download. Slow. If you deal with virtual machines a lot, you might know the pain of managing packages on each one of them. Every time I had to create a new VM, I would run apt-get update (to get information about all the latest packages available for my Ubuntu system), apt-get dist-upgrade (to install latest versions of all packages already installed), and also install some packages not present in stock Ubuntu image, like git (yes, it&#39;s 2015 and Ubuntu still doesn&#39;t come pre-installed with git), ipython, bwm-ng and some others.</description>
    </item>
    
    <item>
      <title>iSCSI administration on Ubuntu - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</guid>
      <description>This post get&#39;s you started with iSCSI administration on an Ubuntu machine. Although I have used Ubuntu Trusty (14.04) version, it should work with Precise (12.04) too, with the latest packages.
Prerequisites Make sure you have atleast a little idea of what these terms mean: iSCSI, LUN, IQN, initiator, target and portal. Google and wikipedia are your friends.
A quick summary: There are two parts of iSCSI communication - initiator and target.</description>
    </item>
    
    <item>
      <title>OpenStack Unit Testing Nuggets</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</guid>
      <description>A small post about little things I found out while running unit tests in OpenStack.
Unit-testing setup Everybody knows ./run_tests.sh is used to run the unit tests of an OpenStack project. But, you require to install dependencies before doing it. And installing dependencies might not always succeed. So make sure you install these packages before running pip install -r requirements.txt:
sudo apt-get install build-essential libssl-dev libffi-dev \ python-dev libxslt1-dev libpq-dev python-mysqldb \ libmysqlclient-dev libvirt-dev  Atleast cinder and nova dependencies will get installed properly after this.</description>
    </item>
    
    <item>
      <title>Amazon EC2 API with OpenStack - Developer Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</guid>
      <description>OpenStack has support for EC2 API, that is, you can fire Amazon&#39;s API against an OpenStack cloud and it will still work. This article gets you started with using them locally against DevStack. It is more of a starter guide to a novice.
Fire a DevStack with it&#39;s default settings. See this post for more information on it.
git clone http://github.com/openstack-dev/devstack cd devstack/ ./stack.sh  Source openrc
source openrc  View all EC2 credentials available for the current user (here, demo user in demo tenant)</description>
    </item>
    
    <item>
      <title>DevStack behind proxy</title>
      <link>http://www.rushiagr.com/blog/2014/08/05/devstack-behind-proxy/</link>
      <pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/05/devstack-behind-proxy/</guid>
      <description>I have now seen some people struggling to get DevStack working behind proxy. Some, thinking it is a bug in DevStack, have actually posted patches for it too! Here, I&#39;ll tell you the simple way to get stack.sh complete succesfully from behind a proxy.
By default, devstack will clone from the &amp;lsquo;actual&amp;rsquo; OpenStack git repositories, residing at git://git.openstack.org. Some people might face a problem with it, as DevStack uses git protocol to clone the repo.</description>
    </item>
    
    <item>
      <title>OpenStack in an hour with DevStack</title>
      <link>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</guid>
      <description>&lt;p&gt;So you found out a cool new technology &amp;ldquo;OpenStack&amp;rdquo; and want to try it real quick? Or probably you are hired in a company for your Python skills and now you are supposed to work on OpenStack in the shortest possible time? Fear not, it is not that hard to get started. &lt;a href=&#34;http://devstack.org&#34;&gt;DevStack&lt;/a&gt; is your friend-in-need. No, don&#39;t click that hyperlink just yet :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Playing around with Cinder multi-backend</title>
      <link>http://www.rushiagr.com/blog/2014/01/16/playing-around-with-cinder-backend/</link>
      <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/16/playing-around-with-cinder-backend/</guid>
      <description>&lt;p&gt;With Grizzly release, Cinder got equipped with another major feature &amp;ndash; multi-backends
with filter scheduler. So now you can have more than one storage boxes for block storage
and manage them with one Cinder deployment. Here, I&#39;m going to test it out using our
favourite method &amp;ndash; trying it out on DevStack!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux Screens in DevStack</title>
      <link>http://www.rushiagr.com/blog/2013/06/05/linux-screens-in-devstack/</link>
      <pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/06/05/linux-screens-in-devstack/</guid>
      <description>&lt;p&gt;This blog article explains handling screens within OpenStack running as a DevStack setup. Some useful generic screen commands are also provided at the end.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cinder on DevStack - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</guid>
      <description>&lt;p&gt;This blog post covers all the important commands for OpenStack Cinder - The block storage project.
Although this guide is written based on DevStack, it will work with actual deployment of OpenStack
cloud also (except the DevStack/Linux specific bits).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenStack Tempest quick start with DevStack</title>
      <link>http://www.rushiagr.com/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/</link>
      <pubDate>Wed, 20 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/</guid>
      <description>&lt;p&gt;UPDATE(April 2014): Now when you set up DevStack, Tempest is automatically set up for you.&lt;/p&gt;
&lt;p&gt;This quick start guide explains setting up Tempest with a DevStack environment
for Grizzly release. Most of the information here is taken from
&lt;a href=&#34;http://www.joinfu.com/2012/03/testing-essex-rc1-with-devstack-and-tempest/&#34;&gt;here&lt;/a&gt;, the only difference being this blog post is more recent, and is based on Grizzly.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>