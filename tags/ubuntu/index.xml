<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>rushiagr</title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://www.rushiagr.com/tags/ubuntu/index.xml</link>
    <language>en-us</language>
    <author>Rushi Agrawal</author>
    <copyright>0001 Rushi Agrawal</copyright>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    
    <item>
      <title>Everything you need to know about Tmux copy paste - Ubuntu</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</link>
      <pubDate>Thu, 16 Jun 2016 10:59:02 IST</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</guid>
      <description>

&lt;p&gt;Copying from a Tmux session is something every Tmux user struggled with once.
I&amp;rsquo;m listing out all the stuff I learnt in this blog.&lt;/p&gt;

&lt;p&gt;I tested everything on Ubuntu 14.04 Trusty Tahr, which runs Tmux version 1.8 (I have a few commands included for Tmux version 2+ also)
To check your Tmux version, run &lt;code&gt;tmux -V&lt;/code&gt;. If you have a Mac, see
&lt;a href=&#34;http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;know-about-copy-buffers&#34;&gt;Know about copy buffers&lt;/h2&gt;

&lt;p&gt;When you do a &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;, the stuff you copy is stored in your computer&amp;rsquo;s
buffer, called &amp;lsquo;clipboard&amp;rsquo; from where you can paste anywhere by doing a
&lt;code&gt;CTRL&lt;/code&gt;+&amp;lsquo;v&amp;rsquo;. Tmux has it&amp;rsquo;s own buffer for coppying, which we&amp;rsquo;ll
call &amp;lsquo;tmux buffer&amp;rsquo;. Our goal is to understand in a Tmux session how to copy to
tmux buffer, and also to clipboard.&lt;/p&gt;

&lt;p&gt;You can always copy stuff into clipboard while usin Tmux. &amp;ldquo;Why do I need a Tmux
buffer then&amp;rdquo;, you might wonder. This is because, in your shell, the text you
want to select might not fit in your current screen (e.g. output of &lt;code&gt;cat
/etc/passwd&lt;/code&gt; file). If you copy normally, you will only be able to copy text
visible on your screen, and not the output which is &amp;lsquo;scrolled up&amp;rsquo; due to a lot
of output.&lt;/p&gt;

&lt;h2 id=&#34;tmux-copy-paste-the-defaults&#34;&gt;Tmux copy-paste - the defaults&lt;/h2&gt;

&lt;p&gt;The defaults are slighly involved, so this section is purely for informational purposes, and shouldn&amp;rsquo;t be memorized. Skipping this section is perfectly okay.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enter &amp;lsquo;copy mode&amp;rsquo; by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Use the arrow keys to go to the position from where you want to start copying. Press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;SPACE&lt;/code&gt; to start copying.&lt;/li&gt;
&lt;li&gt;Use arrow keys to go to the end of text you want to copy. Press &lt;code&gt;ALT&lt;/code&gt;+&lt;code&gt;w&lt;/code&gt; or &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;w&lt;/code&gt; to copy into Tmux buffer.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt; to paste in a possibly different Tmux pane/window.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;tmux-vim-bindings-for-copying-into-tmux-buffer&#34;&gt;Tmux Vim-bindings for copying into tmux buffer&lt;/h2&gt;

&lt;p&gt;Adding configuration described in this section will give you easier shortcuts
for copy-pasting in Tmux. Moreover, these shortcuts work very similar to Vim&amp;rsquo;s
copy-pasting shortcuts!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Add these lines in a file by name &lt;code&gt;~/.tmux.conf&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind P paste-buffer
bind-key -t vi-copy &#39;v&#39; begin-selection
bind-key -t vi-copy &#39;y&#39; copy-selection
bind-key -t vi-copy &#39;r&#39; rectangle-toggle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that for a newer tmux version (2.4 and above I think, not sure), the last three lines should be replaced with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now you can enter copy mode by pressing &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;[&lt;/code&gt;, and then go
to start point, press &amp;lsquo;v&amp;rsquo; and start copying. After you have selected text
you want to copy, you can just press &amp;lsquo;y&amp;rsquo; (or the default &amp;lsquo;enter&amp;rsquo; key) to
copy the text into Tmux&amp;rsquo;s buffer. This is exactly the commands you would use
in Vim to copy text.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To paste, press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;P&lt;/code&gt;. Note that it&amp;rsquo;s capital &amp;lsquo;p&amp;rsquo; (i.e.
&lt;code&gt;SHIFT&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;). This again is similar to Vim&amp;rsquo;s shortcut &amp;lsquo;p&amp;rsquo; for paste, though
not exactly similar. You&amp;rsquo;ll realize in your Tmux journey why didn&amp;rsquo;t we use a
small &amp;lsquo;p&amp;rsquo; instead of a capital &amp;lsquo;P&amp;rsquo; ;)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;copy-from-tmux-buffer-to-system-buffer-clipboard&#34;&gt;Copy from tmux buffer to system buffer (clipboard)&lt;/h2&gt;

&lt;p&gt;For this to happen, you need to install &lt;code&gt;xclip&lt;/code&gt; on your computer. Do it as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install --assume-yes xclip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, you need to add this line in &lt;code&gt;~/.tmux.conf&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind -t vi-copy y copy-pipe &amp;quot;xclip -sel clip -i&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now close all your tmux sessions. From now onwards, whatever you copy in Tmux
buffer will also land into system clipboard.&lt;/p&gt;

&lt;h2 id=&#34;tmux-copy-with-mouse-drag&#34;&gt;Tmux copy with mouse drag!&lt;/h2&gt;

&lt;p&gt;You can enable &amp;lsquo;mouse mode&amp;rsquo;, using which you can copy text into tmux buffer by
mouse drag. For doing that, you just need to add this line to your
&lt;code&gt;~/.tmux.conf&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setw -g mode-mouse on
set -g mouse-select-window on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that if your tmux version is 2.1 or above, you need to include the following line instead of the above two&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set -g mouse on
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;but-now-i-can-t-do-normal-copy-paste-with-mouse&#34;&gt;But now I can&amp;rsquo;t do normal copy-paste with mouse!&lt;/h2&gt;

&lt;p&gt;You&amp;rsquo;ll notice that now all your selections will go to tmux buffer, and not
clipboard buffer. Of course, you can enable copying to system clipboard as
described in a section above. However, you can notice that you can&amp;rsquo;t double
click to select a complete word with vi&amp;rsquo;s tmux copy-pasting shortcuts + mouse
option enabled.&lt;/p&gt;

&lt;p&gt;Just press &lt;code&gt;SHIFT&lt;/code&gt; button when copying, and now you can copy as if Tmux
doesn&amp;rsquo;t exist! :)&lt;/p&gt;

&lt;h2 id=&#34;copy-from-a-remote-server&#34;&gt;Copy from a remote server&lt;/h2&gt;

&lt;p&gt;Install &lt;code&gt;xclip&lt;/code&gt; on the remote Ubuntu/Linux server, and add the line mentioned
above (&lt;code&gt;bind -t vi-copy y copy-pipe &amp;quot;xclip -sel clip -i&amp;quot;&lt;/code&gt;) to &lt;code&gt;~/.tmux.conf&lt;/code&gt; on
that server. Also, pass &lt;code&gt;-X&lt;/code&gt; option when making SSH connection to the server,
like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -X remoteuser@remotehost
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And after that everything you copy into remote&amp;rsquo;s Tmux buffer will get copied
over to local clipboard. Magic!&lt;/p&gt;

&lt;h2 id=&#34;other-information&#34;&gt;Other information&lt;/h2&gt;

&lt;p&gt;Done! Don&amp;rsquo;t forget to comment if you know something worth letting everybody
know! Thank you:)&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Puppet installation from modules</title>
      <link>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</link>
      <pubDate>Sun, 14 Sep 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</guid>
      <description>&lt;p&gt;A quick example of how to use Puppet to install and manage MySQL. We&amp;rsquo;ll
download required Puppet modules from their git repositories.&lt;/p&gt;

&lt;p&gt;Again, everything is tried on Ubuntu (14.04).&lt;/p&gt;

&lt;p&gt;Make sure &lt;code&gt;hostname -f&lt;/code&gt; shows your FQDN. Then install puppet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install puppet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We&amp;rsquo;ll use &lt;code&gt;git submodules&lt;/code&gt; to manage different git repositories. But first,
create our own repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir puppet-mysql
cd puppet-mysql
git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install Puppet modules &lt;code&gt;stdlib&lt;/code&gt; and &lt;code&gt;mysql&lt;/code&gt; into directory &lt;code&gt;modules&lt;/code&gt; as git
submodules.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule add https://github.com/puppetlabs/puppetlabs-stdlib.git modules/stdlib
git submodule add https://github.com/puppetlabs/puppetlabs-mysql.git modules/mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now create a site.pp file in the root directory of this repository, with the following contents&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;node default {
    class { &#39;mysql::server&#39;:
        root_password =&amp;gt; &#39;nova&#39;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we&amp;rsquo;ll apply this &lt;code&gt;site.pp&lt;/code&gt; file to the system. As our modules directory is
different from Puppet&amp;rsquo;s default, we&amp;rsquo;ll need to specify that while running
Puppet.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo puppet apply site.pp --modulepath modules/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To see the action in more detail, also pass the &lt;code&gt;--debug&lt;/code&gt; option to the above
execution&lt;/p&gt;

&lt;p&gt;And you&amp;rsquo;re all set.&lt;/p&gt;

&lt;p&gt;Now from your commandline, you can try to access mysql and it will work!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -uroot -pnova
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done! Cheers!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>iSCSI administration on Ubuntu - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</guid>
      <description>

&lt;p&gt;This post get&amp;rsquo;s you started with iSCSI administration on an Ubuntu machine.
Although I have used Ubuntu Trusty (14.04) version, it should work with Precise
(12.04) too, with the latest packages.&lt;/p&gt;

&lt;h4 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h4&gt;

&lt;p&gt;Make sure you have atleast a little idea of what these terms
mean: iSCSI, LUN, IQN, initiator, target and portal. Google and wikipedia are
your friends.&lt;/p&gt;

&lt;h4 id=&#34;a-quick-summary&#34;&gt;A quick summary:&lt;/h4&gt;

&lt;p&gt;There are two parts of iSCSI communication - initiator and target. So let&amp;rsquo;s take an example. There is a storage server in your
company, where you have a &amp;lsquo;drive&amp;rsquo; for your team. The storage server is the
&amp;lsquo;target&amp;rsquo;, and your laptop, where you&amp;rsquo;ll mount the drive to access it&amp;rsquo;s contents
is the &amp;lsquo;initiator&amp;rsquo;. In other words, target is like a &amp;lsquo;server&amp;rsquo; which stores
data, and allows initiators (think &amp;lsquo;clients&amp;rsquo;) to connect to it.&lt;/p&gt;

&lt;p&gt;In this short hands-on introduction, we&amp;rsquo;ll use the same Ubuntu machine as
target as well as initiator. We can use a file as the storage behind the
target, but this post also shows how to use LVM logical volume as the backing
store for the iSCSI target.&lt;/p&gt;

&lt;p&gt;Actually, we&amp;rsquo;ll back the logical volume (LV) with a file, as shown in
&lt;a href=&#34;http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/&#34;&gt;this&lt;/a&gt;,
so essentially we&amp;rsquo;re just using &amp;lsquo;file as a backing store for targets&amp;rsquo; but in a
roundabout way :)&lt;/p&gt;

&lt;p&gt;OK, let&amp;rsquo;s get started. Make sure you execute all the following commands as root
user.&lt;/p&gt;

&lt;p&gt;First install the required dependencies&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install lvm2 tgt open-iscsi
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;initialize-logical-volume&#34;&gt;Initialize logical volume&lt;/h4&gt;

&lt;p&gt;Create a file of 1GB, create a volume group over it, and then over it, create a
400MB logical volume, and see if it got created or not&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# truncate --size 1G backingfile
root@ra:~# sudo losetup --find --show backingfile 
/dev/loop0
root@ra:~# sudo vgcreate myvg /dev/loop0
  No physical volume label read from /dev/loop0
  Physical volume &amp;quot;/dev/loop0&amp;quot; successfully created
  Volume group &amp;quot;myvg&amp;quot; successfully created
root@ra:~# sudo lvcreate --size 400M --name mylv myvg
  Logical volume &amp;quot;mylv&amp;quot; created
root@ra:~# lvs
  LV   VG   Attr      LSize   Pool Origin Data%  Move Log Copy% Convert
  mylv myvg -wi-a---- 400.00m                                           
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;target-administration&#34;&gt;Target administration&lt;/h4&gt;

&lt;p&gt;Now let&amp;rsquo;s create a target, with target ID 1, and give it an IQN (iSCSI
Qualified Name) &lt;code&gt;iqn.2001-04.example.com:your.first.iscsi.target&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tgtadm --lld iscsi --op new --mode target --tid 1 -T iqn.2001-04.example.com:your.first.iscsi.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List the target, see it&amp;rsquo;s properties:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# tgtadm --lld iscsi --op show --mode target
Target 1: iqn.2001-04.example.com:your.first.iscsi.target
    System information:
        Driver: iscsi
        State: ready
    I_T nexus information:
    LUN information:
        LUN: 0
            Type: controller
            SCSI ID: IET     00010000
            SCSI SN: beaf10
            Size: 0 MB, Block size: 1
            Online: Yes
            Removable media: No
            Prevent removal: No
            Readonly: No
            SWP: No
            Thin-provisioning: No
            Backing store type: null
            Backing store path: None
            Backing store flags: 
    Account information:
    ACL information:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see there is a LUN, LUN 0 attached to the target. Let&amp;rsquo;s attach our
logical volume &lt;code&gt;mylv&lt;/code&gt; as LUN 1 to the target.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tgtadm --lld iscsi --op new --mode logicalunit --tid 1 --lun 1 -b /dev/myvg/mylv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, actually you could&amp;rsquo;ve attached a flat file as a LUN to the target. So you
could&amp;rsquo;ve skipped all the intermediate steps and attached the &lt;code&gt;backingfile&lt;/code&gt;
directly to the target like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tgtadm --lld iscsi --op new --mode logicalunit --tid 1 --lun 1 -b backingfile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A backing file would&amp;rsquo;ve been good enough for this demo, but you know the benefits of logical volume isn&amp;rsquo;t it? :)&lt;/p&gt;

&lt;p&gt;Okay, let&amp;rsquo;s see if the LUN got created:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# tgtadm --lld iscsi --op show --mode target
Target 1: iqn.2001-04.example.com:your.first.iscsi.target
    System information:
        Driver: iscsi
        State: ready
    I_T nexus information:
    LUN information:
        LUN: 0
            Type: controller
            SCSI ID: IET     00010000
            SCSI SN: beaf10
            Size: 0 MB, Block size: 1
            Online: Yes
            Removable media: No
            Prevent removal: No
            Readonly: No
            SWP: No
            Thin-provisioning: No
            Backing store type: null
            Backing store path: None
            Backing store flags: 
        LUN: 1
            Type: disk
            SCSI ID: IET     00010001
            SCSI SN: beaf11
            Size: 419 MB, Block size: 512
            Online: Yes
            Removable media: No
            Prevent removal: No
            Readonly: No
            SWP: No
            Thin-provisioning: No
            Backing store type: rdwr
            Backing store path: /dev/myvg/mylv
            Backing store flags: 
    Account information:
    ACL information:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s allow all initiators to bind to this target:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tgtadm --lld iscsi --op bind --mode target --tid 1 -I ALL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We&amp;rsquo;re done with the &amp;lsquo;target&amp;rsquo; side now. You can check, using &lt;code&gt;netstat&lt;/code&gt; that port
3260, the default port, is now open. Note that all our commands so far started with
&lt;code&gt;tgtadm&lt;/code&gt;, i.e., the target administration utility.&lt;/p&gt;

&lt;h4 id=&#34;initiator-administration&#34;&gt;Initiator administration&lt;/h4&gt;

&lt;p&gt;Now let&amp;rsquo;s start from the &amp;lsquo;initiator&amp;rsquo; end. We&amp;rsquo;ll behave as if we&amp;rsquo;re a client
trying to connect to the server &amp;ndash; the target.&lt;/p&gt;

&lt;p&gt;Discover all the targets on our local machine (&lt;code&gt;127.0.0.1&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# sudo iscsiadm --mode discovery --type sendtargets --portal 127.0.0.1
127.0.0.1:3260,1 iqn.2001-04.example.com:your.first.iscsi.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From the client perspective, we&amp;rsquo;re now able to see a target. Let&amp;rsquo;s login into
that target&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# sudo iscsiadm --mode node --targetname iqn.2001-04.example.com:your.first.iscsi.target --portal 127.0.0.1:3260 --login
Logging in to [iface: default, target: iqn.2001-04.example.com:your.first.iscsi.target, portal: 127.0.0.1,3260] (multiple)
Login to [iface: default, target: iqn.2001-04.example.com:your.first.iscsi.target, portal: 127.0.0.1,3260] successful.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After logging in, the target will be visible in the client&amp;rsquo;s system as a new
device. Running a &lt;code&gt;fdisk -l&lt;/code&gt; shows that there is a new device &lt;code&gt;/dev/sda&lt;/code&gt; is now
present.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# fdisk -l

Disk /dev/vda: 57.1 GB, 57076908032 bytes
255 heads, 63 sectors/track, 6939 cylinders, total 111478336 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x0001cd46

   Device Boot      Start         End      Blocks   Id  System
/dev/vda1   *        2048   106520575    53259264   83  Linux
/dev/vda2       106522622   111476735     2477057    5  Extended
/dev/vda5       106522624   111476735     2477056   82  Linux swap / Solaris

Disk /dev/mapper/myvg-mylv: 419 MB, 419430400 bytes
255 heads, 63 sectors/track, 50 cylinders, total 819200 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/mapper/myvg-mylv doesn&#39;t contain a valid partition table

Disk /dev/sda: 419 MB, 419430400 bytes
13 heads, 62 sectors/track, 1016 cylinders, total 819200 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00000000

Disk /dev/sda doesn&#39;t contain a valid partition table
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we just need to format this device with a filesystem, say EXT4, and then
mount it at some location to start using it!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@ra:~# sudo mkfs.ext4 /dev/sda
mke2fs 1.42.9 (4-Feb-2014)
/dev/sda is entire device, not just one partition!
Proceed anyway? (y,n) y
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
Stride=0 blocks, Stripe width=0 blocks
102400 inodes, 409600 blocks
20480 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=67633152
50 block groups
8192 blocks per group, 8192 fragments per group
2048 inodes per group
Superblock backups stored on blocks: 
    8193, 24577, 40961, 57345, 73729, 204801, 221185, 401409

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done 

root@ra:~# mkdir tempmount
root@ra:~# mount /dev/sda tempmount/
root@ra:~# cd tempmount/
root@ra:~/tempmount# ls
lost+found
root@ra:~/tempmount# 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;destruction&#34;&gt;Destruction&lt;/h4&gt;

&lt;p&gt;The simplest way to get rid of all the things you&amp;rsquo;ve created is to unmount the
device, and restart the system.&lt;/p&gt;

&lt;p&gt;Aaand done!&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Open Source Puppet - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</link>
      <pubDate>Sat, 12 Apr 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</guid>
      <description>

&lt;p&gt;This post aims to be your quickest guide to get started with Puppet. We&amp;rsquo;ll be using the open source version of Puppet. An hour of spare time and two Ubuntu machines (physical or virtual doesn&amp;rsquo;t matter) is all that is needed.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;quick-introduction&#34;&gt;Quick Introduction&lt;/h2&gt;

&lt;p&gt;Lets say you want to install and run apache server on one of the machines in your lab. On another, you want to create a new user. On a third machine, you want to install MySQL, and allow access to this machine only from the first server. Seems like a lot of manual work isn&amp;rsquo;t it? The power of Puppet is, you can specify all these tasks in a file, called &amp;lsquo;Puppet manifest&amp;rsquo;, and then execute it. Everything will be set up for you just as you wanted! Now what makes this &amp;lsquo;I care about the end result, not the process&amp;rsquo; approach really powerful is you can &amp;lsquo;apply&amp;rsquo; this manifest over and over again to get the same end result. You can easily modify this manifest file, extend it, and manage it under version control, just like you would with a piece of software. Welcome to the world of IT automation :)&lt;/p&gt;

&lt;p&gt;Although the syntax of a Puppet manifest is Ruby-ish, no knowledge of Ruby is required at all (I don&amp;rsquo;t know Ruby).&lt;/p&gt;

&lt;p&gt;There is a whole lot of things you can do with Puppet. Here, we&amp;rsquo;ll just get us started with it. Once you are through this post, you can head over to Puppet Labs&amp;rsquo; documents and tutorials, for more on &amp;ldquo;how&amp;rdquo;s and &amp;ldquo;why&amp;rdquo;s of Puppet.&lt;/p&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;You just require two Ubuntu machines connected to each other. One will be the Puppet &amp;lsquo;master&amp;rsquo; node (the machine which will take care of managing the configuration and state of all the machines in our deployment), the other one &amp;lsquo;slave&amp;rsquo; (which unfortunately is the only actual machine in demo deployment :) ).&lt;/p&gt;

&lt;p&gt;Here I am using two  virtual machines, but you can create one virtual machine and use your host machine as the other one. The hostnames of the master and slave in my setup are &lt;code&gt;puppet-master&lt;/code&gt; and &lt;code&gt;puppet-agent&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Make sure both the machines are ping-able from each other &amp;ndash; by their IP as well as hostnames (e.g. &lt;code&gt;ping 123.123.123.123&lt;/code&gt; and &lt;code&gt;ping puppet-master&lt;/code&gt;). Make sure your /etc/hosts file looks something like this to achieve that:&lt;/p&gt;

&lt;p&gt;(&lt;code&gt;192.168.56.130&lt;/code&gt; and &lt;code&gt;192.168.56.131&lt;/code&gt; are the IP addresses of externally-visible interfaces of hosts &lt;code&gt;puppet-master&lt;/code&gt; and &lt;code&gt;puppet-agent&lt;/code&gt; respectively)&lt;/p&gt;

&lt;p&gt;Master:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ cat /etc/hosts
127.0.0.1   localhost
127.0.1.1   puppet-master

192.168.56.131  puppet-agent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Slave:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-agent:~$ cat /etc/hosts
127.0.0.1   localhost
127.0.1.1   puppet-agent

192.168.56.130  puppet-master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;getting-the-hands-dirty-puppet-cli&#34;&gt;Getting the hands dirty &amp;ndash; Puppet CLI&lt;/h2&gt;

&lt;p&gt;Install &lt;code&gt;puppetmaster&lt;/code&gt; package on the master node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install puppetmaster
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List all the users on the current system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;puppet resource user --list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So basically a &amp;lsquo;user&amp;rsquo; is a &amp;lsquo;resource&amp;rsquo; in Puppet terminology. Now only list a specific resource. &lt;code&gt;r&lt;/code&gt; is the current user in my case.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ puppet resource user r
user { &#39;r&#39;:
  ensure  =&amp;gt; &#39;present&#39;,
  comment =&amp;gt; &#39;r,,,&#39;,
  gid     =&amp;gt; &#39;1000&#39;,
  groups  =&amp;gt; [&#39;adm&#39;, &#39;cdrom&#39;, &#39;sudo&#39;, &#39;dip&#39;, &#39;plugdev&#39;, &#39;lpadmin&#39;, &#39;sambashare&#39;],
  home    =&amp;gt; &#39;/home/r&#39;,
  shell   =&amp;gt; &#39;/bin/bash&#39;,
  uid     =&amp;gt; &#39;1000&#39;,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice the syntax. Resource &amp;lsquo;r&amp;rsquo; is of type &amp;lsquo;user&amp;rsquo;, with &amp;lsquo;ensure&amp;rsquo;, &amp;lsquo;comment&amp;rsquo;, etc as keys/attributes, and &amp;lsquo;present&amp;rsquo;, &amp;lsquo;r,,,&amp;rsquo; as values for those attributes.&lt;/p&gt;

&lt;p&gt;You can change the value using the Puppet CLI&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet resource user r comment=&#39;some text missing&#39;
notice: /User[r]/comment: comment changed &#39;r,,,&#39; to &#39;some text missing&#39;
user { &#39;r&#39;:
  ensure  =&amp;gt; &#39;present&#39;,
  comment =&amp;gt; &#39;some text missing&#39;,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a new user with specified key-value pairs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet resource user katie ensure=present shell=/bin/bash
notice: /User[katie]/ensure: created
user { &#39;katie&#39;:
  ensure =&amp;gt; &#39;present&#39;,
  shell  =&amp;gt; &#39;/bin/bash&#39;,
}
r@puppet-master:~$ sudo puppet resource user katie 
user { &#39;katie&#39;:
  ensure           =&amp;gt; &#39;present&#39;,
  gid              =&amp;gt; &#39;1001&#39;,
  home             =&amp;gt; &#39;/home/katie&#39;,
  password         =&amp;gt; &#39;!&#39;,
  password_max_age =&amp;gt; &#39;99999&#39;,
  password_min_age =&amp;gt; &#39;0&#39;,
  shell            =&amp;gt; &#39;/bin/bash&#39;,
  uid              =&amp;gt; &#39;1001&#39;,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remove the newly created user, but this time, let&amp;rsquo;s put this information into a file &lt;code&gt;katie_remove.pp&lt;/code&gt; and ask Puppet to &amp;lsquo;apply&amp;rsquo; this file and thus removing the user &amp;lsquo;katie&amp;rsquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ cat katie_remove.pp 
user {&#39;katie&#39;:
    ensure =&amp;gt; absent,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apply this Puppet manifest&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet apply katie_absent.pp 
warning: Could not retrieve fact fqdn
notice: /Stage[main]//User[katie]/ensure: removed
notice: Finished catalog run in 0.47 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puppet&amp;rsquo;s description of user &amp;lsquo;katie&amp;rsquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet resource user katie
  user { &#39;katie&#39;:
  ensure =&amp;gt; &#39;absent&#39;,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is now same as that of a non-existent user.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet resource user absent-user
  user { &#39;absent-user&#39;:
  ensure =&amp;gt; &#39;absent&#39;,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That is, the user &amp;lsquo;katie&amp;rsquo; is now deleted. You can see that the &amp;lsquo;ensure&amp;rsquo; attribute can be used to make sure a user (or in general, any &amp;lsquo;resource&amp;rsquo;, is present, or absent).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Ignore the warning which is printed while applying a manifest from a file. Or if you are bothered by it popping up all the time, in the &lt;code&gt;/etc/hosts&lt;/code&gt; file, change&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;127.0.1.1   puppet-master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;127.0.1.1   puppet-master.rushiagr.com puppet-master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;where you can choose a domain name of your own choice in place of &lt;code&gt;.rushiagr.com&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;puppet-modules&#34;&gt;Puppet modules&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;puppet module&lt;/code&gt; doesn&amp;rsquo;t work on Precise (Ubuntu 12.04). You need to install ruby, and gems, etc. Too much of a hassle. So I&amp;rsquo;ll just post commands here which work for a higher version of Ubuntu.&lt;/p&gt;

&lt;p&gt;Install standard library:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo puppet module install puppetlabs/stdlib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;View all the installed modules&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet module list
/etc/puppet/modules
├── puppetlabs-mysql (v2.2.1)
├── puppetlabs-ntp (v3.0.2)
└── puppetlabs-stdlib (v4.1.0)
/usr/share/puppet/modules (no modules installed)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All the modules, and all other information in the system goes in &lt;code&gt;/etc/puppet&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Modules installed via &lt;code&gt;sudo&lt;/code&gt; will be visible when you perform &lt;code&gt;puppet module list&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt; only. Same for non-&lt;code&gt;sudo&lt;/code&gt; use.&lt;/p&gt;

&lt;h2 id=&#34;puppet-in-master-client-configuration&#34;&gt;Puppet in master-client configuration&lt;/h2&gt;

&lt;p&gt;Everything we did so far concerned with a single machine. Let&amp;rsquo;s now introduce another machine &amp;ndash; Puppet agent.&lt;/p&gt;

&lt;p&gt;Note that you need to set FQDNs for both the machines. See the step above, where we suppressed a warning.&lt;/p&gt;

&lt;p&gt;First, we&amp;rsquo;ll need to install &lt;code&gt;puppet&lt;/code&gt; package (the agent) on the agent node.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install puppet
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, the Puppet agent service will not be running.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-agent:~$ sudo service puppet status
 * agent is not running
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before starting it, change &lt;code&gt;START=no&lt;/code&gt; to &lt;code&gt;START=yes&lt;/code&gt; in &lt;code&gt;/etc/default/puppet&lt;/code&gt; file, to start the agent service by default when the system starts/reboots.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo sed -i s/START=no/START=yes/g /etc/default/puppet 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And add these two lines at the end of &lt;code&gt;/etc/puppet/puppet.conf&lt;/code&gt; to allow the agent to discover the master by its FQDN.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[agent]
server = puppet-master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now start the Puppet agent service&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-agent:~$ sudo service puppet start
 * Starting puppet agent                                   [ OK ] 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I also make sure that clocks of both the machines are synchronized by running &lt;code&gt;ntpdate&lt;/code&gt; on both master and slave. I am not sure if this is required, but doesn&amp;rsquo;t do any harm.
    sudo ntpdate pool.ntp.org&lt;/p&gt;

&lt;p&gt;Now the master needs to sign the certs by agent.&lt;/p&gt;

&lt;p&gt;Execute this command on agent node.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo puppet agent --test --waitforcert 60
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now hop over to the master node, and retrieve the list of certs waiting to be signed&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet cert --list
  &amp;quot;puppet-agent.rushiagr.com&amp;quot; (EB:0F:E4:14:6F:B2:7E:85:7E:21:26:C4:78:80:58:E1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sign the cert&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-master:~$ sudo puppet cert sign puppet-agent.rushiagr.com
notice: Signed certificate request for puppet-agent.rushiagr.com
notice: Removing file Puppet::SSL::CertificateRequest puppet-agent.rushiagr.com at &#39;/var/lib/puppet/ssl/ca/requests/puppet-agent.rushiagr.com.pem&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we are ready to go. Let&amp;rsquo;s create a file (&amp;lsquo;Puppet manifest&amp;rsquo;) on master where we write that: 1. We want apache package to be installed. 2. Once we ensure that the package is installed, we want to start the apache service. We&amp;rsquo;ll name the file &lt;code&gt;site.pp&lt;/code&gt;, which is the &amp;lsquo;main&amp;rsquo; configuration file for Puppet. We&amp;rsquo;ll put it into &lt;code&gt;/etc/puppet/manifests&lt;/code&gt; directory. Note how we can specify a dependency between resources.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package { &#39;apache2&#39;:
    ensure =&amp;gt; installed
}

service { &#39;apache2&#39;:
    ensure =&amp;gt; true,
    enable =&amp;gt; true,
    require =&amp;gt; Package[&#39;apache2&#39;]
}       
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puppet works on &amp;lsquo;push&amp;rsquo; model, meaning configurations are pulled by agents at periodic intervals. I think the default periodic interval is 30 minutes. Alternatively, you can pull from agent at your own will, any time. Let&amp;rsquo;s do that now. Execute this command on the agent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-agent:~$ sudo puppet agent --test
info: Caching catalog for puppet-agent.rushiagr.com
info: Applying configuration version &#39;1397343482&#39;
notice: /Stage[main]//Package[apache2]/ensure: ensure changed &#39;purged&#39; to &#39;present&#39;
notice: Finished catalog run in 6.30 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you can see the apache server running!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@puppet-agent:~$ sudo service apache2 status
Apache2 is running (pid 5874).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ta! Da!&lt;/p&gt;

&lt;p&gt;Please comment if you have any ideas to make this post easier for the newbies to understand.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is just a quick start guide. There are excellent resources and docs at &lt;a href=&#34;http://puppetlabs.com&#34;&gt;puppetlabs.com&lt;/a&gt;. I have their beginner&amp;rsquo;s &lt;a href=&#34;https://dl.dropboxusercontent.com/u/42084476/OpenStack/learningpuppet.pdf&#34;&gt;PDF&lt;/a&gt; saved in my DropBox.
Around 80 pages long, it covers almost every aspect of basic Puppet. The only problem with this guide is it is (I think deliberately) made to work only with the Enterprise Puppet version, but you can always refer back to this post to know how to set the open source version :)&lt;/p&gt;

&lt;p&gt;If you mess up the cert signing process, here is a quick and dirty way to get it resolved. On master:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo puppet cert clean puppet-agent.rushiagr.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On both master and slave:
    sudo rm -r /var/lib/puppet/ssl
    sudo service puppet restart&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>OpenStack in an hour with DevStack</title>
      <link>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</guid>
      <description>&lt;p&gt;So you found out a cool new technology &amp;ldquo;OpenStack&amp;rdquo; and want to try it real quick? Or probably you are hired in a company for your Python skills and now you are supposed to work on OpenStack in the shortest possible time? Fear not, it is not that hard to get started. &lt;a href=&#34;http://devstack.org&#34;&gt;DevStack&lt;/a&gt; is your friend-in-need. No, don&amp;rsquo;t click that hyperlink just yet :)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;To put it in a sentence, DevStack is &amp;ldquo;OpenStack in a box&amp;rdquo;. You just need a popular Linux based distribution with 2GB RAM and you&amp;rsquo;re all set to start. DevStack is basically a set of scripts which will install all the important OpenStack services in your computer. For this, it will first download all the essential packages, pull in the OpenStack code from various OpenStack projects, and set everything up for you to try out all of it.&lt;/p&gt;

&lt;p&gt;NOTE: DO NOT set up DevStack for production clouds.&lt;/p&gt;

&lt;p&gt;Here, in this tutorial, I&amp;rsquo;ll be setting up DevStack in a 64-bit Ubuntu 12.04 virtual machine. All your virtual machine needs to have is an Internet connection, and 2GB RAM.&lt;/p&gt;

&lt;p&gt;NOTE: Do not run any of the script as a root user, unless specified otherwise explicitly.&lt;/p&gt;

&lt;h3 id=&#34;getting-started&#34;&gt;Getting started&lt;/h3&gt;

&lt;p&gt;Install git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Clone the DevStack repository into your computer and &lt;code&gt;cd&lt;/code&gt; into it. This is the code which will set up the cloud for you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone http://github.com/openstack-dev/devstack
cd devstack/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you do a &lt;code&gt;ls&lt;/code&gt;, you will see &lt;code&gt;stack.sh&lt;/code&gt; and &lt;code&gt;unstack.sh&lt;/code&gt; files in there. These are the most important files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@ra:~/devstack$ ls
accrc         exercises         HACKING.rst  rejoin-stack.sh  tests
AUTHORS       exercise.sh       lib          run_tests.sh     tools
clean.sh      extras.d          LICENSE      samples          unstack.sh
driver_certs  files             localrc      stackrc
eucarc        functions         openrc       stack-screenrc
exerciserc    functions-common  README.md    stack.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;File &lt;code&gt;stack.sh&lt;/code&gt; is the most important of them all. Running this script will:
1. Pull OpenStack code from all of it&amp;rsquo;s important projects&amp;rsquo; repositories and put them in &lt;code&gt;/opt/stack&lt;/code&gt; directory. TODO: say that this directory is configurable.
2. Installs all the dependencies these OpenStack projects have &amp;ndash; both in the form of Ubuntu packages, and also the Python &amp;ldquo;PIP&amp;rdquo; repositories.
3. Starts all the OpenStack services with a default configuration.&lt;/p&gt;

&lt;p&gt;Bringing down the DevStack-created cloud is easy too &amp;ndash; just invoke the &lt;code&gt;unstack.sh&lt;/code&gt; script, and all the services are down again, freeing up the memory that these services consume. Let&amp;rsquo;s get started before I start writing at lengths again :)&lt;/p&gt;

&lt;p&gt;Execute the &lt;code&gt;stack.sh&lt;/code&gt; script&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;r@ra:~/devstack$ ./stack.sh

################################################################################
ENTER A PASSWORD TO USE FOR THE DATABASE.
################################################################################
This value will be written to your localrc file so you don&#39;t have to enter it
again.  Use only alphanumeric characters.
If you leave this blank, a random default value will be used.
Enter a password now:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to add the MySQL database password here. Don&amp;rsquo;t worry if you have not installed MySQL on this system. Just provide a password here and this script will install MySQL and use this password there.&lt;/p&gt;

&lt;p&gt;As you can see, MySQL is where all the important data is stored by different OpenStack components. You can peep into the database later if you want to see what data is stored, etc.&lt;/p&gt;

&lt;p&gt;Also, note the first line after the heading. If the &lt;code&gt;stack.sh&lt;/code&gt; script finishes successfully, all the inputs you specify (this, and four more after this) will be written to a file named as &lt;code&gt;localrc&lt;/code&gt;. All the local configuration setting pertaining to the DevStack environment will go in this file. I&amp;rsquo;ll provide you with details of all of them very soon. Have patience :)&lt;/p&gt;

&lt;p&gt;For the other four prompts, enter &amp;lsquo;nova&amp;rsquo;. Just use &amp;lsquo;nova&amp;rsquo; for this MySQL prompt too if it is not installed yet.&lt;/p&gt;

&lt;p&gt;You will see that the script now starts spewing a lot of output on our screen. It is downloading all the required code, packages, dependencies, etc, and setting everything up for us &amp;ndash; databases, services, network, configurations, message queues. Pretty much everything. For the first time, the script might take about 30-minutes, but it again depends upon the speed of your Internet connection, and the processing speed of your virtual machine. From the next time, it can provide you with a cloud in less than 10 minutes!&lt;/p&gt;

&lt;p&gt;If the script ends with something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+ merge_config_group /home/r/devstack/local.conf post-extra
+ local localfile=/home/r/devstack/local.conf
+ shift
+ local matchgroups=post-extra
+ [[ -r /home/r/devstack/local.conf ]]
+ return 0
+ [[ -x /home/r/devstack/local.sh ]]
+ service_check
+ local service
+ local failures
+ SCREEN_NAME=stack
+ SERVICE_DIR=/opt/stack/status
+ [[ ! -d /opt/stack/status/stack ]]
++ ls &#39;/opt/stack/status/stack/*.failure&#39;
++ /bin/true
+ failures=
+ &#39;[&#39; -n &#39;&#39; &#39;]&#39;
+ set +o xtrace



Horizon is now available at http://10.0.2.15/
Keystone is serving at http://10.0.2.15:5000/v2.0/
Examples on using novaclient command line is in exercise.sh
The default users are: admin and demo
The password: nova
This is your host ip: 10.0.2.15
stack.sh completed in 269 seconds.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That means your machine is now home to a Cloud! :)&lt;/p&gt;

&lt;p&gt;Here, &lt;code&gt;10.0.2.15&lt;/code&gt; is the IP of my first network interface. Don&amp;rsquo;t worry about that for now.&lt;/p&gt;

&lt;p&gt;So now you can head over to my blog &lt;a href=&#34;http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/&#34;&gt;Cinder on DevStack - Quick Start&lt;/a&gt; to get started with creating volumes (persistent storage in cloud) with Cinder &amp;ndash; OpenStack&amp;rsquo;s block-storage project. In that guide, you will also be creating a virtual machine, so it will be a good start to OpenStack. But let&amp;rsquo;s get back in our current scope.&lt;/p&gt;

&lt;p&gt;You can type the host IP provided by the script into your browser, to access the dashboard &amp;lsquo;Horizon&amp;rsquo;. Log into it using username &amp;lsquo;admin&amp;rsquo;, or &amp;lsquo;demo&amp;rsquo; and password &amp;lsquo;nova&amp;rsquo;. (For simplicity&amp;rsquo;s sake, lets just assume there are two users who are allowed to access this cloud &amp;ndash; one has all the administrative privilages, and the other one is just a normal user).&lt;/p&gt;

&lt;p&gt;You can view all the process logs inside screen, by typing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;screen -x
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Head over to &lt;a href=&#34;http://www.rushiagr.com/blog/2013/06/05/linux-screens-in-devstack/&#34;&gt;Linux Screens in DevStack&lt;/a&gt; for more information on how to work with &lt;code&gt;screen&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;housekeeping-and-customizations&#34;&gt;Housekeeping and customizations&lt;/h3&gt;

&lt;p&gt;In your life as an OpenStack developer, you will be setting up and destroying DevStack instance quite a number of times. So it is good to know how to do that in the most efficient manner.&lt;/p&gt;

&lt;p&gt;Just like &lt;code&gt;stack.sh&lt;/code&gt; script is used to set up DevStack, &lt;code&gt;unstack.sh&lt;/code&gt; is used to destroy the DevStack setup. Running it will kill all the services, BUT it will not delete any of the code. If you want to bring down all the services manually, just do a:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo killall screen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that this will just kill all the process which were running, for which you were able to see the logs inside screen. &lt;code&gt;unstack.sh&lt;/code&gt; does some cleanups as well along with killing processes.&lt;/p&gt;

&lt;p&gt;NOTE: DevStack environment doesn&amp;rsquo;t persist across reboots!&lt;/p&gt;

&lt;p&gt;So you need to bring back up the DevStack environment manually everytime you reboot. Here is where using a virtual machine comes handy. You can take a snapshot of the virtual machine, and then go back to it when you want a clean DevStack environment.&lt;/p&gt;

&lt;h3 id=&#34;localrc-configurations&#34;&gt;localrc configurations&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;localrc&lt;/code&gt; is the file where all the local configurations (local = your local machine) are kept.&lt;/p&gt;

&lt;p&gt;After first successful &lt;code&gt;stack.sh&lt;/code&gt; run, will see that a localrc file gets created with the configuration values you specified while running that script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat localrc
DATABASE_PASSWORD=nova
RABBIT_PASSWORD=nova
SERVICE_TOKEN=nova
SERVICE_PASSWORD=nova
ADMIN_PASSWORD=nova
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sometimes you will forget to unstack, and will reboot the machine. And then you will find that running &lt;code&gt;stack.sh&lt;/code&gt; will again do an &lt;code&gt;apt-get update&lt;/code&gt;, and check for all packages, etc.&lt;/p&gt;

&lt;p&gt;If you specify an option &lt;code&gt;OFFLINE=True&lt;/code&gt; in a file named &lt;code&gt;localrc&lt;/code&gt;, inside the devstack directory, and if after specifying this you run &lt;code&gt;stack.sh&lt;/code&gt;, it will not check anything over the Internet, and will set up DevStack using all the packages and code residing in your machine. Setting up a DevStack using this config option will give you a running cloud in the shortest amount of time).&lt;/p&gt;

&lt;p&gt;Note that &lt;code&gt;stack.sh&lt;/code&gt; will see if the git repositories of the OpenStack projects are present in &lt;code&gt;/opt/stack/&lt;/code&gt; directory. If they are, it will not fetch any latest code into them from Github. But if any of the directory (say, &lt;code&gt;nova&lt;/code&gt;), is absent, it will pull latest code into the newly created &lt;code&gt;nova&lt;/code&gt; directory inside &lt;code&gt;/opt/stack&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What if you want to get the latest code into all the OpenStack repositories inside &lt;code&gt;/opt/stack&lt;/code&gt;? Just specify a &lt;code&gt;RECLONE=yes&lt;/code&gt; parameter in localrc, and rerun &lt;code&gt;./stack.sh&lt;/code&gt;. This comes particularly handy when you are developing new code.&lt;/p&gt;

&lt;p&gt;NOTE: Keep in mind that while developing code, you need to &lt;strong&gt;commit your local changes&lt;/strong&gt; in, say, &lt;code&gt;/opt/stack/nova&lt;/code&gt; repository, before you restack (re-run &lt;code&gt;stack.sh&lt;/code&gt;) with &lt;code&gt;RECLONE=yes&lt;/code&gt; option, as otherwise, the changes will be wiped off. Save yourself from a rude shock. You have been warned.&lt;/p&gt;

&lt;p&gt;Configuration options &lt;code&gt;RECLONE=yes&lt;/code&gt; and &lt;code&gt;OFFLINE=True&lt;/code&gt; are complementary, and hence, use only one of them at a time in &lt;code&gt;localrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you have more than one interfaces, you can specify which one to use for external IP using this configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HOST_IP=192.168.xxx.xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;developing-code&#34;&gt;Developing code&lt;/h3&gt;

&lt;p&gt;If you want to immediately test out your code by running it inside DevStack, you need to make the changes in the code, and restart the affected services.&lt;/p&gt;

&lt;p&gt;For example, let us say you are making code changes in &lt;code&gt;nova&lt;/code&gt;. Just after you are done making the changes, go to the screen, and restart all the services which start with &amp;ldquo;n-&amp;rdquo;. If you are very sure that only one of the Nova service is affected, just restart that. Or if you don&amp;rsquo;t know which one to restart, it is safe to restart all of them.&lt;/p&gt;

&lt;p&gt;In order to restart, go to the respective screen and press &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt;. Then, press the up arrow once to get the last command which started this screen session, and then press &lt;code&gt;ENTER&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;final-words&#34;&gt;Final words&lt;/h3&gt;

&lt;p&gt;Note that this guide just gets you started with OpenStack using DevStack. OpenStack, and cloud in general, is not about virtual machines or volumes or networks only. It is a philosophy. It is a complete paradigm shift, and as such, it is impossible to cover all of it by me. Your quest to know more about it has just started. Keep reading more and more about it and I guarantee you you will be fascinated by it&amp;rsquo;s limitless possibilities.&lt;/p&gt;

&lt;p&gt;This post is written keeping in mind that it will be consumed by a newbie to OpenStack development. If you are one of the one benefitting from this guide, I would love it if you can provide me with suggestions to improve this post, and any feedback you have about it.&lt;/p&gt;

&lt;p&gt;Now you can go to the &lt;a href=&#34;http://devstack.org&#34;&gt;DevStack&lt;/a&gt; website :)&lt;/p&gt;

&lt;p&gt;Cheers!
Rushi&lt;/p&gt;</description>
    </item>
    
    
    
    <item>
      <title>MySQL Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</guid>
      <description>

&lt;p&gt;Databases are so important, yet almost all the time I need to work with it, I find that I have already forgotten all the syntax! So here I am writing down a quick cheat sheet to get me up and running when I&amp;rsquo;m waking up from slumber. I hope this will help atleast one other guy on this planet.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;I use mostly Ubuntu, so some of the commands might be Ubuntu specific.&lt;/p&gt;

&lt;p&gt;Install mysql&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A prompt will ask for the root password.&lt;/p&gt;

&lt;p&gt;To change the root password:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FLUSH PRIVILEGES;
    UPDATE mysql.user SET password=PASSWORD(&#39;nova&#39;) WHERE user=&#39;root&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE: MySQL keywords are case insensitive. They&amp;rsquo;re represented in capital here just so that they appear different than the rest. When you&amp;rsquo;re just testing out some things logging into the DB console, people generally prefer writing in small caps.&lt;/p&gt;

&lt;p&gt;Note that &lt;code&gt;PASSWORD&lt;/code&gt; is a function, and unlike other MySQL keywords cannot be used in small caps.&lt;/p&gt;

&lt;p&gt;Log into MySQL console with user &lt;code&gt;root&lt;/code&gt; and password &lt;code&gt;mysecretpassword&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -uroot -pmysecretpassword
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql -u&#39;root&#39; -p&#39;mysecretpassword&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or entering the password in &amp;lsquo;secret&amp;rsquo; mode:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mysql -uroot -p
Enter password: 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mysql-console&#34;&gt;MySQL console&lt;/h3&gt;

&lt;p&gt;List all databases:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| test               |
+--------------------+
4 rows in set (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a new database &lt;code&gt;rushi&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; CREATE DATABASE rushi;
Query OK, 1 row affected (0.00 sec)

mysql&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| rushi              |
| test               |
+--------------------+
5 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select database &lt;code&gt;rushi&lt;/code&gt;, so that all the further operations are executed inside this database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; USE rushi;
Database changed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a table &lt;code&gt;friends&lt;/code&gt; inside &lt;code&gt;rushi&lt;/code&gt; database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; CREATE TABLE friends (name VARCHAR(20), age INT);
Query OK, 0 rows affected (0.03 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you didn&amp;rsquo;t select the database in the last to last command, you need to specify table in this format:&lt;code&gt;&amp;lt;database&amp;gt;.&amp;lt;tablename&amp;gt;&lt;/code&gt;. So the last command would look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; CREATE TABLE rushi.friends (name VARCHAR(20), age INT);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List all the tables:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show tables;
+-----------------+
| Tables_in_rushi |
+-----------------+
| friends         |
+-----------------+
1 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert data into &lt;code&gt;friends&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; INSERT INTO friends VALUES (&#39;arvind&#39;, 24);
Query OK, 1 row affected (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Display all the data from the table:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; SELECT * FROM friends;
+--------+------+
| name   | age  |
+--------+------+
| arvind |   24 |
+--------+------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert another friend:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; INSERT INTO friends VALUES (&#39;honshu&#39;, 23);
Query OK, 1 row affected (0.00 sec)

mysql&amp;gt; SELECT * FROM friends;
+--------+------+
| name   | age  |
+--------+------+
| arvind |   24 |
| honshu |   23 |
+--------+------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update a row in the table:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; UPDATE friends SET age=22 WHERE name=&#39;honshu&#39;;
Query OK, 1 row affected (0.02 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&amp;gt; SELECT * FROM friends;
+--------+------+
| name   | age  |
+--------+------+
| arvind |   24 |
| honshu |   22 |
+--------+------+
2 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete a row from table:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; DELETE FROM friends WHERE age=24;
Query OK, 1 row affected (0.00 sec)

mysql&amp;gt; select * from friends;
+--------+------+
| name   | age  |
+--------+------+
| honshu |   22 |
+--------+------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete all rows from the table in one go, and reset the autoincrement if any:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; TRUNCATE friends;
Query OK, 0 rows affected (0.04 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete the table and all of its contents:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; DROP TABLE friends;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other commonly used commands are listed below. Try to try all of them out atleast once.
Count the number of rows in a table:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT COUNT(*) FROM friends;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select distinct values for a row, and order them too:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT DISTINCT age FROM friends ORDER BY age;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Modify table to add one more column to it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ALTER TABLE friend ADD height varchar(10);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use regular expressions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT * FROM friend WHERE name REGEXP &#39;arv*&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CAUTION: Regular expressions comes with some binary/encoding trickery. Use it with a lot of caution.&lt;/p&gt;

&lt;p&gt;Create a new user for the database, and give it all the root privileges&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE USER &#39;rushiagr&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;mysecretpass&#39;
GRANT ALL PRIVILEGES ON * . * TO &#39;rushiagr&#39;@&#39;localhost&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a dump of database &lt;code&gt;rushi&lt;/code&gt; and store it in a file &lt;code&gt;db.dump&lt;/code&gt;. Execute this command in bash shell, and not in the MySQL shell.:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqldump --user root rushi &amp;gt; db.dump
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The End!&lt;/p&gt;

&lt;p&gt;Comments/suggestions/feedback? Please feel free to comment and I&amp;rsquo;ll make sure I acknowledge them to the fullest.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Playing around with Cinder multi-backend</title>
      <link>http://www.rushiagr.com/blog/2014/01/16/playing-around-with-cinder-backend/</link>
      <pubDate>Thu, 16 Jan 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/01/16/playing-around-with-cinder-backend/</guid>
      <description>&lt;p&gt;With Grizzly release, Cinder got equipped with another major feature &amp;ndash; multi-backends
with filter scheduler. So now you can have more than one storage boxes for block storage
and manage them with one Cinder deployment. Here, I&amp;rsquo;m going to test it out using our
favourite method &amp;ndash; trying it out on DevStack!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;DevStack can provide you with two LVM backends to play around with them. But you&amp;rsquo;ll need to restack it.&lt;/p&gt;

&lt;p&gt;Go to the devstack directory and pull the latest code. Destroy previous DevStack deployment if it exists.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~/devstack$ git pull origin master
rushi@jio:~/devstack$ ./unstack.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add the config option to &lt;code&gt;localrc&lt;/code&gt; which give you pre-cooked multi-backend setup with two LVM backends, both of 10G. Stack&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ echo &amp;quot;CINDER_MULTI_LVM_BACKEND=True&amp;quot; &amp;gt;&amp;gt; localrc
rushi@jio:~$ ./devstack/stack.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see that the cinder.conf file now has two values for enabled backends:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ less /etc/cinder/cinder.conf | grep enabled_backends
enabled_backends = lvmdriver-1,lvmdriver-2
#enabled_backends=&amp;lt;None&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also, you can see that there are two configuration groups created at the end of that config file, one each for configurations
corresponding to that particular backend&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ tail /etc/cinder/cinder.conf 

[lvmdriver-1]
volume_backend_name = LVM_iSCSI
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes

[lvmdriver-2]
volume_backend_name = LVM_iSCSI_2
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So you have two volume groups created for respective backends. Lets check it directly without using Cinder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g 10.01g
  stack-volumes2   1   0   0 wz--n-  10.01g 10.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hmmm. Two volume groups, each of size 10G.&lt;/p&gt;

&lt;h3 id=&#34;case-1-spreading-volumes-across-backends&#34;&gt;Case 1: Spreading volumes across backends&lt;/h3&gt;

&lt;p&gt;Now, lets create a volume and see where it ends up.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder create 1
ERROR: You must provide a username via either --os-username or env[OS_USERNAME]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Oops! Let me try again..&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ . devstack/openrc 
rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:29:49.241493      |
|    description    |                 None                 |
|         id        | ecfbfebb-73d5-4faf-b625-e69f18020378 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+

rushi@jio:~$ cinder list
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
|                  ID                  |   Status  | Name | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
| ecfbfebb-73d5-4faf-b625-e69f18020378 | available | None |  1   |     None    |  false   |             |
+--------------------------------------+-----------+------+------+-------------+----------+-------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g 10.01g
  stack-volumes2   1   2   0 wz--n-  10.01g  9.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So it went to backend number 2. If you are admin (&lt;code&gt;source devstack/openrc admin admin&lt;/code&gt;), you can do a &lt;code&gt;cinder show&lt;/code&gt; too, to get information
as to which host did this volume go to. Only the admin is allowed to view the host information.&lt;/p&gt;

&lt;p&gt;The scheduler now gets reported of the capabilities which the backends have (check out the &lt;code&gt;c-shr&lt;/code&gt; screen to see it). The scheduler then weighs the backend based on these capabilities and decides which of them has higher &amp;lsquo;weight&amp;rsquo; to serve the next &amp;lsquo;create&amp;rsquo; request. By default, the &amp;lsquo;weigher&amp;rsquo; for scheduler is &lt;code&gt;CapacityWeigher&lt;/code&gt;. That is, whichever backend has higher capacity, that backend will be chosen for the next &amp;lsquo;create&amp;rsquo; request.&lt;/p&gt;

&lt;p&gt;So in our case, when we&amp;rsquo;ll do another &amp;lsquo;create volume&amp;rsquo; it will now land on to the first backend.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:39:23.958468      |
|    description    |                 None                 |
|         id        | aa79c608-47cc-44e3-a614-f4bddaab68e5 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g  9.01g
  stack-volumes2   1   2   0 wz--n-  10.01g  9.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Neat!&lt;/p&gt;

&lt;h3 id=&#34;case-2-stacking-all-volumes-at-one-backend&#34;&gt;Case 2 : Stacking all volumes at one backend&lt;/h3&gt;

&lt;p&gt;What if we want to keep all the volumes at only one backend? Cinder allows you to do that too!
There is a configuration option in cinder.conf, &lt;code&gt;capacity_weight_multiplier&lt;/code&gt;, which allows you to multiply the &amp;lsquo;capacity weight&amp;rsquo; by a number.
So if the multiplier is 1, a backend with higher capacity will have higher weight, and will be the choice for the next volume creation request.
This is the default case. BUT what if we set it to -1? The backend with higher available capacity will have more negative weight, which will make that backend less preferable for next &amp;lsquo;create&amp;rsquo; request, and hence the request will go to the backend which has lesser capacity!&lt;/p&gt;

&lt;p&gt;Let us see this too in action.&lt;/p&gt;

&lt;p&gt;Check out the config option from cinder.conf file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cat /etc/cinder/cinder.conf | grep -B 3 ^capacity_weight_multiplier

# Multiplier used for weighing volume capacity. Negative
# numbers mean to stack vs spread. (floating point value)
# capacity_weight_multiplier=1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The config option is commented out and is there just so that you can easily change it. Now uncomment it and change it&amp;rsquo;s value to -1.&lt;/p&gt;

&lt;p&gt;Delete previously created volumes. Kill all the three Cinder screen processes (&lt;code&gt;c-api&lt;/code&gt;, &lt;code&gt;c-sch&lt;/code&gt; and &lt;code&gt;c-vol&lt;/code&gt;), and restart them.&lt;/p&gt;

&lt;p&gt;Lets create two volumes and see where they end up..&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder list
+----+--------+------+------+-------------+----------+-------------+
| ID | Status | Name | Size | Volume Type | Bootable | Attached to |
+----+--------+------+------+-------------+----------+-------------+
+----+--------+------+------+-------------+----------+-------------+
rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:56:59.845733      |
|    description    |                 None                 |
|         id        | b927b328-5ae0-411a-9de2-22ed732b4946 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+
rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:57:01.132756      |
|    description    |                 None                 |
|         id        | 9f643f2d-7221-4a5c-bf48-1977c9b89fd3 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g 10.01g
  stack-volumes2   1   2   0 wz--n-  10.01g  8.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;:)&lt;/p&gt;

&lt;h3 id=&#34;case-3-custom-choice&#34;&gt;Case 3 : Custom choice&lt;/h3&gt;

&lt;p&gt;What if I have two different backends (maybe one is slower, or costlier, than the other), and my users want to exactly specify how many volumes they want of each &amp;lsquo;type&amp;rsquo; of backends? Here, Cinder&amp;rsquo;s &amp;lsquo;volume types&amp;rsquo; have us covered.&lt;/p&gt;

&lt;p&gt;We can associate a volume type with a backend, and then the users can create a volume of whatever &amp;lsquo;type&amp;rsquo; they want.
Let&amp;rsquo;s throw some discrimination at these backends. I&amp;rsquo;ll create two volume types: &amp;lsquo;gold&amp;rsquo; and &amp;lsquo;bronze&amp;rsquo;, and associate &amp;lsquo;stack-volumes&amp;rsquo; with &amp;lsquo;gold&amp;rsquo; and similarly for &amp;lsquo;stack-volumes2&amp;rsquo;. Note that this job can only be done by the administrator.&lt;/p&gt;

&lt;p&gt;Let us be admins&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ . devstack/openrc admin admin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create both the volume types and list them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder type-create gold
+--------------------------------------+------+
|                  ID                  | Name |
+--------------------------------------+------+
| dd883ee0-24be-42e1-ab2e-b9a01454f2f9 | gold |
+--------------------------------------+------+
rushi@jio:~$ cinder type-create bronze
+--------------------------------------+--------+
|                  ID                  |  Name  |
+--------------------------------------+--------+
| f63dd2cb-f4e7-4d6d-a84f-5bf2cc6c5671 | bronze |
+--------------------------------------+--------+

rushi@jio:~$ cinder type-list
+--------------------------------------+--------+
|                  ID                  |  Name  |
+--------------------------------------+--------+
| dd883ee0-24be-42e1-ab2e-b9a01454f2f9 |  gold  |
| f63dd2cb-f4e7-4d6d-a84f-5bf2cc6c5671 | bronze |
+--------------------------------------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Get the backend names (&lt;code&gt;volume_backend_name&lt;/code&gt; config option) from cinder.conf file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ tail /etc/cinder/cinder.conf 

[lvmdriver-1]
volume_backend_name = LVM_iSCSI
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes

[lvmdriver-2]
volume_backend_name = LVM_iSCSI_2
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s associate backend &lt;code&gt;LVM_iSCSI&lt;/code&gt; with volume type &amp;lsquo;gold&amp;rsquo;, and similarly for the other one.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder type-key gold set volume_backend_name=LVM_iSCSI
rushi@jio:~$ cinder type-key bronze set volume_backend_name=LVM_iSCSI_2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These association are stored as key-value pairs in the volume type&amp;rsquo;s &amp;lsquo;extra specs&amp;rsquo;. Let&amp;rsquo;s see them&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder extra-specs-list 
+--------------------------------------+--------+------------------------------------------+
|                  ID                  |  Name  |               extra_specs                |
+--------------------------------------+--------+------------------------------------------+
| dd883ee0-24be-42e1-ab2e-b9a01454f2f9 |  gold  |  {u&#39;volume_backend_name&#39;: u&#39;LVM_iSCSI&#39;}  |
| f63dd2cb-f4e7-4d6d-a84f-5bf2cc6c5671 | bronze | {u&#39;volume_backend_name&#39;: u&#39;LVM_iSCSI_2&#39;} |
+--------------------------------------+--------+------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can add more key-value pairs for these volume types with different key names. &lt;code&gt;volume_backend_name&lt;/code&gt; is a reserved key name, though.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s create two volumes of type &amp;lsquo;gold&amp;rsquo; and see where they end up being created:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder create --volume-type gold --name costly_vol_1 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T18:24:07.670635      |
|    description    |                 None                 |
|         id        | 767d4c56-6d3d-46f7-b0a3-4a00f696bcad |
|      metadata     |                  {}                  |
|        name       |             costly_vol_1             |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   c271eb32e71b411bb98ad7b93792d6d5   |
|    volume_type    |                 gold                 |
+-------------------+--------------------------------------+
rushi@jio:~$ cinder create --volume-type gold --name costly_vol_2 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T18:24:58.382180      |
|    description    |                 None                 |
|         id        | a938e556-65cf-4547-87ff-513d60f626d3 |
|      metadata     |                  {}                  |
|        name       |             costly_vol_2             |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   c271eb32e71b411bb98ad7b93792d6d5   |
|    volume_type    |                 gold                 |
+-------------------+--------------------------------------+
rushi@jio:~$ cinder list
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
|                  ID                  |   Status  |     Name     | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
| 767d4c56-6d3d-46f7-b0a3-4a00f696bcad | available | costly_vol_1 |  1   |     gold    |  false   |             |
| a938e556-65cf-4547-87ff-513d60f626d3 | available | costly_vol_2 |  1   |     gold    |  false   |             |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   2   0 wz--n-  10.01g  8.01g
  stack-volumes2   1   0   0 wz--n-  10.01g 10.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now create another one, but with type &amp;lsquo;bronze&amp;rsquo; and ensure it is created on the other backend.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ cinder create --volume-type bronze --name cheap_vol_1 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T18:27:05.852092      |
|    description    |                 None                 |
|         id        | 97f62c7a-b974-41e8-a659-1e6d3eb876d5 |
|      metadata     |                  {}                  |
|        name       |             cheap_vol_1              |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   c271eb32e71b411bb98ad7b93792d6d5   |
|    volume_type    |                bronze                |
+-------------------+--------------------------------------+

rushi@jio:~$ sudo pvs
  PV         VG             Fmt  Attr PSize   PFree 
  /dev/loop0 stack-volumes  lvm2 a--   10.01g  8.01g
  /dev/loop1 stack-volumes2 lvm2 a--   10.01g  9.01g
  /dev/sda5  ubuntu-vg      lvm2 a--  931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Done :)&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;</description>
    </item>
    
    
    
    <item>
      <title>Quick Start: Linux Logical Volume Manager</title>
      <link>http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/</link>
      <pubDate>Tue, 14 Jan 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/</guid>
      <description>

&lt;p&gt;While installing the latest Ubuntu OS on your computer, you will see that
you can install the OS using LVM (Logical Volume Manager) utility. Ever wonder what is it?
LVM (Logical Volume Manager) is that fantastic utility for storage administration.
It provide the users with abilities which were not possible with raw disks.
The storage is now &amp;lsquo;virtualized&amp;rsquo;. You can now easily create, move and extend volumes (for now, think of it as disk partitions)
without bothering about data corruption. You can carve partitions out of multiple disks,
and can add and remove disks from a &amp;lsquo;volume group&amp;rsquo; containing such volumes without the user noticing anything!
List of all the features of LVM can be found at it&amp;rsquo;s &lt;a href=&#34;http://en.wikipedia.org/wiki/Logical_Volume_Manager_(Linux)&#34;
target=&#34;_blank&#34;&gt;wiki page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog scratches the surface of LVM, and gives some basic insights into some storage concepts.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;I&amp;rsquo;ll give you a simple example to better explain what a &amp;lsquo;physical volume&amp;rsquo;, a &amp;lsquo;volume group&amp;rsquo; and a
&amp;lsquo;logical volume&amp;rsquo; is. Say I have two 1 TB hard disks - disk A and disk B. I have two equal-sized partitions on
disk B, one of which I want to keep it to myself for my personal data. The &amp;lsquo;partition&amp;rsquo; term used here is
same as what you see in a file explorer. For the unpartitioned disk, the complete disk is one single partition.&lt;/p&gt;

&lt;p&gt;The partitions I described above are &amp;lsquo;physical volumes&amp;rsquo;. That is, on the disk, these are physically separate bytes (think of that
partitioned disk as a spiral on disk divided in its length at the midpoint).
Out of the first disk and one partition of the second disk, we create a &amp;lsquo;volume group&amp;rsquo; &amp;ndash; a logical pool of storage, out of which we can
create lots of &amp;lsquo;logical volumes&amp;rsquo;. Even after you&amp;rsquo;ve created logical volumes over this volume group, you can add and remove physical volumes (partitions) from the volume group. You can do many more operations such as resize, move and extend.&lt;/p&gt;

&lt;p&gt;I hope the basic idea written above is sufficiently clear. Else, head over to this Ubuntu &lt;a href=&#34;https://wiki.ubuntu.com/Lvm&#34; target=&#34;_blank&#34;&gt;wiki&lt;/a&gt; for a slightly more detailed, but still an overview, of LVM. Anyway, I&amp;rsquo;m concentrating more on the demo, so lets move on.&lt;/p&gt;

&lt;h4 id=&#34;hands-on&#34;&gt;Hands-on&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;m demo&amp;rsquo;ing everything on an Ubuntu machine, but it should work on any Linux distro (after you install the LVM2 package)&lt;/p&gt;

&lt;p&gt;Install LVM2 package&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install lvm2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One nice thing is you don&amp;rsquo;t need to create actual partitions on disks. We&amp;rsquo;ll use files as &lt;a href=&#34;http://en.wikipedia.org/wiki/Loop_device&#34; target=&#34;_blank&#34;&gt;loopback devices&lt;/a&gt;, which will appear to the operating system as partitions. Neat.&lt;/p&gt;

&lt;p&gt;Create a file of size 1G to be later used as a physical volume.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ truncate --size 1G backing_file_1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a loopback device over this file. Find the first free loopback device available and show its name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo losetup --find --show backing_file_1 
/dev/loop0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List all the loopback devices.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo losetup --all
/dev/loop0: [fc00]:22811987 (/home/rushi/backing_file_1)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a physical volume over this loopback device. Note that&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo pvcreate /dev/loop0 
  Physical volume &amp;quot;/dev/loop0&amp;quot; successfully created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List physical volumes. Apart from &lt;code&gt;pvs&lt;/code&gt; (Physical Volume Scan), there are two more
commands which do the same thing, but with different level of verbosity and formatting: &lt;code&gt;pvscan&lt;/code&gt; and &lt;code&gt;pvdisplay&lt;/code&gt;. (Try them out too!)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo pvs
  PV         VG        Fmt  Attr PSize   PFree 
  /dev/loop0           lvm2 a--    1.00g  1.00g
  /dev/sda5  ubuntu-vg lvm2 a--  931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let us repeat the steps to create another physical volume:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ truncate --size 1G backing_file_2
rushi@jio:~$ sudo losetup --find --show backing_file_2 
/dev/loop1
rushi@jio:~$ sudo losetup --all
/dev/loop0: [fc00]:22811987 (/home/rushi/backing_file_1)
/dev/loop1: [fc00]:22812001 (/home/rushi/backing_file_2)
rushi@jio:~$ sudo pvcreate /dev/loop1
  Physical volume &amp;quot;/dev/loop1&amp;quot; successfully created
rushi@jio:~$ sudo pvs
  PV         VG        Fmt  Attr PSize   PFree 
  /dev/loop0           lvm2 a--    1.00g  1.00g
  /dev/loop1           lvm2 a--    1.00g  1.00g
  /dev/sda5  ubuntu-vg lvm2 a--  931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a volume group &lt;code&gt;test-volgroup&lt;/code&gt; over these two physical volumes. (Actually, even if you don&amp;rsquo;t create physical volumes over loopback devices, while creating volume groups it will automatically create physical volumes over them).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo vgcreate test-volgroup /dev/loop0 /dev/loop1
  Volume group &amp;quot;test-volgroup&amp;quot; successfully created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List the volume groups. (&lt;code&gt;vgs&lt;/code&gt;, &lt;code&gt;vgscan&lt;/code&gt; or &lt;code&gt;vgdisplay&lt;/code&gt; can be used)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo vgs
  VG            #PV #LV #SN Attr   VSize   VFree 
  test-volgroup   2   0   0 wz--n-   1.99g  1.99g
  ubuntu-vg       1   2   0 wz--n- 931.27g 44.00m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a logical volume &lt;code&gt;test-logicalvol&lt;/code&gt; over the &lt;code&gt;test-volgroup&lt;/code&gt; volume group.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo lvcreate --size 400M --name test-logicalvol test-volgroup
  Logical volume &amp;quot;test-logicalvol&amp;quot; created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;List logical volumes. (&lt;code&gt;lvs&lt;/code&gt;, &lt;code&gt;lvscan&lt;/code&gt;, &lt;code&gt;lvdisplay&lt;/code&gt; can be used)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo lvs
  LV              VG            Attr      LSize   Pool Origin Data%  Move Log Copy%  Convert
  test-logicalvol test-volgroup -wi-a---- 400.00m                                           
  root            ubuntu-vg     -wi-ao--- 923.35g                                           
  swap_1          ubuntu-vg     -wi-ao---   7.88g                                           
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Easy, isn&amp;rsquo;t it? Let&amp;rsquo;s tear down everything. Though a simpler way would be to just remove the loopback device, which will automatically
remove all the physical, logical volumes/volume groups created over them, let&amp;rsquo;s do it step-by-step. Note that you need to specify volume group while deleting logical volumes.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rushi@jio:~$ sudo lvremove test-volgroup
Do you really want to remove active logical volume test-logicalvol? [y/n]: y
  Logical volume &amp;quot;test-logicalvol&amp;quot; successfully removed
rushi@jio:~$ sudo vgremove test-volgroup
  Volume group &amp;quot;test-volgroup&amp;quot; successfully removed
rushi@jio:~$ sudo pvremove /dev/loop0 /dev/loop1
  Labels on physical volume &amp;quot;/dev/loop0&amp;quot; successfully wiped
  Labels on physical volume &amp;quot;/dev/loop1&amp;quot; successfully wiped
rushi@jio:~$ sudo losetup --detach /dev/loop0 /dev/loop1
rushi@jio:~$ rm backing_file_1 backing_file_2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Installing OpenID plugin for MediaWiki</title>
      <link>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</link>
      <pubDate>Sun, 12 Jan 2014 00:00:00 &#43;0000</pubDate>
      <author>Rushi Agrawal</author>
      <guid>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</guid>
      <description>&lt;p&gt;This post is about setting up your wiki such that their users access the wiki
only via an OpenID provider login (e.g. Google or Facebook login). This post assumes
MediaWiki is already installed.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3 id=&#34;assumptions-prerequisites-and-requirements&#34;&gt;Assumptions, prerequisites and requirements&lt;/h3&gt;

&lt;p&gt;All of what this blogpost says has been tried on an Ubuntu machine, but it
should work well on other Linux distros too (except for the &lt;code&gt;apt-get&lt;/code&gt; package
installs, for which you&amp;rsquo;ll need to find alternatives on your favourite distro).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$IP&lt;/code&gt; is assumed to be the root of your wiki directory (which in my case is
&lt;code&gt;/var/www/wikis/&amp;lt;my_wiki&amp;gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Install all the required packages for the plugin to work&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install php5-mcrypt php5-gmp
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;installing-the-plugin&#34;&gt;Installing the plugin&lt;/h2&gt;

&lt;p&gt;Get the source code for the extension into &lt;code&gt;$IP/extensions&lt;/code&gt; directory&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	cd extensions
	git clone http://gerrit.wikimedia.org/r/p/mediawiki/extensions/OpenID.git 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check your mediawiki version by going to &lt;code&gt;&amp;lt;your_wiki_URL&amp;gt;/index.php?title=Special:Version&lt;/code&gt;. Say your version is 1.19.x.
  Check out branch for the same version of OpenID code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	git branch -a 
	git checkout -b stable_REL1_19 origin/REL1_19 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add this line at the end of LocalSettings.php file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require_once &amp;quot;$IP/extensions/OpenID/OpenID.php&amp;quot;; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now install Auth subdirectory as following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	cd $IP/extensions/OpenID 
	git clone http://github.com/openid/php-openid.git 
	mv php-openid/Auth Auth 
	rm -r php-openid 
	cd $IP 
	php maintenance/update.php --conf LocalSettings.php 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart apache server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	/etc/init.d/apache2 restart 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;editing-login-required-page&#34;&gt;Editing &amp;lsquo;Login required&amp;rsquo; page.&lt;/h3&gt;

&lt;p&gt;By default, the main page of the wiki is not editable. Generally we would like
to give some information to a user, e.g. what this wiki is all about, how
to log into it, which OpenIDs are permitted, etc.&lt;/p&gt;

&lt;p&gt;Now we&amp;rsquo;ll give any registered user the ability to edit the protected pages and the
&amp;lsquo;interface&amp;rsquo; pages, of which our special login page is a part of. Add these lines
 to &lt;code&gt;$IP/LocalSettings.php&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	$wgGroupPermissions[&#39;user&#39;][&#39;editprotected&#39;] = true; 
	$wgGroupPermissions[&#39;user&#39;][&#39;editinterface&#39;] = true; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can edit the &lt;code&gt;&amp;lt;your_wiki_URL&amp;gt;/jiocloud/index.phpmediawiki:loginreqpagetext&lt;/code&gt;
 page which is presented when the user is not logged in.&lt;/p&gt;

&lt;h3 id=&#34;other-settings&#34;&gt;Other settings&lt;/h3&gt;

&lt;p&gt;Below you can see a snip of LocalSettings.php file, which contains many other
fields which I used to customize my wiki. I allowed only the registered user
an edit permission (which most of you would also want I guess). Also, I have disabled
regular login, and made it mandatory users to login via only OpenID, and that too,
only using their launchpad.net accounts (an issue tracking software from Canonical).&lt;/p&gt;

&lt;p&gt;If you want to get more information regarding these (and more)
configuration options, see &lt;a href=&#34;http://www.mediawiki.org/wiki/Extension:OpenID&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt; link.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Disable reading by anonymous users
$wgGroupPermissions[&#39;*&#39;][&#39;read&#39;] = false;

# Disable anonymous editing too
$wgGroupPermissions[&#39;*&#39;][&#39;edit&#39;] = false;
 
# But allow them to access the OpenID login page or else there will be no way to log in!
$wgWhitelistRead = array (&amp;quot;Special:OpenIDLogin&amp;quot;, &amp;quot;Special:OpenIDFinish&amp;quot;, 
&amp;quot;MediaWiki:Common.css&amp;quot;, &amp;quot;MediaWiki:Common.js&amp;quot;, &amp;quot;MediaWiki:Monobook.css&amp;quot;, 
&amp;quot;MediaWiki:Monobook.js&amp;quot;, &amp;quot;-&amp;quot;);
 
# For registered users, allow editing protected pages
$wgGroupPermissions[&#39;user&#39;][&#39;editprotected&#39;] = true;
$wgGroupPermissions[&#39;user&#39;][&#39;editinterface&#39;] = true;

# Only allow OpenIDs for login
$wgOpenIDLoginOnly = true;
$wgOpenIDOnly = true;       # a value used with older versions. Optional

# Your wiki web URL
$wgOpenIDTrustRoot = &amp;quot;http://your.wiki.url.com/&amp;quot;;

# By default, deny all OpenID
$wgOpenIDConsumerDenyByDefault = true;

# Then allow only launchpad.net OpenID (with and without HTTPS both)
$wgOpenIDConsumerAllow = array(&amp;quot;@^(https://)?launchpad.net/@&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;

&lt;p&gt;If there are troubles uploading a file via the MediaWiki web interface, go to the wiki directory on the server and chown the &lt;code&gt;images&lt;/code&gt; folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chown -R www-data:www-data images/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don&amp;rsquo;t forget to comment if you find the information presented here is outdated, or is not working for you.&lt;/p&gt;

&lt;p&gt;Cheers,
Rushi&lt;/p&gt;</description>
    </item>
    
    
  </channel>
</rss>