<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on rushiagr</title>
    <link>http://www.rushiagr.com/tags/tutorial/</link>
    <description>Recent content in tutorial on rushiagr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Rushi Agrawal</copyright>
    <lastBuildDate>Fri, 17 Jun 2016 11:18:27 +0530</lastBuildDate>
    
	<atom:link href="http://www.rushiagr.com/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>You dont need Vim swap files. And how to get rid of them</title>
      <link>http://www.rushiagr.com/blog/2016/06/17/you-dont-need-vim-swap-files-and-how-to-get-rid-of-them/</link>
      <pubDate>Fri, 17 Jun 2016 11:18:27 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/06/17/you-dont-need-vim-swap-files-and-how-to-get-rid-of-them/</guid>
      <description>Estimated reading time: 5 minutes.
Almost all IDEs today have &amp;lsquo;autosave&amp;rsquo; feature. That is, you don&#39;t need to explicitly save a file. The file is automatically saved as you type, so that even if your computer crashes, you don&#39;t lose data. This makes me wonder why Vim&#39;s default behavior is of using swap files. Swap files are annoying. I&#39;ve seen all Vim developers, including me, struggle with swap files at one point in their life.</description>
    </item>
    
    <item>
      <title>Everything you need to know about Tmux copy paste - Ubuntu</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</link>
      <pubDate>Thu, 16 Jun 2016 10:59:02 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</guid>
      <description>Copying from a Tmux session is something every Tmux user struggled with once. I&#39;m listing out all the stuff I learnt in this blog.
I tested everything on Ubuntu 14.04 Trusty Tahr, which runs Tmux version 1.8 (I have a few commands included for Tmux version 2+ also) To check your Tmux version, run tmux -V. If you have a Mac, see here.
Know about copy buffers When you do a CTRL`+`c, the stuff you copy is stored in your computer&#39;s buffer, called &amp;lsquo;clipboard&amp;rsquo; from where you can paste anywhere by doing a CTRL+&#39;v&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Everything you need to know about Tmux copy paste</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/</link>
      <pubDate>Thu, 16 Jun 2016 10:58:02 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/</guid>
      <description>Copying from a Tmux session is something every Tmux user struggled with once. I&#39;m listing out all the stuff I learnt in this blog.
I tested everything on Mac OS X El Capitan. For Ubuntu/Linux guide, see here. Mac OS X El Capitan runs Tmux version 2.1. To check your Tmux version, run tmux -V.
Know about your terminal The default terminal which comes with Mac is pretty limiting. Instead of listing the limitations (and workarounds around it), I&#39;ll just say that before you proceed, please install iTerm 2 and start using that immediately.</description>
    </item>
    
    <item>
      <title>Puppet installation from modules</title>
      <link>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</link>
      <pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</guid>
      <description>A quick example of how to use Puppet to install and manage MySQL. We&#39;ll download required Puppet modules from their git repositories.
Again, everything is tried on Ubuntu (14.04).
Make sure hostname -f shows your FQDN. Then install puppet
sudo apt-get install puppet  We&#39;ll use git submodules to manage different git repositories. But first, create our own repository
mkdir puppet-mysql cd puppet-mysql git init  Install Puppet modules stdlib and mysql into directory modules as git submodules.</description>
    </item>
    
    <item>
      <title>iSCSI administration on Ubuntu - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</guid>
      <description>This post get&#39;s you started with iSCSI administration on an Ubuntu machine. Although I have used Ubuntu Trusty (14.04) version, it should work with Precise (12.04) too, with the latest packages.
Prerequisites Make sure you have atleast a little idea of what these terms mean: iSCSI, LUN, IQN, initiator, target and portal. Google and wikipedia are your friends.
A quick summary: There are two parts of iSCSI communication - initiator and target.</description>
    </item>
    
    <item>
      <title>OpenStack Unit Testing Nuggets</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</guid>
      <description>A small post about little things I found out while running unit tests in OpenStack.
Unit-testing setup Everybody knows ./run_tests.sh is used to run the unit tests of an OpenStack project. But, you require to install dependencies before doing it. And installing dependencies might not always succeed. So make sure you install these packages before running pip install -r requirements.txt:
sudo apt-get install build-essential libssl-dev libffi-dev \ python-dev libxslt1-dev libpq-dev python-mysqldb \ libmysqlclient-dev libvirt-dev  Atleast cinder and nova dependencies will get installed properly after this.</description>
    </item>
    
    <item>
      <title>Amazon EC2 API with OpenStack - Developer Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</guid>
      <description>OpenStack has support for EC2 API, that is, you can fire Amazon&#39;s API against an OpenStack cloud and it will still work. This article gets you started with using them locally against DevStack. It is more of a starter guide to a novice.
Fire a DevStack with it&#39;s default settings. See this post for more information on it.
git clone http://github.com/openstack-dev/devstack cd devstack/ ./stack.sh  Source openrc
source openrc  View all EC2 credentials available for the current user (here, demo user in demo tenant)</description>
    </item>
    
    <item>
      <title>Mounting QCOW2 images</title>
      <link>http://www.rushiagr.com/blog/2014/08/02/qcow2-mount/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/02/qcow2-mount/</guid>
      <description>Isn&#39;t it fun that even before you start a VM out of an image, you can add files to that image, see and edit the directory and file structure of that VM?
I wanted to boot a VM out of a disk-image, but how will I know out of the 256 available IPs for that VM, which one actually got assigned? I tried vnc console, but the connection was terribly flaky.</description>
    </item>
    
    <item>
      <title>Open Source Puppet - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</link>
      <pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</guid>
      <description>This post aims to be your quickest guide to get started with Puppet. We&#39;ll be using the open source version of Puppet. An hour of spare time and two Ubuntu machines (physical or virtual doesn&#39;t matter) is all that is needed.
Quick Introduction Lets say you want to install and run apache server on one of the machines in your lab. On another, you want to create a new user. On a third machine, you want to install MySQL, and allow access to this machine only from the first server.</description>
    </item>
    
    <item>
      <title>OpenStack in an hour with DevStack</title>
      <link>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</guid>
      <description>&lt;p&gt;So you found out a cool new technology &amp;ldquo;OpenStack&amp;rdquo; and want to try it real quick? Or probably you are hired in a company for your Python skills and now you are supposed to work on OpenStack in the shortest possible time? Fear not, it is not that hard to get started. &lt;a href=&#34;http://devstack.org&#34;&gt;DevStack&lt;/a&gt; is your friend-in-need. No, don&#39;t click that hyperlink just yet :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</guid>
      <description>Databases are so important, yet almost all the time I need to work with it, I find that I have already forgotten all the syntax! So here I am writing down a quick cheat sheet to get me up and running when I&#39;m waking up from slumber. I hope this will help atleast one other guy on this planet.
I use mostly Ubuntu, so some of the commands might be Ubuntu specific.</description>
    </item>
    
    <item>
      <title>Quick Start: Linux Logical Volume Manager</title>
      <link>http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/</link>
      <pubDate>Tue, 14 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/</guid>
      <description>While installing the latest Ubuntu OS on your computer, you will see that you can install the OS using LVM (Logical Volume Manager) utility. Ever wonder what is it? LVM (Logical Volume Manager) is that fantastic utility for storage administration. It provide the users with abilities which were not possible with raw disks. The storage is now &amp;lsquo;virtualized&amp;rsquo;. You can now easily create, move and extend volumes (for now, think of it as disk partitions) without bothering about data corruption.</description>
    </item>
    
    <item>
      <title>Installing OpenID plugin for MediaWiki</title>
      <link>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</link>
      <pubDate>Sun, 12 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</guid>
      <description>&lt;p&gt;This post is about setting up your wiki such that their users access the wiki
only via an OpenID provider login (e.g. Google or Facebook login). This post assumes
MediaWiki is already installed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cinder on DevStack - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</guid>
      <description>&lt;p&gt;This blog post covers all the important commands for OpenStack Cinder - The block storage project.
Although this guide is written based on DevStack, it will work with actual deployment of OpenStack
cloud also (except the DevStack/Linux specific bits).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenStack Tempest quick start with DevStack</title>
      <link>http://www.rushiagr.com/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/</link>
      <pubDate>Wed, 20 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/</guid>
      <description>&lt;p&gt;UPDATE(April 2014): Now when you set up DevStack, Tempest is automatically set up for you.&lt;/p&gt;
&lt;p&gt;This quick start guide explains setting up Tempest with a DevStack environment
for Grizzly release. Most of the information here is taken from
&lt;a href=&#34;http://www.joinfu.com/2012/03/testing-essex-rc1-with-devstack-and-tempest/&#34;&gt;here&lt;/a&gt;, the only difference being this blog post is more recent, and is based on Grizzly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git(hub) Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2013/03/19/github-cheat-sheet/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/03/19/github-cheat-sheet/</guid>
      <description>&lt;p&gt;I am posting my github cheat sheet here. I started writing it as soon as I started
learning Github and Git. So, some of the content here can appear quite naive.
I will try to keep this blog post as updated as I can, and if you find any
suggestion, please comment!&lt;/p&gt;
&lt;p&gt;This post is just for a reference of commands. This post will be a bad way to learn
how git works. A basic understanding of git is assumed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>