<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sense, and Simplicity]]></title>
  <link href="http://rushiagr.github.io/atom.xml" rel="self"/>
  <link href="http://rushiagr.github.io/"/>
  <updated>2014-04-11T21:17:10+05:30</updated>
  <id>http://rushiagr.github.io/</id>
  <author>
    <name><![CDATA[Rushi Agrawal]]></name>
    <email><![CDATA[rushi.agr@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenStack in an hour with DevStack]]></title>
    <link href="http://rushiagr.github.io/blog/2014/04/03/openstack-in-an-hour-with-devstack/"/>
    <updated>2014-04-03T22:01:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2014/04/03/openstack-in-an-hour-with-devstack</id>
    <content type="html"><![CDATA[<p>So you found out a cool new technology &#8220;OpenStack&#8221; and want to try it real quick? Or probably you are hired in a company for your Python skills and now you are supposed to work on OpenStack in the shortest possible time? Fear not, it is not that hard to get started. <a href="http://devstack.org">DevStack</a> is your friend-in-need. No, don&#8217;t click that hyperlink just yet :)</p>

<!--more-->


<p>To put it in a sentence, DevStack is &#8220;OpenStack in a box&#8221;. You just need a popular Linux based distribution with 2GB RAM and you&#8217;re all set to start. DevStack is basically a set of scripts which will install all the important OpenStack services in your computer. For this, it will first download all the essential packages, pull in the OpenStack code from various OpenStack projects, and set everything up for you to try out all of it.</p>

<p>NOTE: DO NOT set up DevStack for production clouds.</p>

<p>Here, in this tutorial, I&#8217;ll be setting up DevStack in a 64-bit Ubuntu 12.04 virtual machine. All your virtual machine needs to have is an Internet connection, and 2GB RAM.</p>

<p>NOTE: Do not run any of the script as a root user, unless specified otherwise explicitly.</p>

<h3>Getting started</h3>

<p>Install git</p>

<pre><code>sudo apt-get install git
</code></pre>

<p>Clone the DevStack repository into your computer and <code>cd</code> into it. This is the code which will set up the cloud for you.</p>

<pre><code>git clone http://github.com/openstack-dev/devstack
cd devstack/
</code></pre>

<p>If you do a <code>ls</code>, you will see <code>stack.sh</code>, <code>unstack.sh</code> and <code>rejoin-stack.sh</code> files in there. These are the most important files.</p>

<pre><code>r@ra:~/devstack$ ls
accrc         exercises         HACKING.rst  rejoin-stack.sh  tests
AUTHORS       exercise.sh       lib          run_tests.sh     tools
clean.sh      extras.d          LICENSE      samples          unstack.sh
driver_certs  files             localrc      stackrc
eucarc        functions         openrc       stack-screenrc
exerciserc    functions-common  README.md    stack.sh
</code></pre>

<p>File <code>stack.sh</code> is the most important of them all. Running this script will:
1. Pull OpenStack code from all of it&#8217;s important projects&#8217; repositories and put them in <code>/opt/stack</code> directory. TODO: say that this directory is configurable.
2. Installs all the dependencies these OpenStack projects have &#8211; both in the form of Ubuntu packages, and also the Python &#8220;PIP&#8221; repositories.
3. Starts all the OpenStack services with a default configuration.</p>

<p>Bringing down the DevStack-created cloud is easy too &#8211; just invoke the <code>unstack.sh</code> script, and all the services are down again, freeing up the memory that these services consume. I&#8217;ll talk about <code>rejoin-stack.sh</code> in some time. Let&#8217;s get started before I start writing at lengths again :)</p>

<p>Execute the <code>stack.sh</code> script</p>

<pre><code>r@ra:~/devstack$ ./stack.sh 

################################################################################
ENTER A PASSWORD TO USE FOR THE DATABASE.
################################################################################
This value will be written to your localrc file so you don't have to enter it 
again.  Use only alphanumeric characters.
If you leave this blank, a random default value will be used.
Enter a password now:
</code></pre>

<p>You need to add the MySQL database password here. Don&#8217;t worry if you have not installed MySQL on this system. Just provide a password here and this script will install MySQL and use this password there.</p>

<p>As you can see, MySQL is where all the important data is stored by different OpenStack components. You can peep into the database later if you want to see what data is stored, etc.</p>

<p>Also, note the first line after the heading. If the <code>stack.sh</code> script finishes successfully, all the inputs you specify (this, and four more after this) will be written to a file named as <code>localrc</code>. All the local configuration setting pertaining to the DevStack environment will go in this file. I&#8217;ll provide you with details of all of them very soon. Have patience :)</p>

<p>For the other four prompts, enter &#8216;nova&#8217;. Just use &#8216;nova&#8217; for this MySQL prompt too if it is not installed yet.</p>

<p>You will see that the script now starts spewing a lot of output on our screen. It is downloading all the required code, packages, dependencies, etc, and setting everything up for us &#8211; databases, services, network, configurations, message queues. Pretty much everything. For the first time, the script might take about 30-minutes, but it again depends upon the speed of your Internet connection, and the processing speed of your virtual machine. From the next time, it can provide you with a cloud in less than 10 minutes!</p>

<p>If the script ends with something like this:</p>

<pre><code>+ merge_config_group /home/r/devstack/local.conf post-extra
+ local localfile=/home/r/devstack/local.conf
+ shift
+ local matchgroups=post-extra
+ [[ -r /home/r/devstack/local.conf ]]
+ return 0
+ [[ -x /home/r/devstack/local.sh ]]
+ service_check
+ local service
+ local failures
+ SCREEN_NAME=stack
+ SERVICE_DIR=/opt/stack/status
+ [[ ! -d /opt/stack/status/stack ]]
++ ls '/opt/stack/status/stack/*.failure'
++ /bin/true
+ failures=
+ '[' -n '' ']'
+ set +o xtrace



Horizon is now available at http://10.0.2.15/
Keystone is serving at http://10.0.2.15:5000/v2.0/
Examples on using novaclient command line is in exercise.sh
The default users are: admin and demo
The password: nova
This is your host ip: 10.0.2.15
stack.sh completed in 269 seconds.
</code></pre>

<p>That means your machine is now home to a Cloud! :)</p>

<p>Here, <code>10.0.2.15</code> is the IP of my first network interface. Don&#8217;t worry about that for now.</p>

<p>So now you can head over to my blog <a href="http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/">Cinder on DevStack - Quick Start</a> to get started with creating volumes (persistent storage in cloud) with Cinder &#8211; OpenStack&#8217;s block-storage project. In that guide, you will also be creating a virtual machine, so it will be a good start to OpenStack. But let&#8217;s get back in our current scope.</p>

<p>You can type the host IP provided by the script into your browser, to access the dashboard &#8216;Horizon&#8217;. Log into it using username &#8216;admin&#8217;, or &#8216;demo&#8217; and password &#8216;nova&#8217;. (For simplicity&#8217;s sake, lets just assume there are two users who are allowed to access this cloud &#8211; one has all the administrative privilages, and the other one is just a normal user).</p>

<p>You can view all the process logs inside screen, by typing:</p>

<pre><code>screen -x
</code></pre>

<p>Head over to <a href="http://www.rushiagr.com/blog/2013/06/05/linux-screens-in-devstack/">Linux Screens in DevStack</a> for more information on how to work with <code>screen</code>.</p>

<h3>Housekeeping and customizations</h3>

<p>In your life as an OpenStack developer, you will be setting up and destroying DevStack instance quite a number of times. So it is good to know how to do that in the most efficient manner.</p>

<p>Just like <code>stack.sh</code> script is used to set up DevStack, <code>unstack.sh</code> is used to destroy the DevStack setup. Running it will kill all the services, BUT it will not delete any of the code. If you want to bring down all the services manually, just do a:</p>

<pre><code>sudo killall screen
</code></pre>

<p>Note that this will just kill all the process which were running, for which you were able to see the logs inside screen. <code>unstack.sh</code> does some cleanups as well along with killing processes.</p>

<p>If you had previously run <code>./stack.sh</code>, but have brought down the environment, you can bring it up back by executing the <code>rejoin_stack.sh</code> script.</p>

<p>NOTE: DevStack environment doesn&#8217;t persist across reboots!</p>

<p>So you need to bring back up the DevStack environment manually everytime you reboot. Here is where using a virtual machine comes handy. You can take a snapshot of the virtual machine, and then go back to it when you want a clean DevStack environment.</p>

<p>Nonetheless, the best way to reboot is: first execute <code>unstack.sh</code> to bring down the current running DevStack instance. Then reboot, and when your machine comes up again, run <code>rejoin_stack.sh</code>. If you don&#8217;t run <code>unstack.sh</code>, you will need to execute <code>stack.sh</code> again to have the environment up.</p>

<h3>localrc configurations</h3>

<p><code>localrc</code> is the file where all the local configurations (local = your local machine) are kept.</p>

<p>After first successful <code>stack.sh</code> run, will see that a localrc file gets created with the configuration values you specified while running that script.</p>

<pre><code>$ cat localrc 
DATABASE_PASSWORD=nova
RABBIT_PASSWORD=nova
SERVICE_TOKEN=nova
SERVICE_PASSWORD=nova
ADMIN_PASSWORD=nova
</code></pre>

<p>Sometimes you will forget to unstack, and will reboot the machine. And then you will find that running <code>stack.sh</code> will again do an <code>apt-get update</code>, and check for all packages, etc.</p>

<p>If you specify an option <code>OFFLINE=True</code> in a file named <code>localrc</code>, inside the devstack directory, and if after specifying this you run <code>stack.sh</code>, it will not check anything over the Internet, and will set up DevStack using all the packages and code residing in your machine. Setting up a DevStack using this config option will give you a running cloud in the shortest amount of time (after <code>rejoin_stack.sh</code>, but you have already forgotten to do <code>unstack.sh</code>, right :) ).</p>

<p>Note that <code>stack.sh</code> will see if the git repositories of the OpenStack projects are present in <code>/opt/stack/</code> directory. If they are, it will not fetch any latest code into them from Github. But if any of the directory (say, <code>nova</code>), is absent, it will pull latest code into the newly created <code>nova</code> directory inside <code>/opt/stack</code>.</p>

<p>What if you want to get the latest code into all the OpenStack repositories inside <code>/opt/stack</code>? Just specify a <code>RECLONE=yes</code> parameter in localrc, and rerun <code>./stack.sh</code>. This comes particularly handy when you are developing new code.</p>

<p>NOTE: Keep in mind that while developing code, you need to <strong>commit your local changes</strong> in, say, <code>/opt/stack/nova</code> repository, before you restack (re-run <code>stack.sh</code>) with <code>RECLONE=yes</code> option, as otherwise, the changes will be wiped off. Save yourself from a rude shock. You have been warned.</p>

<p>Configuration options <code>RECLONE=yes</code> and <code>OFFLINE=True</code> are complementary, and hence, use only one of them at a time in <code>localrc</code>.</p>

<p>If you have more than one interfaces, you can specify which one to use for external IP using this configuration:</p>

<pre><code>HOST_IP=192.168.xxx.xxx
</code></pre>

<h3>Developing code</h3>

<p>If you want to immediately test out your code by running it inside DevStack, you need to make the changes in the code, and restart the affected services.</p>

<p>For example, let us say you are making code changes in <code>nova</code>. Just after you are done making the changes, go to the screen, and restart all the services which start with &#8220;n-&#8220;. If you are very sure that only one of the Nova service is affected, just restart that. Or if you don&#8217;t know which one to restart, it is safe to restart all of them.</p>

<p>In order to restart, go to the respective screen and press <code>CTRL</code>+<code>C</code>. Then, press the up arrow once to get the last command which started this screen session, and then press <code>ENTER</code>.</p>

<h3>Final words</h3>

<p>Note that this guide just gets you started with OpenStack using DevStack. OpenStack, and cloud in general, is not about virtual machines or volumes or networks only. It is a philosophy. It is a complete paradigm shift, and as such, it is impossible to cover all of it by me. Your quest to know more about it has just started. Keep reading more and more about it and I guarantee you you will be fascinated by it&#8217;s limitless possibilities.</p>

<p>This post is written keeping in mind that it will be consumed by a newbie to OpenStack development. If you are one of the one benefitting from this guide, I would love it if you can provide me with suggestions to improve this post, and any feedback you have about it.</p>

<p>Now you can go to the <a href="http://devstack.org">DevStack</a> website :)</p>

<p>Cheers!
Rushi</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL Cheat Sheet]]></title>
    <link href="http://rushiagr.github.io/blog/2014/03/31/mysql-cheat-sheet/"/>
    <updated>2014-03-31T18:49:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2014/03/31/mysql-cheat-sheet</id>
    <content type="html"><![CDATA[<p>Databases are so important, yet almost all the time I need to work with it, I find that I have already forgotten all the syntax! So here I am writing down a quick cheat sheet to get me up and running when I&#8217;m waking up from slumber. I hope this will help atleast one other guy on this planet.</p>

<!-- more -->


<p>I use mostly Ubuntu, so some of the commands might be Ubuntu specific.</p>

<p>Install mysql</p>

<pre><code>sudo apt-get install mysql-server
</code></pre>

<p>A prompt will ask for the root password.</p>

<p>To change the root password:</p>

<pre><code>UPDATE mysql.user SET password=PASSWORD('nova') WHERE user='root';
</code></pre>

<p>NOTE: MySQL keywords are case insensitive. They&#8217;re represented in capital here just so that they appear different than the rest. When you&#8217;re just testing out some things logging into the DB console, people generally prefer writing in small caps.</p>

<p>Note that <code>PASSWORD</code> is a function, and unlike other MySQL keywords cannot be used in small caps.</p>

<p>Log into MySQL console with user <code>root</code> and password <code>mysecretpassword</code>:</p>

<pre><code>mysql -uroot -pmysecretpassword
</code></pre>

<p>or</p>

<pre><code>mysql -u'root' -p'mysecretpassword'
</code></pre>

<p>or entering the password in &#8216;secret&#8217; mode:</p>

<pre><code>$ mysql -uroot -p
Enter password: 
</code></pre>

<h3>MySQL console</h3>

<p>List all databases:</p>

<pre><code>mysql&gt; SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| test               |
+--------------------+
4 rows in set (0.01 sec)
</code></pre>

<p>Create a new database <code>rushi</code>:</p>

<pre><code>mysql&gt; CREATE DATABASE rushi;
Query OK, 1 row affected (0.00 sec)

mysql&gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| rushi              |
| test               |
+--------------------+
5 rows in set (0.00 sec)
</code></pre>

<p>Select database <code>rushi</code>, so that all the further operations are executed inside this database:</p>

<pre><code>mysql&gt; USE rushi;
Database changed
</code></pre>

<p>Create a table <code>friends</code> inside <code>rushi</code> database:</p>

<pre><code>mysql&gt; CREATE TABLE friends (name VARCHAR(20), age INT);
Query OK, 0 rows affected (0.03 sec)
</code></pre>

<p>If you didn&#8217;t select the database in the last to last command, you need to specify table in this format:<code>&lt;database&gt;.&lt;tablename&gt;</code>. So the last command would look like:</p>

<pre><code>mysql&gt; CREATE TABLE rushi.friends (name VARCHAR(20), age INT);
</code></pre>

<p>List all the tables:</p>

<pre><code>mysql&gt; show tables;
+-----------------+
| Tables_in_rushi |
+-----------------+
| friends         |
+-----------------+
1 rows in set (0.00 sec)
</code></pre>

<p>Insert data into <code>friends</code>:</p>

<pre><code>mysql&gt; INSERT INTO friends VALUES ('arvind', 24);
Query OK, 1 row affected (0.01 sec)
</code></pre>

<p>Display all the data from the table:</p>

<pre><code>mysql&gt; SELECT * FROM friends;
+--------+------+
| name   | age  |
+--------+------+
| arvind |   24 |
+--------+------+
1 row in set (0.00 sec)
</code></pre>

<p>Insert another friend:</p>

<pre><code>mysql&gt; INSERT INTO friends VALUES ('honshu', 23);
Query OK, 1 row affected (0.00 sec)

mysql&gt; SELECT * FROM friends;
+--------+------+
| name   | age  |
+--------+------+
| arvind |   24 |
| honshu |   23 |
+--------+------+
2 rows in set (0.00 sec)
</code></pre>

<p>Update a row in the table:</p>

<pre><code>mysql&gt; UPDATE friends SET age=22 WHERE name='honshu';
Query OK, 1 row affected (0.02 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql&gt; SELECT * FROM friends;
+--------+------+
| name   | age  |
+--------+------+
| arvind |   24 |
| honshu |   22 |
+--------+------+
2 rows in set (0.00 sec)
</code></pre>

<p>Delete a row from table:</p>

<pre><code>mysql&gt; DELETE FROM friends WHERE age=24;
Query OK, 1 row affected (0.00 sec)

mysql&gt; select * from friends;
+--------+------+
| name   | age  |
+--------+------+
| honshu |   22 |
+--------+------+
1 row in set (0.00 sec)
</code></pre>

<p>Delete all rows from the table in one go, and reset the autoincrement if any:</p>

<pre><code>mysql&gt; TRUNCATE friends;
Query OK, 0 rows affected (0.04 sec)
</code></pre>

<p>Delete the table and all of its contents:</p>

<pre><code>mysql&gt; DROP TABLE friends;
</code></pre>

<p>Other commonly used commands are listed below. Try to try all of them out atleast once.
Count the number of rows in a table:</p>

<pre><code>SELECT COUNT(*) FROM friends;
</code></pre>

<p>Select distinct values for a row, and order them too:</p>

<pre><code>SELECT DISTINCT age FROM friends ORDER BY age;
</code></pre>

<p>Modify table to add one more column to it:</p>

<pre><code>ALTER TABLE friend ADD height varchar(10);
</code></pre>

<p>Use regular expressions:</p>

<pre><code>SELECT * FROM friend WHERE name REGEXP 'arv*';
</code></pre>

<p>CAUTION: Regular expressions comes with some binary/encoding trickery. Use it with a lot of caution.</p>

<p>Create a new user for the database, and give it all the root privileges</p>

<pre><code>CREATE USER 'rushiagr'@'localhost' IDENTIFIED BY 'mysecretpass'
GRANT ALL PRIVILEGES ON * . * TO 'rushiagr'@'localhost'
</code></pre>

<p>Take a dump of database <code>rushi</code> and store it in a file <code>db.dump</code>. Execute this command in bash shell, and not in the MySQL shell.:</p>

<pre><code>mysqldump --user root rushi &gt; db.dump
</code></pre>

<p>The End!</p>

<p>Comments/suggestions/feedback? Please feel free to comment and I&#8217;ll make sure I acknowledge them to the fullest.</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing around with Cinder multi-backend]]></title>
    <link href="http://rushiagr.github.io/blog/2014/01/16/cinder-playing-with-multi-backend/"/>
    <updated>2014-01-16T22:42:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2014/01/16/cinder-playing-with-multi-backend</id>
    <content type="html"><![CDATA[<p>With Grizzly release, Cinder got equipped with another major feature &#8211; multi-backends
with filter scheduler. So now you can have more than one storage boxes for block storage
and manage them with one Cinder deployment. Here, I&#8217;m going to test it out using our
favourite method &#8211; trying it out on DevStack!</p>

<!--more-->


<p>DevStack can provide you with two LVM backends to play around with them. But you&#8217;ll need to restack it.</p>

<p>Go to the devstack directory and pull the latest code. Destroy previous DevStack deployment if it exists.</p>

<pre><code>rushi@jio:~/devstack$ git pull origin master
rushi@jio:~/devstack$ ./unstack.sh
</code></pre>

<p>Add the config option to <code>localrc</code> which give you pre-cooked multi-backend setup with two LVM backends, both of 10G. Stack</p>

<pre><code>rushi@jio:~$ echo "CINDER_MULTI_LVM_BACKEND=True" &gt;&gt; localrc
rushi@jio:~$ ./devstack/stack.sh
</code></pre>

<p>You can see that the cinder.conf file now has two values for enabled backends:</p>

<pre><code>rushi@jio:~$ less /etc/cinder/cinder.conf | grep enabled_backends
enabled_backends = lvmdriver-1,lvmdriver-2
#enabled_backends=&lt;None&gt;
</code></pre>

<p>Also, you can see that there are two configuration groups created at the end of that config file, one each for configurations
corresponding to that particular backend</p>

<pre><code>rushi@jio:~$ tail /etc/cinder/cinder.conf 

[lvmdriver-1]
volume_backend_name = LVM_iSCSI
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes

[lvmdriver-2]
volume_backend_name = LVM_iSCSI_2
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes2
</code></pre>

<p>So you have two volume groups created for respective backends. Lets check it directly without using Cinder.</p>

<pre><code>rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g 10.01g
  stack-volumes2   1   0   0 wz--n-  10.01g 10.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
</code></pre>

<p>Hmmm. Two volume groups, each of size 10G.</p>

<h3>Case 1: Spreading volumes across backends</h3>

<p>Now, lets create a volume and see where it ends up.</p>

<pre><code>rushi@jio:~$ cinder create 1
ERROR: You must provide a username via either --os-username or env[OS_USERNAME]
</code></pre>

<p>Oops! Let me try again..</p>

<pre><code>rushi@jio:~$ . devstack/openrc 
rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:29:49.241493      |
|    description    |                 None                 |
|         id        | ecfbfebb-73d5-4faf-b625-e69f18020378 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+

rushi@jio:~$ cinder list
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
|                  ID                  |   Status  | Name | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
| ecfbfebb-73d5-4faf-b625-e69f18020378 | available | None |  1   |     None    |  false   |             |
+--------------------------------------+-----------+------+------+-------------+----------+-------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g 10.01g
  stack-volumes2   1   2   0 wz--n-  10.01g  9.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
</code></pre>

<p>So it went to backend number 2. If you are admin (<code>source devstack/openrc admin admin</code>), you can do a <code>cinder show</code> too, to get information
as to which host did this volume go to. Only the admin is allowed to view the host information.</p>

<p>The scheduler now gets reported of the capabilities which the backends have (check out the <code>c-shr</code> screen to see it). The scheduler then weighs the backend based on these capabilities and decides which of them has higher &#8216;weight&#8217; to serve the next &#8216;create&#8217; request. By default, the &#8216;weigher&#8217; for scheduler is <code>CapacityWeigher</code>. That is, whichever backend has higher capacity, that backend will be chosen for the next &#8216;create&#8217; request.</p>

<p>So in our case, when we&#8217;ll do another &#8216;create volume&#8217; it will now land on to the first backend.</p>

<pre><code>rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:39:23.958468      |
|    description    |                 None                 |
|         id        | aa79c608-47cc-44e3-a614-f4bddaab68e5 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g  9.01g
  stack-volumes2   1   2   0 wz--n-  10.01g  9.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
</code></pre>

<p>Neat!</p>

<h3>Case 2 : Stacking all volumes at one backend</h3>

<p>What if we want to keep all the volumes at only one backend? Cinder allows you to do that too!
There is a configuration option in cinder.conf, <code>capacity_weight_multiplier</code>, which allows you to multiply the &#8216;capacity weight&#8217; by a number.
So if the multiplier is 1, a backend with higher capacity will have higher weight, and will be the choice for the next volume creation request.
This is the default case. BUT what if we set it to -1? The backend with higher available capacity will have more negative weight, which will make that backend less preferable for next &#8216;create&#8217; request, and hence the request will go to the backend which has lesser capacity!</p>

<p>Let us see this too in action.</p>

<p>Check out the config option from cinder.conf file.</p>

<pre><code>rushi@jio:~$ cat /etc/cinder/cinder.conf | grep -B 3 ^capacity_weight_multiplier

# Multiplier used for weighing volume capacity. Negative
# numbers mean to stack vs spread. (floating point value)
# capacity_weight_multiplier=1.0
</code></pre>

<p>The config option is commented out and is there just so that you can easily change it. Now uncomment it and change it&#8217;s value to -1.</p>

<p>Delete previously created volumes. Kill all the three Cinder screen processes (<code>c-api</code>, <code>c-sch</code> and <code>c-vol</code>), and restart them.</p>

<p>Lets create two volumes and see where they end up..</p>

<pre><code>rushi@jio:~$ cinder list
+----+--------+------+------+-------------+----------+-------------+
| ID | Status | Name | Size | Volume Type | Bootable | Attached to |
+----+--------+------+------+-------------+----------+-------------+
+----+--------+------+------+-------------+----------+-------------+
rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:56:59.845733      |
|    description    |                 None                 |
|         id        | b927b328-5ae0-411a-9de2-22ed732b4946 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+
rushi@jio:~$ cinder create 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T17:57:01.132756      |
|    description    |                 None                 |
|         id        | 9f643f2d-7221-4a5c-bf48-1977c9b89fd3 |
|      metadata     |                  {}                  |
|        name       |                 None                 |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   e441f49105f343da87316ab7157e2ab7   |
|    volume_type    |                 None                 |
+-------------------+--------------------------------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   0   0 wz--n-  10.01g 10.01g
  stack-volumes2   1   2   0 wz--n-  10.01g  8.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
</code></pre>

<p>:)</p>

<h3>Case 3 : Custom choice</h3>

<p>What if I have two different backends (maybe one is slower, or costlier, than the other), and my users want to exactly specify how many volumes they want of each &#8216;type&#8217; of backends? Here, Cinder&#8217;s &#8216;volume types&#8217; have us covered.</p>

<p>We can associate a volume type with a backend, and then the users can create a volume of whatever &#8216;type&#8217; they want.
Let&#8217;s throw some discrimination at these backends. I&#8217;ll create two volume types: &#8216;gold&#8217; and &#8216;bronze&#8217;, and associate &#8216;stack-volumes&#8217; with &#8216;gold&#8217; and similarly for &#8216;stack-volumes2&#8217;. Note that this job can only be done by the administrator.</p>

<p>Let us be admins</p>

<pre><code>rushi@jio:~$ . devstack/openrc admin admin
</code></pre>

<p>Create both the volume types and list them.</p>

<pre><code>rushi@jio:~$ cinder type-create gold
+--------------------------------------+------+
|                  ID                  | Name |
+--------------------------------------+------+
| dd883ee0-24be-42e1-ab2e-b9a01454f2f9 | gold |
+--------------------------------------+------+
rushi@jio:~$ cinder type-create bronze
+--------------------------------------+--------+
|                  ID                  |  Name  |
+--------------------------------------+--------+
| f63dd2cb-f4e7-4d6d-a84f-5bf2cc6c5671 | bronze |
+--------------------------------------+--------+

rushi@jio:~$ cinder type-list
+--------------------------------------+--------+
|                  ID                  |  Name  |
+--------------------------------------+--------+
| dd883ee0-24be-42e1-ab2e-b9a01454f2f9 |  gold  |
| f63dd2cb-f4e7-4d6d-a84f-5bf2cc6c5671 | bronze |
+--------------------------------------+--------+
</code></pre>

<p>Get the backend names (<code>volume_backend_name</code> config option) from cinder.conf file.</p>

<pre><code>rushi@jio:~$ tail /etc/cinder/cinder.conf 

[lvmdriver-1]
volume_backend_name = LVM_iSCSI
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes

[lvmdriver-2]
volume_backend_name = LVM_iSCSI_2
volume_driver = cinder.volume.drivers.lvm.LVMISCSIDriver
volume_group = stack-volumes2
</code></pre>

<p>Now let&#8217;s associate backend <code>LVM_iSCSI</code> with volume type &#8216;gold&#8217;, and similarly for the other one.</p>

<pre><code>rushi@jio:~$ cinder type-key gold set volume_backend_name=LVM_iSCSI
rushi@jio:~$ cinder type-key bronze set volume_backend_name=LVM_iSCSI_2
</code></pre>

<p>These association are stored as key-value pairs in the volume type&#8217;s &#8216;extra specs&#8217;. Let&#8217;s see them</p>

<pre><code>rushi@jio:~$ cinder extra-specs-list 
+--------------------------------------+--------+------------------------------------------+
|                  ID                  |  Name  |               extra_specs                |
+--------------------------------------+--------+------------------------------------------+
| dd883ee0-24be-42e1-ab2e-b9a01454f2f9 |  gold  |  {u'volume_backend_name': u'LVM_iSCSI'}  |
| f63dd2cb-f4e7-4d6d-a84f-5bf2cc6c5671 | bronze | {u'volume_backend_name': u'LVM_iSCSI_2'} |
+--------------------------------------+--------+------------------------------------------+
</code></pre>

<p>You can add more key-value pairs for these volume types with different key names. <code>volume_backend_name</code> is a reserved key name, though.</p>

<p>Let&#8217;s create two volumes of type &#8216;gold&#8217; and see where they end up being created:</p>

<pre><code>rushi@jio:~$ cinder create --volume-type gold --name costly_vol_1 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T18:24:07.670635      |
|    description    |                 None                 |
|         id        | 767d4c56-6d3d-46f7-b0a3-4a00f696bcad |
|      metadata     |                  {}                  |
|        name       |             costly_vol_1             |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   c271eb32e71b411bb98ad7b93792d6d5   |
|    volume_type    |                 gold                 |
+-------------------+--------------------------------------+
rushi@jio:~$ cinder create --volume-type gold --name costly_vol_2 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T18:24:58.382180      |
|    description    |                 None                 |
|         id        | a938e556-65cf-4547-87ff-513d60f626d3 |
|      metadata     |                  {}                  |
|        name       |             costly_vol_2             |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   c271eb32e71b411bb98ad7b93792d6d5   |
|    volume_type    |                 gold                 |
+-------------------+--------------------------------------+
rushi@jio:~$ cinder list
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
|                  ID                  |   Status  |     Name     | Size | Volume Type | Bootable | Attached to |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+
| 767d4c56-6d3d-46f7-b0a3-4a00f696bcad | available | costly_vol_1 |  1   |     gold    |  false   |             |
| a938e556-65cf-4547-87ff-513d60f626d3 | available | costly_vol_2 |  1   |     gold    |  false   |             |
+--------------------------------------+-----------+--------------+------+-------------+----------+-------------+

rushi@jio:~$ sudo vgs
  VG             #PV #LV #SN Attr   VSize   VFree 
  stack-volumes    1   2   0 wz--n-  10.01g  8.01g
  stack-volumes2   1   0   0 wz--n-  10.01g 10.01g
  ubuntu-vg        1   2   0 wz--n- 931.27g 44.00m
</code></pre>

<p>Now create another one, but with type &#8216;bronze&#8217; and ensure it is created on the other backend.</p>

<pre><code>rushi@jio:~$ cinder create --volume-type bronze --name cheap_vol_1 1
+-------------------+--------------------------------------+
|      Property     |                Value                 |
+-------------------+--------------------------------------+
|    attachments    |                  []                  |
| availability_zone |                 nova                 |
|      bootable     |                false                 |
|     created_at    |      2014-01-16T18:27:05.852092      |
|    description    |                 None                 |
|         id        | 97f62c7a-b974-41e8-a659-1e6d3eb876d5 |
|      metadata     |                  {}                  |
|        name       |             cheap_vol_1              |
|        size       |                  1                   |
|    snapshot_id    |                 None                 |
|    source_volid   |                 None                 |
|       status      |               creating               |
|      user_id      |   c271eb32e71b411bb98ad7b93792d6d5   |
|    volume_type    |                bronze                |
+-------------------+--------------------------------------+

rushi@jio:~$ sudo pvs
  PV         VG             Fmt  Attr PSize   PFree 
  /dev/loop0 stack-volumes  lvm2 a--   10.01g  8.01g
  /dev/loop1 stack-volumes2 lvm2 a--   10.01g  9.01g
  /dev/sda5  ubuntu-vg      lvm2 a--  931.27g 44.00m
</code></pre>

<p>Done :)</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick Start: Linux Logical Volume Manager]]></title>
    <link href="http://rushiagr.github.io/blog/2014/01/14/quick-start-linux-logical-volume-manager/"/>
    <updated>2014-01-14T20:09:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2014/01/14/quick-start-linux-logical-volume-manager</id>
    <content type="html"><![CDATA[<p>While installing the latest Ubuntu OS on your computer, you will see that
you can install the OS using LVM (Logical Volume Manager) utility. Ever wonder what is it?
LVM (Logical Volume Manager) is that fantastic utility for storage administration.
It provide the users with abilities which were not possible with raw disks.
The storage is now &#8216;virtualized&#8217;. You can now easily create, move and extend volumes (for now, think of it as disk partitions)
without bothering about data corruption. You can carve partitions out of multiple disks,
and can add and remove disks from a &#8216;volume group&#8217; containing such volumes without the user noticing anything!
List of all the features of LVM can be found at it&#8217;s <a href="http://en.wikipedia.org/wiki/Logical_Volume_Manager_(Linux)"
target="_blank">wiki page</a>.</p>

<p>This blog scratches the surface of LVM, and gives some basic insights into some storage concepts.</p>

<!-- more -->


<p>I&#8217;ll give you a simple example to better explain what a &#8216;physical volume&#8217;, a &#8216;volume group&#8217; and a
&#8216;logical volume&#8217; is. Say I have two 1 TB hard disks - disk A and disk B. I have two equal-sized partitions on
disk B, one of which I want to keep it to myself for my personal data. The &#8216;partition&#8217; term used here is
same as what you see in a file explorer. For the unpartitioned disk, the complete disk is one single partition.</p>

<p>The partitions I described above are &#8216;physical volumes&#8217;. That is, on the disk, these are physically separate bytes (think of that
partitioned disk as a spiral on disk divided in its length at the midpoint).
Out of the first disk and one partition of the second disk, we create a &#8216;volume group&#8217; &#8211; a logical pool of storage, out of which we can
create lots of &#8216;logical volumes&#8217;. Even after you&#8217;ve created logical volumes over this volume group, you can add and remove physical volumes (partitions) from the volume group. You can do many more operations such as resize, move and extend.</p>

<p>I hope the basic idea written above is sufficiently clear. Else, head over to this Ubuntu <a href="https://wiki.ubuntu.com/Lvm" target="_blank">wiki</a> for a slightly more detailed, but still an overview, of LVM. Anyway, I&#8217;m concentrating more on the demo, so lets move on.</p>

<h4>Hands-on</h4>

<p>I&#8217;m demo&#8217;ing everything on an Ubuntu machine, but it should work on any Linux distro (after you install the LVM2 package)</p>

<p>Install LVM2 package</p>

<pre><code>sudo apt-get install lvm2
</code></pre>

<p>One nice thing is you don&#8217;t need to create actual partitions on disks. We&#8217;ll use files as <a href="http://en.wikipedia.org/wiki/Loop_device" target="_blank">loopback devices</a>, which will appear to the operating system as partitions. Neat.</p>

<p>Create a file of size 1G to be later used as a physical volume.</p>

<pre><code>rushi@jio:~$ truncate --size 1G backing_file_1
</code></pre>

<p>Create a loopback device over this file. Find the first free loopback device available and show its name.</p>

<pre><code>rushi@jio:~$ sudo losetup --find --show backing_file_1 
/dev/loop0
</code></pre>

<p>List all the loopback devices.</p>

<pre><code>rushi@jio:~$ sudo losetup --all
/dev/loop0: [fc00]:22811987 (/home/rushi/backing_file_1)
</code></pre>

<p>Create a physical volume over this loopback device. Note that</p>

<pre><code>rushi@jio:~$ sudo pvcreate /dev/loop0 
  Physical volume "/dev/loop0" successfully created
</code></pre>

<p>List physical volumes. Apart from <code>pvs</code> (Physical Volume Scan), there are two more
commands which do the same thing, but with different level of verbosity and formatting: <code>pvscan</code> and <code>pvdisplay</code>. (Try them out too!)</p>

<pre><code>rushi@jio:~$ sudo pvs
  PV         VG        Fmt  Attr PSize   PFree 
  /dev/loop0           lvm2 a--    1.00g  1.00g
  /dev/sda5  ubuntu-vg lvm2 a--  931.27g 44.00m
</code></pre>

<p>Let us repeat the steps to create another physical volume:</p>

<pre><code>rushi@jio:~$ truncate --size 1G backing_file_2
rushi@jio:~$ sudo losetup --find --show backing_file_2 
/dev/loop1
rushi@jio:~$ sudo losetup --all
/dev/loop0: [fc00]:22811987 (/home/rushi/backing_file_1)
/dev/loop1: [fc00]:22812001 (/home/rushi/backing_file_2)
rushi@jio:~$ sudo pvcreate /dev/loop1
  Physical volume "/dev/loop1" successfully created
rushi@jio:~$ sudo pvs
  PV         VG        Fmt  Attr PSize   PFree 
  /dev/loop0           lvm2 a--    1.00g  1.00g
  /dev/loop1           lvm2 a--    1.00g  1.00g
  /dev/sda5  ubuntu-vg lvm2 a--  931.27g 44.00m
</code></pre>

<p>Create a volume group <code>test-volgroup</code> over these two physical volumes. (Actually, even if you don&#8217;t create physical volumes over loopback devices, while creating volume groups it will automatically create physical volumes over them).</p>

<pre><code>rushi@jio:~$ sudo vgcreate test-volgroup /dev/loop0 /dev/loop1
  Volume group "test-volgroup" successfully created
</code></pre>

<p>List the volume groups. (<code>vgs</code>, <code>vgscan</code> or <code>vgdisplay</code> can be used)</p>

<pre><code>rushi@jio:~$ sudo vgs
  VG            #PV #LV #SN Attr   VSize   VFree 
  test-volgroup   2   0   0 wz--n-   1.99g  1.99g
  ubuntu-vg       1   2   0 wz--n- 931.27g 44.00m
</code></pre>

<p>Create a logical volume <code>test-logicalvol</code> over the <code>test-volgroup</code> volume group.</p>

<pre><code>rushi@jio:~$ sudo lvcreate --size 400M --name test-logicalvol test-volgroup
  Logical volume "test-logicalvol" created
</code></pre>

<p>List logical volumes. (<code>lvs</code>, <code>lvscan</code>, <code>lvdisplay</code> can be used)</p>

<pre><code>rushi@jio:~$ sudo lvs
  LV              VG            Attr      LSize   Pool Origin Data%  Move Log Copy%  Convert
  test-logicalvol test-volgroup -wi-a---- 400.00m                                           
  root            ubuntu-vg     -wi-ao--- 923.35g                                           
  swap_1          ubuntu-vg     -wi-ao---   7.88g                                           
</code></pre>

<p>Easy, isn&#8217;t it? Let&#8217;s tear down everything. Though a simpler way would be to just remove the loopback device, which will automatically
remove all the physical, logical volumes/volume groups created over them, let&#8217;s do it step-by-step. Note that you need to specify volume group while deleting logical volumes.</p>

<pre><code>rushi@jio:~$ sudo lvremove test-volgroup
Do you really want to remove active logical volume test-logicalvol? [y/n]: y
  Logical volume "test-logicalvol" successfully removed
rushi@jio:~$ sudo vgremove test-volgroup
  Volume group "test-volgroup" successfully removed
rushi@jio:~$ sudo pvremove /dev/loop0 /dev/loop1
  Labels on physical volume "/dev/loop0" successfully wiped
  Labels on physical volume "/dev/loop1" successfully wiped
rushi@jio:~$ sudo losetup --detach /dev/loop0 /dev/loop1
rushi@jio:~$ rm backing_file_1 backing_file_2
</code></pre>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing OpenID plugin for MediaWiki]]></title>
    <link href="http://rushiagr.github.io/blog/2014/01/12/installing-openid-plugin-for-mediawiki/"/>
    <updated>2014-01-12T13:09:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2014/01/12/installing-openid-plugin-for-mediawiki</id>
    <content type="html"><![CDATA[<p>This post is about setting up your wiki such that their users access the wiki
only via an OpenID provider login (e.g. Google or Facebook login). This post assumes
MediaWiki is already installed.</p>

<!--more-->


<h3>Assumptions, prerequisites and requirements</h3>

<p>All of what this blogpost says has been tried on an Ubuntu machine, but it
should work well on other Linux distros too (except for the <code>apt-get</code> package
installs, for which you&#8217;ll need to find alternatives on your favourite distro).</p>

<p><code>$IP</code> is assumed to be the root of your wiki directory (which in my case is
<code>/var/www/wikis/&lt;my_wiki&gt;/</code>.</p>

<p>Install all the required packages for the plugin to work</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install php5-mcrypt php5-gmp</span></code></pre></td></tr></table></div></figure>


<h2>Installing the plugin</h2>

<p>Get the source code for the extension into <code>$IP/extensions</code> directory</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd extensions
</span><span class='line'>git clone http://gerrit.wikimedia.org/r/p/mediawiki/extensions/OpenID.git </span></code></pre></td></tr></table></div></figure>


<p>Check your mediawiki version by going to <code>&lt;your_wiki_URL&gt;/index.php?title=Special:Version</code>. Say your version is 1.19.x.
  Check out branch for the same version of OpenID code</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch -a 
</span><span class='line'>git checkout -b stable_REL1_19 origin/REL1_19 </span></code></pre></td></tr></table></div></figure>


<p>Add this line at the end of LocalSettings.php file</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require_once "$IP/extensions/OpenID/OpenID.php"; </span></code></pre></td></tr></table></div></figure>


<p>Now install Auth subdirectory as following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd $IP/extensions/OpenID 
</span><span class='line'>git clone http://github.com/openid/php-openid.git 
</span><span class='line'>mv php-openid/Auth Auth 
</span><span class='line'>rm -r php-openid 
</span><span class='line'>cd $IP 
</span><span class='line'>php maintenance/update.php --conf LocalSettings.php </span></code></pre></td></tr></table></div></figure>


<p>Restart apache server</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/init.d/apache2 restart </span></code></pre></td></tr></table></div></figure>


<h3>Editing &#8216;Login required&#8217; page.</h3>

<p>By default, the main page of the wiki is not editable. Generally we would like
to give some information to a user, e.g. what this wiki is all about, how
to log into it, which OpenIDs are permitted, etc.</p>

<p>Now we&#8217;ll give any registered user the ability to edit the protected pages and the
&#8216;interface&#8217; pages, of which our special login page is a part of. Add these lines
 to <code>$IP/LocalSettings.php</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$wgGroupPermissions['user']['editprotected'] = true; 
</span><span class='line'>$wgGroupPermissions['user']['editinterface'] = true; </span></code></pre></td></tr></table></div></figure>


<p>Now you can edit the <code>&lt;your_wiki_URL&gt;/jiocloud/index.phpmediawiki:loginreqpagetext</code>
 page which is presented when the user is not logged in.</p>

<h3>Other settings</h3>

<p>Below you can see a snip of LocalSettings.php file, which contains many other
fields which I used to customize my wiki. I allowed only the registered user
an edit permission (which most of you would also want I guess). Also, I have disabled
regular login, and made it mandatory users to login via only OpenID, and that too,
only using their launchpad.net accounts (an issue tracking software from Canonical).</p>

<p>If you want to get more information regarding these (and more)
configuration options, see <a href="http://www.mediawiki.org/wiki/Extension:OpenID" target="_blank">this</a> link.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Disable reading by anonymous users
</span><span class='line'>$wgGroupPermissions['*']['read'] = false;
</span><span class='line'>
</span><span class='line'># Disable anonymous editing too
</span><span class='line'>$wgGroupPermissions['*']['edit'] = false;
</span><span class='line'> 
</span><span class='line'># But allow them to access the OpenID login page or else there will be no way to log in!
</span><span class='line'>$wgWhitelistRead = array ("Special:OpenIDLogin", "Special:OpenIDFinish", 
</span><span class='line'>"MediaWiki:Common.css", "MediaWiki:Common.js", "MediaWiki:Monobook.css", 
</span><span class='line'>"MediaWiki:Monobook.js", "-");
</span><span class='line'> 
</span><span class='line'># For registered users, allow editing protected pages
</span><span class='line'>$wgGroupPermissions['user']['editprotected'] = true;
</span><span class='line'>$wgGroupPermissions['user']['editinterface'] = true;
</span><span class='line'>
</span><span class='line'># Only allow OpenIDs for login
</span><span class='line'>$wgOpenIDLoginOnly = true;
</span><span class='line'>$wgOpenIDOnly = true;       # a value used with older versions. Optional
</span><span class='line'>
</span><span class='line'># Your wiki web URL
</span><span class='line'>$wgOpenIDTrustRoot = "http://your.wiki.url.com/";
</span><span class='line'>
</span><span class='line'># By default, deny all OpenID
</span><span class='line'>$wgOpenIDConsumerDenyByDefault = true;
</span><span class='line'>
</span><span class='line'># Then allow only launchpad.net OpenID (with and without HTTPS both)
</span><span class='line'>$wgOpenIDConsumerAllow = array("@^(https://)?launchpad.net/@");</span></code></pre></td></tr></table></div></figure>


<h2>Troubleshooting</h2>

<p>If there are troubles uploading a file via the MediaWiki web interface, go to the wiki directory on the server and chown the <code>images</code> folder.</p>

<pre><code>sudo chown -R www-data:www-data images/
</code></pre>

<p>Don&#8217;t forget to comment if you find the information presented here is outdated, or is not working for you.</p>

<p>Cheers,
Rushi</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bye bye 2013. Welcome 2014]]></title>
    <link href="http://rushiagr.github.io/blog/2014/01/01/bye-bye-2013-welcome-2014/"/>
    <updated>2014-01-01T13:40:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2014/01/01/bye-bye-2013-welcome-2014</id>
    <content type="html"><![CDATA[<p>How year 2013 fared for me, and my plans for 2014.</p>

<!--more-->


<p>Mixed bag of a year. Some pretty hard decisions were made by me. I left the job I loved so much &#8211; joined Amazon,
rival of the technology I was working on (OpenStack). I knew my life was going to be tougher at Amazon. It was not only about
the work, but also about the philosophy. In NetApp, it was a complete opensource, collaborative model of development. Nothing
of this sort of freedom I was going to get at Amazon. But there were some internal issues of working at NetApp which prompted
me to switch over to another company. It wasn&#8217;t me who approached them for the job but it was the other way round.  The funny part was, I didn&#8217;t think of joining Amazon till I got the offer letter. I said okay, anyways I will need to move out of this job
(due to those internal conflicts, and partly due to the lower salary), so why not get some interviewing practice by appearing
for them at Amazon! The compensation they were offering was significantly higher than my then salary, which just gave me another reason to accept the offer. I convinced myself that I am going to anyway leave the job at Amazon as soon as I get a better opportunity
at a more freedom-loving place (freedom both in the sense of work-life balance as well as freedom of working on opensource softwares).
I made a mental note for myself that I am going to work for Amazon for 6 months at the max.</p>

<p>But God has different plans. Within a week of joining Amazon, I got a mail that Rick Clark, one of the founders of OpenStack wants to meet me, and wants me on his team which is going to work on OpenStack. The way in which he likes to work, as was told by him over a phone call, impressed me, and I quickly switched jobs. Again, in just over a month. Believe me, joining Reliance, a name not at all known in the software industry, was one heck of a decision. Not to say that switching over to Amazon from NetApp was any less emotionally draining.</p>

<p>Even after joining Reliance (Reliance Jio Infocomm to be precise), as the Bangalore office was not completely set up by the time I joined, I worked from Mumbai office, and then from home for a couple of months. Life before and after this four-month period starting from leaving job at NetApp was more sedate and stable.</p>

<h2>Things that went well for me</h2>

<h4>Day job</h4>

<p>Absolutely happy with the day job. Totally in love with the ownership model we have in place. I get to decide which project I will be most interested to work on. I decide what needs to be done in what time. Though this causes laziness, I manage it by following a stricter schedule, and by giving importance of the sense of trust shown in me &#8211; if someone trusts me this much, it is my moral responsibility to not disappoint him by underperforming.</p>

<p>Our chief arhitect, Soren Hansen, is exceptionally brilliant, and equally understanding. I can talk to him just like a friend.</p>

<h4>Day job compensation</h4>

<p>My salary has grown to an amount that my spendings are now less than 1/5th of my total salary. This means I have fairly early in my career reached a level where I don&#8217;t care too much about my salary, and how much it is going to increase, and related stuff. It is just another number reflected in my bank account.</p>

<h4>Task tracking</h4>

<p>Be it tracking articles to read, blogposts to write, side projects to do, or things to learn; I am tracking each of them very efficiently thanks to the Trello. An awesome tool, and I definitely recommend you to use it. Till last year, I used to rely upon Microsoft OneNote, and thankfully I have found a better alternative for that after quite some time.</p>

<p>I also now maintain a notebook and a pen. This helps a lot for things to do in a short time, as I can have my notebook always open at my desk &#8211; not the same case with any software in the computer which always gets hidden in the background once we start working. It is a nice feeling to strike off items one-by-one from the bullet list you write down on a paper. I also find paper notebooks very helpful when I am planning something, e.g. a side project. The free form writing/drawing it allows is still not possible in the digital world, I believe.</p>

<h4>Setting up priorities in life</h4>

<p>Not anymore in mood of going for higher studies. Not going to prepare for interviews, and algorithmic questions. Going to work on side projects, and will look for opportunities of starting something of my own. Marriage? Don&#8217;t talk about it just yet.</p>

<h2>Things that didn&#8217;t go that well</h2>

<p>As always, more negatives than positives :)</p>

<h4>Side projects</h4>

<p>Two job changes, time spent in decision making and relocation, and day job work from four cities all made my life a little unsettled for a majority of this year. As a result, I couldn&#8217;t spend much time on any of them. I started with ResumAppGAE (I know, a poor name by any standards), an application to create your resume in a single-page HTML file, but left it completely as soon as I was offered a job at Amazon. Another one, <a href="http://www.rushiagr.com/202020rule/" target="_blank">20-20-20 rule</a>, is a simple one, and I am pretty happy with its progress. Not much learning involved in it, but it gave me important lessons with respect to time and priority management.</p>

<h4>Very less blogs</h4>

<p>I did work on a lot of items on which I can write blog articles, but always fell short of doing that. This article can be thought of an attempt to start fixing that.</p>

<h4>Feeble Concentration</h4>

<p>Failed hopelessly on the promise of using less online social networking. Still spending too much time on online news and social networks. I still think that at the most half an hour each day is enough to keep oneself abreast of all the happenings in the world, plus keeping in contact with friends. The harder part is execution :)</p>

<p>Also, there is still a very long way to go before I am confident of my breaks between working. Proper management of breaks directly affect the productivity when one is not on a break.</p>

<h4>Poor time management</h4>

<p>Only in the last months was I able to reasonably balance my time between my day job, family and friends. I hope to continue the same in the coming year.</p>

<h4>Very less travelling/vacation</h4>

<p>Not a single trip to any place worth visiting in the whole year. Whatever vacations I took I spent time at home. I am going to repent in my old age if I continue like this.</p>

<h2>Plans for upcoming year</h2>

<h4>Better planning</h4>

<p>Of day job, side projects, blog writing, vacations, time for friends and family.</p>

<h4>Write blogs</h4>

<p>Write as much as I can. It is the easiest, simplest and cheapest medium by which I can help people gain knowledge.</p>

<h4>Final goal, plus some resolutions</h4>

<p>Become expert in OpenStack. Implement and popularize a couple side projects (i.e. get people to love it). Lose weight. Do a simple workout daily.</p>

<p>All in all, a decent year. Not as good as I wanted it to be, but definitely better than the last one.</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Screens in DevStack]]></title>
    <link href="http://rushiagr.github.io/blog/2013/06/05/linux-screens-in-devstack/"/>
    <updated>2013-06-05T20:50:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2013/06/05/linux-screens-in-devstack</id>
    <content type="html"><![CDATA[<p>This blog article explains handling screens within OpenStack running as a DevStack setup. Some useful generic screen commands are also provided at the end.</p>

<!--more-->


<p>In a DevStack environment, all the processes run under something special in Linux, called as a <code>screen</code>. For now, you can think of a ‘screen’ as a terminal running inside a terminal, with the special property that when you close your current terminal, your ‘screens’ will not actually die, so that you can reconnect to them when you connect to the Linux system through another terminal again! Now that should give you a hint why people use screens :)</p>

<p>Each screen runs a special ‘service’ of OpenStack. So the logs of each service will go to the respective screen. If you created the DevStack environment as a root user, the process of going to a screen is slightly complicated: You first need to become the <code>stack</code> user if you are currently <code>root</code>, and even before that, you need to run this command in most of the cases:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown stack:stack `readlink /proc/self/fd/0`</span></code></pre></td></tr></table></div></figure>


<p>Else it will produce this error <code>Cannot open your terminal '/dev/pts/2' - please check.</code> , and then you can proceed to run this command to get to the screens:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>screen -x</span></code></pre></td></tr></table></div></figure>


<p>And if you ran the DevStack <code>stack.sh</code> script as a non-root user, you just need to run that last little thingy to see the screens. One more reason why you should run DevStack as a non-root.</p>

<p>The way to detach from a screen is <code>CTRL+A</code> <code>D</code>, that is, first press <code>CTRL+A</code>, and then press <code>D</code>.</p>

<h2>Navigating across screens</h2>

<p>You will see names of all the screens at the bottom of the terminal. The screen on which you currently are bears an asterisk (<code>*</code>) near its name. To move to the right screen, do a <code>CTRL+A</code> <code>N</code>. Keep in mind that you are going to use <code>CTRL+A</code> a lot of times during your adventures with screen. Similar to the command <code>CTRL+A</code> <code>N</code> to move to the right (“next”) screen, to move to the left screen the command is <code>CTRL+A</code> <code>P</code>.</p>

<p>There is one more way to jump directly to a screen. Lets say you want to directly jump to the fourth screen. You just need to do a <code>CTRL+A</code> <code>4</code>, to go to fourth screen! Wasn’t that easy? But hey! How do I get to the seventeenth screen? Frankly, I don’t know a ‘direct’ way. I do a <code>CTRL+A</code> <code>9</code> once, and <code>CTRL+A</code> <code>N</code> eight more times. :( If you have a better way, please do tell me.</p>

<p>Navigating inside a screen</p>

<p>The first and biggest difficulty I faced while tracking an error in the screen logs is the periodic updates in Cinder dumps some lines to the Cinder screens every now and then. So if you have a stack trace of an error on the screen, it will go up and up and up till you can no more see it! Nope, scrolling your mouse up, or pulling the scrollbar up won’t help either (why not try it once :) ).</p>

<p>Within a few days, I thought “Hey, I’ll just reduce the font of the terminal and I’ll be able to see more lines of screen logs on my screen!”. I knew the command to reduce the font size of the terminal font: <code>CTRL</code>+<code>-</code> (just for the sake of completeness, the command to increase font is <code>CTRL</code>+<code>SHIFT</code>+<code>+</code>). That worked pretty okay upto a point. It actually helps to have logs in small font, as the logs will fit in one line on the screen and will look prettier. But what if I come after say a ten-minute break, and see all my logs are too far up to be able to see even by reducing font size?</p>

<p>Then I got to know the command which saved a ton of time in my life: The command to actually scroll up and down the screen.</p>

<p>To scroll up, first press <code>CTRL</code>+<code>[</code>. After that, you can use arrow keys to scroll up and down. You can also use <code>page-up</code> and <code>page-down</code> buttons to scroll one complete page up or down. This isn’t all of it. If you are vim user, you will find that the <code>H</code> <code>J</code> <code>K</code> <code>L</code> will work for for <code>left</code>, <code>down</code>, <code>up</code>, and <code>right</code> respectively. And the last and most convenient thing: once you press <code>CTRL</code> <code>[</code>, that is, once you are in ‘copy mode’, you can then use your mouse scroll wheel too to scroll up and down!! Now that is a perfect delight :)</p>

<p>To come out of this copy mode (so that you can switch to another screen, and do other such stuff), press <code>]</code> and you are back to normal once again.</p>

<h2>Some more ‘generic’ screen commands</h2>

<p>So that you can start playing around with screens outside OpenStack too</p>

<p>Create a new screen</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>screen</span></code></pre></td></tr></table></div></figure>


<p>To detach from current screen</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ctrl+A,D</span></code></pre></td></tr></table></div></figure>


<p>To reattach to an existing screen</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>screen -rd</span></code></pre></td></tr></table></div></figure>


<p>To view all the screens, their states and IDs</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>screen -list</span></code></pre></td></tr></table></div></figure>


<p>To kill a screen with id SCREENID</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>screen -X -S SCREENID kill</span></code></pre></td></tr></table></div></figure>


<p>Cheers!</p>

<p>-Rushi Agrawal</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cinder on DevStack - Quick Start]]></title>
    <link href="http://rushiagr.github.io/blog/2013/05/27/cinder-on-devstack-quick-start/"/>
    <updated>2013-05-27T22:33:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2013/05/27/cinder-on-devstack-quick-start</id>
    <content type="html"><![CDATA[<p>This blog post covers all the important commands for OpenStack Cinder - The block storage project.
Although this guide is written based on DevStack, it will work with actual deployment of OpenStack
cloud also (except the DevStack/Linux specific bits).</p>

<!--more-->


<p>All the Cinder operations can be performed via either of these three means:</p>

<ol>
<li>CLI (Cinder&#8217;s <code>python-cinderclient</code> command line module)</li>
<li>GUI (Using OpenStack&#8217;s GUI project <code>horizon</code>)</li>
<li>Directly calling the Cinder APIs</li>
</ol>


<p>Internally, the CLI and GUI both use Cinder APIs to interact with the Cinder API server, but for
a relatively new guy to OpenStack, I think an introduction through CLI would make the most sense.</p>

<p>Assumptions made:</p>

<ol>
<li>You understand how to setup a DevStack environment and already have one ready at hand (remember <code>./stack.sh</code>?)</li>
<li>You know how to pass default credentials to local shell environment (<code>. /home/path_to_your_devstack_repo/eucarc</code> will do)</li>
</ol>


<p>Let&#8217;s start.</p>

<h3>Creation and deletion of volumes</h3>

<p>Create a 1-GB cinder volume with no name by running command <code>cinder create 1</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder create 1
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|       Property      |                Value                 |
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|     attachments     |                  []                  |
</span><span class='line'>|  availability_zone  |                 nova                 |
</span><span class='line'>|       bootable      |                false                 |
</span><span class='line'>|      created_at     |      2013-05-28T10:32:47.243613      |
</span><span class='line'>| display_description |                 None                 |
</span><span class='line'>|     display_name    |                 None                 |
</span><span class='line'>|          id         | 6754d216-4792-4a38-964a-d002686c8f92 |
</span><span class='line'>|       metadata      |                  {}                  |
</span><span class='line'>|         size        |                  1                   |
</span><span class='line'>|     snapshot_id     |                 None                 |
</span><span class='line'>|     source_volid    |                 None                 |
</span><span class='line'>|        status       |               creating               |
</span><span class='line'>|     volume_type     |                 None                 |
</span><span class='line'>+---------------------+--------------------------------------+</span></code></pre></td></tr></table></div></figure>


<p>Here I am describing only the minimal functionality of a command. If you wish to see more info about what all you
can do with that command, just type <code>cinder help &lt;command&gt;</code>, so to see all the optional parameters you can pass
while creating a Cinder volume, execute <code>cinder help create</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder help create
</span><span class='line'>usage: cinder create [--snapshot-id &lt;snapshot-id&gt;]
</span><span class='line'>                     [--source-volid &lt;source-volid&gt;] [--image-id &lt;image-id&gt;]
</span><span class='line'>                     [--display-name &lt;display-name&gt;]
</span><span class='line'>                     [--display-description &lt;display-description&gt;]
</span><span class='line'>                     [--volume-type &lt;volume-type&gt;]
</span><span class='line'>                     [--availability-zone &lt;availability-zone&gt;]
</span><span class='line'>                     [--metadata [&lt;key=value&gt; [&lt;key=value&gt; ...]]]
</span><span class='line'>                     &lt;size&gt;
</span><span class='line'>
</span><span class='line'>Add a new volume.
</span><span class='line'>
</span><span class='line'>Positional arguments:
</span><span class='line'>  &lt;size&gt;                Size of volume in GB
</span><span class='line'>
</span><span class='line'>Optional arguments:
</span><span class='line'>  --snapshot-id &lt;snapshot-id&gt;
</span><span class='line'>                        Create volume from snapshot id (Optional,
</span><span class='line'>                        Default=None)
</span><span class='line'>  --source-volid &lt;source-volid&gt;
</span><span class='line'>                        Create volume from volume id (Optional, Default=None)
</span><span class='line'>  --image-id &lt;image-id&gt;
</span><span class='line'>                        Create volume from image id (Optional, Default=None)
</span><span class='line'>  --display-name &lt;display-name&gt;
</span><span class='line'>                        Volume name (Optional, Default=None)
</span><span class='line'>  --display-description &lt;display-description&gt;
</span><span class='line'>                        Volume description (Optional, Default=None)
</span><span class='line'>  --volume-type &lt;volume-type&gt;
</span><span class='line'>                        Volume type (Optional, Default=None)
</span><span class='line'>  --availability-zone &lt;availability-zone&gt;
</span><span class='line'>                        Availability zone for volume (Optional, Default=None)
</span><span class='line'>  --metadata [&lt;key=value&gt; [&lt;key=value&gt; ...]]
</span><span class='line'>                        Metadata key=value pairs (Optional, Default=None)</span></code></pre></td></tr></table></div></figure>


<p>Don&#8217;t worry about the parameters, we&#8217;ll use most of them in a short time.</p>

<p>Let&#8217;s create a Cinder volume of size 1GB with a name, using <code>cinder create --display-name my_second_vol 1</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder create --display-name my_second_vol 1
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|       Property      |                Value                 |
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|     attachments     |                  []                  |
</span><span class='line'>|  availability_zone  |                 nova                 |
</span><span class='line'>|       bootable      |                false                 |
</span><span class='line'>|      created_at     |      2013-05-28T10:40:32.801981      |
</span><span class='line'>| display_description |                 None                 |
</span><span class='line'>|     display_name    |            my_second_vol             |
</span><span class='line'>|          id         | 25fa2028-46dc-4870-84c5-d062ae99dd7a |
</span><span class='line'>|       metadata      |                  {}                  |
</span><span class='line'>|         size        |                  1                   |
</span><span class='line'>|     snapshot_id     |                 None                 |
</span><span class='line'>|     source_volid    |                 None                 |
</span><span class='line'>|        status       |               creating               |
</span><span class='line'>|     volume_type     |                 None                 |
</span><span class='line'>+---------------------+--------------------------------------+</span></code></pre></td></tr></table></div></figure>


<p>Now lets list out all the Cinder volumes, using <code>cinder list</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder list
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>|                  ID                  |   Status  |  Display Name | Size | Volume Type | Bootable | Attached to |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>| 25fa2028-46dc-4870-84c5-d062ae99dd7a | available | my_second_vol |  1   |     None    |  false   |             |
</span><span class='line'>| 6754d216-4792-4a38-964a-d002686c8f92 | available |      None     |  1   |     None    |  false   |             |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+</span></code></pre></td></tr></table></div></figure>


<p>Now lets delete the first volume (the one without a name), using <code>cinder delete &lt;volume_id&gt;</code> command. If you
execute <code>cinder list</code> real quick, you will see the status of the volume going to &#8216;deleting&#8217;, and after some time
the volume will be deleted:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder delete 6754d216-4792-4a38-964a-d002686c8f92
</span><span class='line'>stack@stlrx300s7-27:/$ cinder list 
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>|                  ID                  |   Status  |  Display Name | Size | Volume Type | Bootable | Attached to |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>| 25fa2028-46dc-4870-84c5-d062ae99dd7a | available | my_second_vol |  1   |     None    |  false   |             |
</span><span class='line'>| 6754d216-4792-4a38-964a-d002686c8f92 |  deleting |      None     |  1   |     None    |  false   |             |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>stack@stlrx300s7-27:/$ 
</span><span class='line'>stack@stlrx300s7-27:/$ 
</span><span class='line'>stack@stlrx300s7-27:/$ cinder list
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>|                  ID                  |   Status  |  Display Name | Size | Volume Type | Bootable | Attached to |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>| 25fa2028-46dc-4870-84c5-d062ae99dd7a | available | my_second_vol |  1   |     None    |  false   |             |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+</span></code></pre></td></tr></table></div></figure>


<p>On a default DevStack installation, for a volume in Cinder, a &#8216;logical volume&#8217; is created on the Linux machine,
inside the &#8216;physical volume&#8217; named <code>stack-volumes</code>. To see the logical volumes, and physical volumes on the
ubuntu machine, just run <code>lvs</code> (logical volume scan) and <code>pvs</code> (physical volume scan) respectively (this is just
for information and you can entirely skip this part):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ sudo lvs
</span><span class='line'>  LV                                          VG            Attr   LSize Origin Snap%  Move Log Copy%  Convert
</span><span class='line'>  volume-25fa2028-46dc-4870-84c5-d062ae99dd7a stack-volumes -wi-ao 1.00g
</span><span class='line'>stack@stlrx300s7-27:/$
</span><span class='line'>stack@stlrx300s7-27:/$ sudo pvs
</span><span class='line'>  PV         VG            Fmt  Attr PSize PFree
</span><span class='line'>  /dev/loop0 stack-volumes lvm2 a-   5.01g 4.01g</span></code></pre></td></tr></table></div></figure>


<h3>Volume snapshots</h3>

<p>Create the snapshot of volume:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder snapshot-create 25fa2028-46dc-4870-84c5-d062ae99dd7a
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|       Property      |                Value                 |
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|      created_at     |      2013-05-28T10:55:03.966690      |
</span><span class='line'>| display_description |                 None                 |
</span><span class='line'>|     display_name    |                 None                 |
</span><span class='line'>|          id         | baf8764f-4c9b-496a-b2ff-bd49825c5d09 |
</span><span class='line'>|       metadata      |                  {}                  |
</span><span class='line'>|         size        |                  1                   |
</span><span class='line'>|        status       |               creating               |
</span><span class='line'>|      volume_id      | 25fa2028-46dc-4870-84c5-d062ae99dd7a |
</span><span class='line'>+---------------------+--------------------------------------+</span></code></pre></td></tr></table></div></figure>


<p>List all the snapshots:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder snapshot-list
</span><span class='line'>+--------------------------------------+--------------------------------------+-----------+--------------+------+
</span><span class='line'>|                  ID                  |              Volume ID               |   Status  | Display Name | Size |
</span><span class='line'>+--------------------------------------+--------------------------------------+-----------+--------------+------+
</span><span class='line'>| baf8764f-4c9b-496a-b2ff-bd49825c5d09 | 25fa2028-46dc-4870-84c5-d062ae99dd7a | available |     None     |  1   |
</span><span class='line'>+--------------------------------------+--------------------------------------+-----------+--------------+------+</span></code></pre></td></tr></table></div></figure>


<p>Now lets create a new volume of 1GB from the snapshot:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder create --snapshot-id baf8764f-4c9b-496a-b2ff-bd49825c5d09 1
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|       Property      |                Value                 |
</span><span class='line'>+---------------------+--------------------------------------+
</span><span class='line'>|     attachments     |                  []                  |
</span><span class='line'>|  availability_zone  |                 nova                 |
</span><span class='line'>|       bootable      |                false                 |
</span><span class='line'>|      created_at     |      2013-05-28T10:56:20.478141      |
</span><span class='line'>| display_description |                 None                 |
</span><span class='line'>|     display_name    |                 None                 |
</span><span class='line'>|          id         | 99ebe1d0-678b-4a9a-8ec4-438f9804d327 |
</span><span class='line'>|       metadata      |                  {}                  |
</span><span class='line'>|         size        |                  1                   |
</span><span class='line'>|     snapshot_id     | baf8764f-4c9b-496a-b2ff-bd49825c5d09 |
</span><span class='line'>|     source_volid    |                 None                 |
</span><span class='line'>|        status       |               creating               |
</span><span class='line'>|     volume_type     |                 None                 |
</span><span class='line'>+---------------------+--------------------------------------+</span></code></pre></td></tr></table></div></figure>


<p>Now you will see two volumes when you&#8217;ll do a <code>cinder list</code>.</p>

<h3>Accessing volumes from inside a virtual instance</h3>

<p>You can attach a volume to a VM instance, to provide additional persistent storage to that VM. It
works just like you attach an external HDD to your computer/laptop. But first, we&#8217;ll need to create a
virtual machine for that.</p>

<p>List out all the virtual machine images present in our DevStack setup, from which we can boot a
brand new VM instance, using <code>glance image-list</code> or &#8216;nova image-list`:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ nova image-list
</span><span class='line'>+--------------------------------------+---------------------------------+--------+--------+
</span><span class='line'>| ID                                   | Name                            | Status | Server |
</span><span class='line'>+--------------------------------------+---------------------------------+--------+--------+
</span><span class='line'>| 291fe347-3a6f-4a21-9e85-e8809cb05d6e | cirros-0.3.1-x86_64-uec         | ACTIVE |        |
</span><span class='line'>| 69d14d74-4185-4ba3-9666-1e7f569f38c6 | cirros-0.3.1-x86_64-uec-kernel  | ACTIVE |        |
</span><span class='line'>| 8793532d-0c09-4b1c-aab8-d10832f13c09 | cirros-0.3.1-x86_64-uec-ramdisk | ACTIVE |        |
</span><span class='line'>+--------------------------------------+---------------------------------+--------+--------+</span></code></pre></td></tr></table></div></figure>


<p>We&#8217;ll use the image with the shortest name, and boot an instance, giving it a name <code>myinstance</code>.
You can list all the virtual machine instances registered with Nova using command <code>nova list</code>.
If just after running the command to boot the virtual machine, you run <code>nova list</code> a few times,
you will see the machine state going from &#8216;BUILD&#8217; to &#8216;ACTIVE&#8217; in a few seconds.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ nova boot --flavor m1.tiny --image 291fe347-3a6f-4a21-9e85-e8809cb05d6e myinstance
</span><span class='line'>+-----------------------------+--------------------------------------+
</span><span class='line'>| Property                    | Value                                |
</span><span class='line'>+-----------------------------+--------------------------------------+
</span><span class='line'>| status                      | BUILD                                |
</span><span class='line'>| updated                     | 2013-05-28T11:03:47Z                 |
</span><span class='line'>| OS-EXT-STS:task_state       | scheduling                           |
</span><span class='line'>| key_name                    | None                                 |
</span><span class='line'>| image                       | cirros-0.3.1-x86_64-uec              |
</span><span class='line'>| hostId                      |                                      |
</span><span class='line'>| OS-EXT-STS:vm_state         | building                             |
</span><span class='line'>| flavor                      | m1.tiny                              |
</span><span class='line'>| id                          | 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f |
</span><span class='line'>| security_groups             | [{u'name': u'default'}]              |
</span><span class='line'>| user_id                     | 35708cb6795845fcab6362e908e6b0cf     |
</span><span class='line'>| name                        | myinstance                           |
</span><span class='line'>| adminPass                   | cQh34G96dCHX                         |
</span><span class='line'>| tenant_id                   | 11f8fde7d627422d84036cabd6cbb7f8     |
</span><span class='line'>| created                     | 2013-05-28T11:03:47Z                 |
</span><span class='line'>| OS-DCF:diskConfig           | MANUAL                               |
</span><span class='line'>| metadata                    | {}                                   |
</span><span class='line'>| accessIPv4                  |                                      |
</span><span class='line'>| accessIPv6                  |                                      |
</span><span class='line'>| progress                    | 0                                    |
</span><span class='line'>| OS-EXT-STS:power_state      | 0                                    |
</span><span class='line'>| OS-EXT-AZ:availability_zone | nova                                 |
</span><span class='line'>| config_drive                |                                      |
</span><span class='line'>+-----------------------------+--------------------------------------+
</span><span class='line'>stack@stlrx300s7-27:/$ nova list
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+----------+
</span><span class='line'>| ID                                   | Name       | Status | Task State | Power State | Networks |
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+----------+
</span><span class='line'>| 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f | myinstance | BUILD  | networking | NOSTATE     |          |
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+----------+
</span><span class='line'>stack@stlrx300s7-27:/$ nova list
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+----------+
</span><span class='line'>| ID                                   | Name       | Status | Task State | Power State | Networks |
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+----------+
</span><span class='line'>| 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f | myinstance | BUILD  | spawning   | NOSTATE     |          |
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+----------+
</span><span class='line'>stack@stlrx300s7-27:/$ nova list
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+------------------+
</span><span class='line'>| ID                                   | Name       | Status | Task State | Power State | Networks         |
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+------------------+
</span><span class='line'>| 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f | myinstance | ACTIVE | None       | Running     | private=10.0.0.2 |
</span><span class='line'>+--------------------------------------+------------+--------+------------+-------------+------------------+</span></code></pre></td></tr></table></div></figure>


<p>Now lets attach one of our volume to this instance, and then try to peek into this volume after logging into the instance.</p>

<p>Attach volume using command <code>nova volume-attach &lt;instance_id&gt; &lt;volume_id&gt; &lt;attach_location&gt;</code>. We&#8217;ll attach at the first
free device location: <code>/dev/vdb</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ nova volume-attach 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f 25fa2028-46dc-4870-84c5-d062ae99dd7a /dev/vdb
</span><span class='line'>+----------+--------------------------------------+
</span><span class='line'>| Property | Value                                |
</span><span class='line'>+----------+--------------------------------------+
</span><span class='line'>| device   | /dev/vdb                             |
</span><span class='line'>| serverId | 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f |
</span><span class='line'>| id       | 25fa2028-46dc-4870-84c5-d062ae99dd7a |
</span><span class='line'>| volumeId | 25fa2028-46dc-4870-84c5-d062ae99dd7a |
</span><span class='line'>+----------+--------------------------------------+</span></code></pre></td></tr></table></div></figure>


<p>Now listing the volume will tell you that the volume is attached to an instance (in use):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder list
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+--------------------------------------+
</span><span class='line'>|                  ID                  |   Status  |  Display Name | Size | Volume Type | Bootable |             Attached to              |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+--------------------------------------+
</span><span class='line'>| 25fa2028-46dc-4870-84c5-d062ae99dd7a |   in-use  | my_second_vol |  1   |     None    |  false   | 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f |
</span><span class='line'>| 99ebe1d0-678b-4a9a-8ec4-438f9804d327 | available |      None     |  1   |     None    |  false   |                                      |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+--------------------------------------+</span></code></pre></td></tr></table></div></figure>


<p>Now let&#8217;s login into this virtual machine using the private IP of the instance (<code>10.0.0.2</code> in our case). Note how an
error message pops up if you have already created an instance last time when you installed DevStack. If such an error
appears on your screen too, follow the instructions just like the way I did. The default password for the cirros image
we used is <code>cubswin:)</code>. Enter into the instance, and then become root:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ ssh cirros@10.0.0.2
</span><span class='line'>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
</span><span class='line'>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
</span><span class='line'>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
</span><span class='line'>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
</span><span class='line'>Someone could be eavesdropping on you right now (man-in-the-middle attack)!
</span><span class='line'>It is also possible that a host key has just been changed.
</span><span class='line'>The fingerprint for the RSA key sent by the remote host is
</span><span class='line'>f5:ac:45:4c:63:8e:e4:19:cc:5a:76:7e:a1:08:e7:c8.
</span><span class='line'>Please contact your system administrator.
</span><span class='line'>Add correct host key in /opt/stack/.ssh/known_hosts to get rid of this message.
</span><span class='line'>Offending RSA key in /opt/stack/.ssh/known_hosts:4
</span><span class='line'>  remove with: ssh-keygen -f "/opt/stack/.ssh/known_hosts" -R 10.0.0.2
</span><span class='line'>RSA host key for 10.0.0.2 has changed and you have requested strict checking.
</span><span class='line'>Host key verification failed.
</span><span class='line'>
</span><span class='line'>stack@stlrx300s7-27:/$ ssh-keygen -f "/opt/stack/.ssh/known_hosts" -R 10.0.0.2
</span><span class='line'>/opt/stack/.ssh/known_hosts updated.
</span><span class='line'>Original contents retained as /opt/stack/.ssh/known_hosts.old</span></code></pre></td></tr></table></div></figure>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ ssh cirros@10.0.0.2
</span><span class='line'>The authenticity of host '10.0.0.2 (10.0.0.2)' can't be established.
</span><span class='line'>RSA key fingerprint is f5:ac:45:4c:63:8e:e4:19:cc:5a:76:7e:a1:08:e7:c8.
</span><span class='line'>Are you sure you want to continue connecting (yes/no)? yes
</span><span class='line'>Warning: Permanently added '10.0.0.2' (RSA) to the list of known hosts.
</span><span class='line'>cirros@10.0.0.2's password: 
</span><span class='line'>$sudo -i
</span><span class='line'>#</span></code></pre></td></tr></table></div></figure>


<p>Run <code>fdisk -l</code> to see the disks present for the instance. You will see that your newly attached disk
<code>/dev/vdb</code> of size 1GB is now present:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># fdisk -l
</span><span class='line'>
</span><span class='line'>Disk /dev/vda: 1073 MB, 1073741824 bytes
</span><span class='line'>16 heads, 63 sectors/track, 2080 cylinders, total 2097152 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00000000
</span><span class='line'>
</span><span class='line'>Disk /dev/vda doesn't contain a valid partition table
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb: 1073 MB, 1073741824 bytes
</span><span class='line'>16 heads, 63 sectors/track, 2080 cylinders, total 2097152 sectors
</span><span class='line'>Units = sectors of 1 * 512 = 512 bytes
</span><span class='line'>Sector size (logical/physical): 512 bytes / 512 bytes
</span><span class='line'>I/O size (minimum/optimal): 512 bytes / 512 bytes
</span><span class='line'>Disk identifier: 0x00000000
</span><span class='line'>
</span><span class='line'>Disk /dev/vdb doesn't contain a valid partition table</span></code></pre></td></tr></table></div></figure>


<p>Command <code>blkid /dev/vd*</code> lists out the IDs of block devices for this machine and some related info. Running
this command you will see that info of only the virtual disk <code>/dev/vda</code> is present, meaning our disk <code>/dev/vdb</code>
needs formatting.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># blkid /dev/vd*
</span><span class='line'>/dev/vda: LABEL="cirros-rootfs" UUID="74251bb8-3a28-4a46-9a78-064497b26b9d" SEC_TYPE="ext2" TYPE="ext3" </span></code></pre></td></tr></table></div></figure>


<p>Lets format it to make an EXT3 partition with block-size 1024 bytes using command <code>mkfs.ext3 -b 1024 /dev/vdb</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkfs.ext3 -b 1024 /dev/vdb
</span><span class='line'>mke2fs 1.42.2 (27-Mar-2012)
</span><span class='line'>Filesystem label=
</span><span class='line'>OS type: Linux
</span><span class='line'>Block size=1024 (log=0)
</span><span class='line'>Fragment size=1024 (log=0)
</span><span class='line'>Stride=0 blocks, Stripe width=0 blocks
</span><span class='line'>65536 inodes, 1048576 blocks
</span><span class='line'>52428 blocks (5.00%) reserved for the super user
</span><span class='line'>First data block=1
</span><span class='line'>Maximum filesystem blocks=68157440
</span><span class='line'>128 block groups
</span><span class='line'>8192 blocks per group, 8192 fragments per group
</span><span class='line'>512 inodes per group
</span><span class='line'>Superblock backups stored on blocks: 
</span><span class='line'>        8193, 24577, 40961, 57345, 73729, 204801, 221185, 401409, 663553, 
</span><span class='line'>        1024001
</span><span class='line'>
</span><span class='line'>Allocating group tables: done                            
</span><span class='line'>Writing inode tables: done                            
</span><span class='line'>Creating journal (32768 blocks): done
</span><span class='line'>Writing superblocks and filesystem accounting information: done</span></code></pre></td></tr></table></div></figure>


<p>Run <code>blkid</code> again to see the newly partitioned disk listed:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># blkid /dev/vd*
</span><span class='line'>/dev/vda: LABEL="cirros-rootfs" UUID="74251bb8-3a28-4a46-9a78-064497b26b9d" SEC_TYPE="ext2" TYPE="ext3" 
</span><span class='line'>/dev/vdb: UUID="22838e81-eb97-457d-b1e0-4ff3d8e45b05" SEC_TYPE="ext2" TYPE="ext3" </span></code></pre></td></tr></table></div></figure>


<p>In order to use this disk, you need to mount it at some location. I&#8217;ll create a directory <code>/tempmount</code>
and mount our virtual block device there:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir /tempmount
</span><span class='line'># mount /dev/vdb /tempmount/</span></code></pre></td></tr></table></div></figure>


<p>Now you can see the disk listed in the machine disks, using <code>df -h</code> command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># df -h
</span><span class='line'>Filesystem                Size      Used Available Use% Mounted on
</span><span class='line'>/dev                    242.3M         0    242.3M   0% /dev
</span><span class='line'>/dev/vda                 31.0M      9.7M     19.7M  33% /
</span><span class='line'>tmpfs                   245.9M         0    245.9M   0% /dev/shm
</span><span class='line'>tmpfs                   200.0K     76.0K    124.0K  38% /run
</span><span class='line'>/dev/vdb               1007.7M     34.9M    921.6M   4% /tempmount</span></code></pre></td></tr></table></div></figure>


<p>Now you can <code>cd</code> into <code>/tempmount</code> directory, and do whatever you want to do with the new disk &#8211; put some files there,
or download one!</p>

<p>Lets wrap up this part. Unmount this volume by <code>umount /tempmount</code>, and log out from the machine by pressing <code>CTRL+D</code> twice, and execute <code>nova volume-detach &lt;volume_id&gt;
&lt;server_id&gt;</code> to detach this volume. You can now see the &#8216;Attached to&#8217; column becomes empty again after detaching.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stack@stlrx300s7-27:/$ cinder list
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+--------------------------------------+
</span><span class='line'>|                  ID                  |   Status  |  Display Name | Size | Volume Type | Bootable |             Attached to              |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+--------------------------------------+
</span><span class='line'>| 25fa2028-46dc-4870-84c5-d062ae99dd7a |   in-use  | my_second_vol |  1   |     None    |  false   | 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f |
</span><span class='line'>| 99ebe1d0-678b-4a9a-8ec4-438f9804d327 | available |      None     |  1   |     None    |  false   |                                      |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+--------------------------------------+
</span><span class='line'>stack@stlrx300s7-27:/$ nova volume-detach 3b6dd9f1-3ca3-4eed-a508-1cd62d55629f 25fa2028-46dc-4870-84c5-d062ae99dd7a
</span><span class='line'>stack@stlrx300s7-27:/$ cinder list
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>|                  ID                  |   Status  |  Display Name | Size | Volume Type | Bootable | Attached to |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+
</span><span class='line'>| 25fa2028-46dc-4870-84c5-d062ae99dd7a | available | my_second_vol |  1   |     None    |  false   |             |
</span><span class='line'>| 99ebe1d0-678b-4a9a-8ec4-438f9804d327 | available |      None     |  1   |     None    |  false   |             |
</span><span class='line'>+--------------------------------------+-----------+---------------+------+-------------+----------+-------------+</span></code></pre></td></tr></table></div></figure>


<h3>More features</h3>

<p>(Will update shortly)</p>

<p>Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenStack Tempest quick start with DevStack]]></title>
    <link href="http://rushiagr.github.io/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/"/>
    <updated>2013-03-20T04:54:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2013/03/20/openstack-tempest-quick-start-with-devstack</id>
    <content type="html"><![CDATA[<p>UPDATE(April 2014): Now when you set up DevStack, Tempest is automatically set up for you.</p>

<p>This quick start guide explains setting up Tempest with a DevStack environment
for Grizzly release. Most of the information here is taken from
<a href="http://www.joinfu.com/2012/03/testing-essex-rc1-with-devstack-and-tempest/">here</a>, the only difference being this blog post is more recent, and is based on Grizzly.</p>

<!--more-->


<p>Assumptions made are that you understand:
1. What is a <code>localrc</code> file in DevStack.
2. What does <code>./stack.sh</code> do in DevStack.
3. How to clone using git.</p>

<h2>Setting up DevStack</h2>

<p>Clone DevStack</p>

<pre><code>git clone https://github.com/openstack-dev/devstack.git
cd devstack
</code></pre>

<p>Tempest requires that the rate-limiting for DevStack is turned off. By default, it is turned on, so turn it off by adding this line to the localrc file.</p>

<pre><code>API_RATE_LIMIT=False
</code></pre>

<p>If you have already created a DevStack environment, you will have to go through the labour of setting it all again by unstacking and restacking it with this parameter in localrc.
Quick tip: If you already had a working DevStack in your computer, adding <code>OFFLINE=True</code> line in localrc will create the DevStack environment in your computer WITHOUT
downloading all the OpenStack code all over again from the Github repos, but will build the environment from the existing code (thus saving you some Internet bandwidth and time).</p>

<p>Build the DevStack environment</p>

<pre><code>./stack.sh
</code></pre>

<p>Supply all the five passwords. (If you are just playing around, just like me, then
you can easily supply <code>nova</code> to all the passwords.)</p>

<p>Note the IP of the system where DevStack is running (The &#8216;host IP&#8217; mentioned at the last of the output after running <code>stack.sh</code>).</p>

<h2>Setting up Tempest</h2>

<p>Clone latest Tempest code</p>

<pre><code>git clone https://github.com/openstack/tempest.git
cd tempest
</code></pre>

<p>Create tempest.conf file from the sample configuration file. This file will contain the configuration information of the OpenStack environment (here, the DevStack
environment)</p>

<pre><code>cp etc/tempest.conf.sample etc/tempest.conf
</code></pre>

<p>Now open the file tempest.conf in an editor, and replace all instance of word <code>secret</code> with the appropriate password (<code>nova</code> if you followed me, and just typed <code>nova</code> whenever the
<code>stack.sh</code> script asked for passwords)</p>

<p>If, for example, your host IP is 10.0.24.30, change this line in tempest.conf</p>

<pre><code>uri = http://127.0.0.1:5000/v2.0/
</code></pre>

<p>to make it</p>

<pre><code>uri = http://10.0.24.30:5000/v2.0/
</code></pre>

<p>The last thing to update in the tempest.conf file is the ID of the Cirros image. The image ID can be obtained by two ways</p>

<h4>Image ID using glance</h4>

<p>This command will return the image ID. Note that I have used the password <code>nova</code> in this line. You might also need to change the host IP address</p>

<pre><code>glance -I admin -K nova -T admin -N http://10.0.24.30:5000/v2.0 -S keystone index | grep ami | cut -f1 | awk '{print $1}'
</code></pre>

<h4>Image ID using OpenStack CLI</h4>

<p>Become stack user</p>

<pre><code>su - stack
</code></pre>

<p>Source the sample credentials file</p>

<pre><code>. /opt/stack/devstack/eucarc
</code></pre>

<p>OR</p>

<pre><code>. /opt/stack/devstack/openrc
</code></pre>

<p>Show all the images, with their IDs</p>

<pre><code>$ nova image-list
+--------------------------------------+---------------------------------+--------+--------+
| ID                                   | Name                            | Status | Server |
+--------------------------------------+---------------------------------+--------+--------+
| 13abf9c8-5603-48cb-802e-e27162e10b58 | cirros-0.3.0-x86_64-uec         | ACTIVE |        |
| 39b023ae-9201-427d-8350-4f30e5bbc01a | cirros-0.3.0-x86_64-uec-kernel  | ACTIVE |        |
| 431a9c04-47b1-47e4-9521-7f12295c78e0 | cirros-0.3.0-x86_64-uec-ramdisk | ACTIVE |        |
+--------------------------------------+---------------------------------+--------+--------+
</code></pre>

<p>The ID of the smallest image name is what we&#8217;re interested in.</p>

<p>Now replace <code>{$IMAGE_ID}</code> and <code>{$IMAGE_ID_ALT}</code> with this value, to make those two lines appear in tempest.conf as</p>

<pre><code>image_ref = 13abf9c8-5603-48cb-802e-e27162e10b58
image_ref_alt = 13abf9c8-5603-48cb-802e-e27162e10b58
</code></pre>

<h2>Installing required dependencies</h2>

<p>Install all the required packages needed to run Tempest integration test suite. (The list of required packages is maintained in file <code>tools/pip-requires</code>)</p>

<pre><code>$ sudo pip install -r tools/pip-requires 
</code></pre>

<h2>Show time!</h2>

<p>We&#8217;ll run all the tests in verbose mode. To run all the tests:</p>

<pre><code>nosetests -v tempest
</code></pre>

<p>To run tests only from a specific file, say <code>tempest/tests/volume/test_volumes_list.py</code>:</p>

<pre><code>nosetests -sv tempest.tests.volume.test_volumes_list
</code></pre>

<p>OR</p>

<pre><code>nosetests -sv tempest.tests.volume.test_volumes_list.py
</code></pre>

<p>To run a specific test <code>test_volume_list_with_details</code> from test class <code>VolumeListTest</code>, which resides in the above file:</p>

<pre><code>    nosetests -sv tempest.tests.volume.test_volumes_list:VolumeListTest.test_volume_list_with_details
</code></pre>

<p>And that ladies and gentlemen, is the end! :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git(hub) Cheat Sheet]]></title>
    <link href="http://rushiagr.github.io/blog/2013/03/19/github-cheat-sheet/"/>
    <updated>2013-03-19T04:22:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2013/03/19/github-cheat-sheet</id>
    <content type="html"><![CDATA[<p>I am posting my github cheat sheet here. I started writing it as soon as I started
learning Github and Git. So, some of the content here can appear quite naive.
I will try to keep this blog post as updated as I can, and if you find any
suggestion, please comment!</p>

<p>This post is just for a reference of commands. This post will be a bad way to learn
how git works. A basic understanding of git is assumed.</p>

<!--more-->


<h2>Initial configuration</h2>

<p>Configure user details only for the first time</p>

<pre><code>git config --global user.name "Rushi Agrawal"
git config --global user.email "rushi.agr@gmail.com"
</code></pre>

<p>To check your git configuration</p>

<pre><code>git config --list
</code></pre>

<h2>Branches</h2>

<p>List all branches in the local repo</p>

<pre><code>git branch
</code></pre>

<p>List all branches including remote-tracking branches</p>

<pre><code>git branch -r
</code></pre>

<p>List all branches (including the ones at remote)</p>

<pre><code>git branch -a
</code></pre>

<p>Creating your own branch <code>my_branch</code>, with content same as your current branch</p>

<pre><code>git branch my_branch
</code></pre>

<p>Switch to the newly created branch</p>

<pre><code>git checkout my_branch
</code></pre>

<p>Execute the above two commands in one line:</p>

<pre><code>git checkout -b my_branch
</code></pre>

<p>to pull a branch <code>only_remote</code> which exists at github (at remote <code>rushiagr</code> but not in local repo. (More about <code>git remote update</code> later)</p>

<pre><code>git remote update
git checkout -b only_remote rushiagr/only_remote
</code></pre>

<h2>Remotes</h2>

<p>Create a new remote <code>rushiagr</code> which will track <code>cinder</code> repository by user <code>rushiagr</code></p>

<pre><code>git remote add rushiagr https://github.com/rushiagr/cinder.git
</code></pre>

<p>If this is your personal repo, you can append the username in the remote as shown. After that, every time you push to the origin,
github will not ask for your username but only password.</p>

<pre><code>git remote add rushiagr https://rushiagr@github.com/rushiagr/cinder.git
</code></pre>

<p>Delete the remote <code>rushiagr</code></p>

<pre><code>git remote rm rushiagr
</code></pre>

<p>List all the remotes</p>

<pre><code>git remote
</code></pre>

<p>The above command only shows the names of remotes. To also check the links to the remotes:</p>

<pre><code>git remote -v
</code></pre>

<p>Now this is very important command.</p>

<pre><code>git remote update
</code></pre>

<p>This will contact the git server, and will update the local repository with ALL the content at ALL those remotes. The interesting part is, nothing will actually change. That is, no more new branches (which got created at the server after you last pulled from the server) were created, and the existing branches are also not updated. BUT, all the content goes into the magic <code>.git</code> directory. After you&#8217;ve run this command, when you create a branch only existing at remote, the local git repo will not contact the server but will fetch all the contents from within the repository.</p>

<p>To take a new branch from remote, and create a new branch having contents of that remote branch. (You might need to run &#8216;git remote update&#8217;)</p>

<pre><code>git checkout -b stable/folsom origin/stable/folsom
</code></pre>

<h2>Push</h2>

<p>Pushing this newly created branch to remote <code>rushiagr</code></p>

<pre><code>git push rushiagr my_branch
</code></pre>

<p>If you want to push the local branch <code>my_branch</code> with a different name to
remote, say <code>my_remote_branch</code>:</p>

<pre><code>git push rushiagr my_branch:my_remote_branch
</code></pre>

<p>To create an association with the remote (only first time):</p>

<pre><code>git push -u origin my_branch
</code></pre>

<p>or</p>

<pre><code>git push --set-upstream origin my_branch
</code></pre>

<h2>Pull</h2>

<p>Git pull is nothing more than a macro that does git fetch and git merge, in
that order. The common syntax to pull from branch <code>remote_branch</code> located at remote <code>remote_name</code> to the current active branch in the local repo:</p>

<pre><code>git pull remote_name remote_branch
</code></pre>

<h2>Oops! I didn&#8217;t intend to do that!</h2>

<h4>To undo last commit.</h4>

<p>This will just undo the commit, but will keep changes, so that you can modify the files and commit again</p>

<pre><code>git reset --soft HEAD^
</code></pre>

<h4>To not keep the uncommitted changes.</h4>

<p>This command will wipe off all the changes which are not committed. Very useful when you made some changes but dont want to commit it. All the more useful when you <code>pull</code>ed something but everything became a mess (possibly due to a merge conflict, or pulling to/from a different branch!)</p>

<pre><code>git reset --hard
</code></pre>

<h4>To delete a branch <code>timepass_testing</code> from github server</h4>

<pre><code>git push rushiagr --delete timepass_testing
</code></pre>

<p>(NOT <code>git push rushiagr --delete rushiagr/timepass_testing</code>)</p>

<h4>Change author of the last commit</h4>

<pre><code>git commit --amend --author="Rushi Agrawal &lt;rushi.agr@gmail.com&gt;"
</code></pre>

<p>You committed some changes, but then you realised you wanted to add this one line to the commit. In such a case
just add that one line, and run this command to have this last change incorporated into that previous commit. This command also gives you an option to
change the commit message.</p>

<pre><code>git commit -a --amend
</code></pre>

<h2>Show me the money</h2>

<p>To see the patch of the last commit without undoing the last commit</p>

<pre><code>git show
</code></pre>

<p>To see the changes introduced by any earlier commit with commit id <code>c5bb6d821e10ca8f114fa0b3b0149bc8b7257a92</code></p>

<pre><code>git show c5bb6d821e10ca8f114fa0b3b0149bc8b7257a92
</code></pre>

<p>To see the latest changes you made &#8211; the changes which have not been staged to be committed</p>

<pre><code>git diff
</code></pre>

<p>You can redirect the output from the above three commands to a file, to create corresponding patch file.</p>

<h2>Patching in git</h2>

<p>Check the status of patch. How many lines changed, etc</p>

<pre><code>git apply --stat patchfile
</code></pre>

<p>Check if the patch can be applied.
If no output or no error, patch can be applied safely</p>

<pre><code>git apply --check patchfile
</code></pre>

<p>Apply patch with signing-off (better way)</p>

<pre><code>git am --signoff &lt; patchfile
</code></pre>

<p>Normal way of applying patch</p>

<pre><code>git apply patchfile
</code></pre>

<h2>Miscellaneous</h2>

<p>To pull only specific files from another branch: (here, assuming that we have two branches, &#8216;test&#8217;, and &#8216;master&#8217;, and currently we are on &#8216;master&#8217; branch. If you want to pull ##only &#8216;testfile.py&#8217; file from &#8216;test&#8217; branch to &#8216;master&#8217; branch, do this:)</p>

<pre><code>git checkout test testfile.py1
</code></pre>

<p>If your master changed while you were working on your topic_branch, and if you want to merge the master&#8217;s changes, and also get an option to squash the changes you made on topic_branch:</p>

<pre><code>git checkout master
git pull origin master
git checkout topic_branch
git rebase -i master
</code></pre>

<p><a href="http://christoph.ruegg.name/blog/2010/5/5/git-howto-revert-a-commit-already-pushed-to-a-remote-reposit.html}%0A(you%20can%20use%20git%20revert,%20but%20don%E2%80%99t%20know%20how%20exactly%20it%20works">Undo last commit at the remote repo</a></p>

<p>Clone a specific branch git repository from github</p>

<pre><code>git clone -b stable/essex https://github.com/openstack-dev/devstack.git
</code></pre>

<p><a href="https://makandracards.com/makandra/527-squash-several-git-commits-into-a-single-commit">Squash several commits into one single commit</a></p>

<p>Checkout a previous commit with SHA commit id cff2580ad7bc16934b72dd9be7463eb090b31d55 from the current branch to a new branch &#8216;neew&#8217;</p>

<pre><code>git checkout -b neew cff2580ad7bc16934b72dd9be7463eb090b31d55
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bye-Bye 2012, Welcome 2013]]></title>
    <link href="http://rushiagr.github.io/blog/2013/01/02/bye-bye-2012/"/>
    <updated>2013-01-02T00:54:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2013/01/02/bye-bye-2012</id>
    <content type="html"><![CDATA[<p>Listing down the things which went well for me in 2012, and which didn&#8217;t, and the plans for upcoming year 2013. Beware: More technical stuff than emotional.</p>

<!--more-->


<h2>Things which went well in 2012</h2>

<h4>Python</h4>

<p>Started learning Python at the start of year 2012, early January, and this same language landed me in the job which I absolutely love: working in one of the biggest &#8216;OpenSource&#8217; project in the world, written in Python! Getting paid for working on an opensource project is as awesome as it can become for me.</p>

<h4>The hunger to become different from the rest</h4>

<p>Gathered a lot of info on how things work in computer industry. Kept myself in contact with various hot topics, opensource projects.</p>

<h4>The job</h4>

<p>Not faring too well on this front - the full time job. But still, I would consider I did good enough with regards to the work assigned to me. I, after six months into the job, still goes to office every morning with a thirst to make a difference.</p>

<h4>Cleanliness</h4>

<p>Scored much better in the second half. Spent dedicated amount of time each week to keep my room and flat clean and in order.</p>

<h4>Maintaining a TODO list</h4>

<p>Started late in the year, but seems a good progress on that front.</p>

<h2>Things which didn&#8217;t go that well in 2012</h2>

<h4>Concentration</h4>

<p>Still not able to concentrate on one thing for long. Get distracted too easily. Only rarely I sat at one place, focussed on one thing, for more than 50 minutes. Also, the last year&#8217;s resolution of opening FaceBook only once a day was put in trashcan on in the very first week of January!</p>

<h4>Not focussed enough on the future direction</h4>

<p>Poor goal setting. Peeked into a lot of opensource projects, dedicated proper time into none. Opensourced my projects too, but did not work on it much either. Made myself a perfect example of &#8216;naam bade aur darshan chhote&#8217; (appearing like an eminent personality, acting like a jerk).</p>

<h4>Programming contest</h4>

<p>Only kept in touch. Not solved much problems. This year, need to focus a lot on this front.</p>

<h4>Time management</h4>

<p>Never was able to manage time. Was not working on the same thing for even a week. Somewhere in the middle of working on a project, I find out &#8216;hey, this looks cool! Time to try hands on it!&#8217;. What about the thingy you were currently working on? Into the TODO list! Such an idiot.</p>

<h4>Work life balance</h4>

<p>Went for a toss. Not able to regularise job timings. Started and stopped gym. Started and stopped working on many projects. Completed none. Wasted a heck of a lot of time.</p>

<h2>Plans for upcoming year</h2>

<h4>Better planning</h4>

<p>I need to plan things before acting on it. I would take everything into consideration before jumping into hacking something, and then set a deadline for it. And till that deadline, I would promise I would not digress getting enticed by something which makes my mouth watery.</p>

<h4>Don&#8217;t just outright neglect daytime job</h4>

<p>I agree my daytime job is awesome. But I end up considering the work I do at office as secondary. Need to value it much higher. I concentrate on other projects and aim to complete and polish them. What I did not thought was the work I am doing in my job itself is a project! If I am not faring well in the project on which I work 8 hours a day, how can I expect myself to do good in something I am spending only a fraction of time I spend on the daytime project! And expectedly, none of my projects are in good enough shape to talk about it confidently in public. I need to value OpenStack more. Really.</p>

<h4>START coding for programming contests</h4>

<p>Enough of promises, enough of &#8216;From next month I&#8217;m gonna do it&#8217;. I SHOULD spend a specific time every week for coding for programming contests. Looks like I need to start with solving old problems from CodeChef.com alongwith the editorials provided with them.</p>

<h4>Facebook once in a day</h4>

<p>Period.</p>

<h4>Need to plan breaks too</h4>

<p>Realised only the last month that opening facebook, checking out news, and reading articles on Hacker News does not count in a break. A break is not in front of a computer screen. A break is something which gives your strained eyes a rest, especially when you end up spending half of your year staring at a computer screen!</p>

<p>PS. The article is for the writer himself. It is okay if you are finding it a bad piece of English text.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing the new blog]]></title>
    <link href="http://rushiagr.github.io/blog/2012/12/15/testing-the-new-blog/"/>
    <updated>2012-12-15T17:49:00+05:30</updated>
    <id>http://rushiagr.github.io/blog/2012/12/15/testing-the-new-blog</id>
    <content type="html"><![CDATA[<p>This is a test blog, just to check out some of the basic functionalities of
MarkDown. Visit the MarkDown source of this blog post <a href="https://raw.github.com/rushiagr/rushiagr.github.com/source/source/_posts/2012-12-15-testing-the-new-blog.markdown">here</a>
to understand the simplicity with which a post can be written using MarkDown!</p>

<!-- more -->


<h2>This is a subheading</h2>

<p>And below is an example of H1 heading in the main text</p>

<h1>THE heading</h1>

<p>And below is sub-subheading</p>

<h3>The H3 heading</h3>

<p>Trying a smaller heading:</p>

<h4>The sub sub subheading</h4>

<p>Following is a block of syntax-highlighted python code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">factorial</span><span class="p">(</span><span class="n">number</span><span class="p">):</span>
</span><span class='line'>    <span class="n">answer</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">counter</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">number</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>        <span class="n">answer</span> <span class="o">*=</span> <span class="n">counter</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">answer</span>
</span></code></pre></td></tr></table></div></figure>


<p>To write a monospace block, enclose it in backticks. An example would be a directory location: <code>/home/rushi/Desktop/</code> is where the files on my desktop
reside.</p>

<p>Here is an embedded image:</p>

<p><img src="http://rushiagr.github.com/images/bird_32_gray.png"></p>

<p>Thank you!</p>
]]></content>
  </entry>
  
</feed>
