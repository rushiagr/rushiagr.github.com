<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on rushiagr</title>
    <link>http://www.rushiagr.com/blog/</link>
    <description>Recent content in Blogs on rushiagr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Rushi Agrawal</copyright>
    <lastBuildDate>Thu, 08 Dec 2016 19:05:21 +0530</lastBuildDate>
    
	<atom:link href="http://www.rushiagr.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cassandra server in 10 minutes</title>
      <link>http://www.rushiagr.com/blog/2016/12/08/cassandra-server-in-10-minutes/</link>
      <pubDate>Thu, 08 Dec 2016 19:05:21 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/12/08/cassandra-server-in-10-minutes/</guid>
      <description>Want to quickly find out how a Cassandra server feels? In this blog post, we&#39;ll create a single-node Cassandra cluster on an Ubuntu Xenial (16.04) system. It&#39;s not really a &amp;lsquo;cluster&amp;rsquo;, but you can access the Cassandra shell cqlsh and try out all of its commands. Since we are just looking for a quick start, we&#39;re installing one of the latest Cassandra versions &amp;ndash; version 3.7. Even more, the steps here are totally scriptable, so you can just blindly paste the lines and it&#39;ll work!</description>
    </item>
    
    <item>
      <title>Python Engineer Beginner Mistakes</title>
      <link>http://www.rushiagr.com/blog/2016/10/11/python-engineer-beginner-mistakes/</link>
      <pubDate>Tue, 11 Oct 2016 17:59:46 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/10/11/python-engineer-beginner-mistakes/</guid>
      <description>I am writing Python code since 5 years, and I have worked with around 5-6 entry-level Python programmers. There is a pattern I can see in their programming practices. My hope is by reading this article there will be lesser such mistakes.
I have worked on OpenStack for over three years, which is written in Python and has a very high code quality, so I feel I am qualified enough to write this post.</description>
    </item>
    
    <item>
      <title>Kubernetes in 30 minutes with minikube on Mac</title>
      <link>http://www.rushiagr.com/blog/2016/08/16/kubernetes-in-30-minutes-with-minikube-on-mac/</link>
      <pubDate>Tue, 16 Aug 2016 17:03:53 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/08/16/kubernetes-in-30-minutes-with-minikube-on-mac/</guid>
      <description>Below are steps to create an express setup of Kubernetes on your Mac for quick use.
Minikube is a small setup by Kubernetes guys, which will spawn a virtual machine and have a tiny (but fully functional) Kubernetes cluster inside the VM. kubectl (pronounced &amp;lsquo;kube (like &amp;lsquo;tube&amp;rsquo;) control`) is the command line client you&#39;ll use to connect to the Kubernetes cluster (which runs inside the VM created by minikube, in case you forgot :) )</description>
    </item>
    
    <item>
      <title>Make Vagrant Synced folders on Ubuntu Xenial guest work on Mac</title>
      <link>http://www.rushiagr.com/blog/2016/07/20/vagrant-shared-folder-in-mac-xenial-guest/</link>
      <pubDate>Wed, 20 Jul 2016 23:18:24 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/07/20/vagrant-shared-folder-in-mac-xenial-guest/</guid>
      <description>Today I installed latest Vagrant, version 1.8.5. I was waiting for a newer release because 1.8.1 and previous versions don&#39;t work well with host-only networks for Ubuntu Xenial (16.04) guests on my Mac running El Capitan. But I faced another issue now:
mount: unknown filesystem type &#39;vboxsf&#39;  This is while specifying a synced folder in my Vagrantfile with this line:
config.vm.synced_folder(&amp;quot;/Users/apple/src/myutils&amp;quot;, &amp;quot;/home/ubuntu/myutils&amp;quot;)  where myutils is where I keep all my commandline shortcuts, tricks, and other shortcut-ish stuff.</description>
    </item>
    
    <item>
      <title>You dont need Vim swap files. And how to get rid of them</title>
      <link>http://www.rushiagr.com/blog/2016/06/17/you-dont-need-vim-swap-files-and-how-to-get-rid-of-them/</link>
      <pubDate>Fri, 17 Jun 2016 11:18:27 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/06/17/you-dont-need-vim-swap-files-and-how-to-get-rid-of-them/</guid>
      <description>Estimated reading time: 5 minutes.
Almost all IDEs today have &amp;lsquo;autosave&amp;rsquo; feature. That is, you don&#39;t need to explicitly save a file. The file is automatically saved as you type, so that even if your computer crashes, you don&#39;t lose data. This makes me wonder why Vim&#39;s default behavior is of using swap files. Swap files are annoying. I&#39;ve seen all Vim developers, including me, struggle with swap files at one point in their life.</description>
    </item>
    
    <item>
      <title>Everything you need to know about Tmux copy paste - Ubuntu</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</link>
      <pubDate>Thu, 16 Jun 2016 10:59:02 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting-ubuntu/</guid>
      <description>Copying from a Tmux session is something every Tmux user struggled with once. I&#39;m listing out all the stuff I learnt in this blog.
I tested everything on Ubuntu 14.04 Trusty Tahr, which runs Tmux version 1.8 (I have a few commands included for Tmux version 2+ also) To check your Tmux version, run tmux -V. If you have a Mac, see here.
Know about copy buffers When you do a CTRL`+`c, the stuff you copy is stored in your computer&#39;s buffer, called &amp;lsquo;clipboard&amp;rsquo; from where you can paste anywhere by doing a CTRL+&#39;v&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>Everything you need to know about Tmux copy paste</title>
      <link>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/</link>
      <pubDate>Thu, 16 Jun 2016 10:58:02 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/</guid>
      <description>Copying from a Tmux session is something every Tmux user struggled with once. I&#39;m listing out all the stuff I learnt in this blog.
I tested everything on Mac OS X El Capitan. For Ubuntu/Linux guide, see here. Mac OS X El Capitan runs Tmux version 2.1. To check your Tmux version, run tmux -V.
Know about your terminal The default terminal which comes with Mac is pretty limiting. Instead of listing the limitations (and workarounds around it), I&#39;ll just say that before you proceed, please install iTerm 2 and start using that immediately.</description>
    </item>
    
    <item>
      <title>Moving from Pelican to Hugo</title>
      <link>http://www.rushiagr.com/blog/2016/01/24/moving-from-pelican-to-hugo/</link>
      <pubDate>Sun, 24 Jan 2016 21:19:26 +0530</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/24/moving-from-pelican-to-hugo/</guid>
      <description>I was looking for a better theme for my blog which is based on Pelican static site generator in Python, but then I happened to look at this blog written in Hugo - a Go counterpart of Pelican. The thing which caught my eye was the posts page, which is exactly how I wanted my first page to be. I&#39;ve always wanted something like Paul Graham&#39;s essays page, but couldn&#39;t find anything close to it until I found this site.</description>
    </item>
    
    <item>
      <title>Tmux session shortcuts</title>
      <link>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/10/tmux-session-shortcuts/</guid>
      <description>Tmux is awesome. But the session management commands are way too long for my liking. Listing all sessions is tmux list-sessions, attaching to a session mysession is tmux attach -t mysession, etc.
So I created a few functions and aliases, which can be found here.
The general idea is, all commands start with mx, which is basically a shortcut for &amp;lsquo;tMuX&amp;rsquo;. So mxl is to &amp;lsquo;l&#39;ist tmux sessions, mxa is to &amp;lsquo;a&#39;ttach to a tmux session, etc.</description>
    </item>
    
    <item>
      <title>A different approach to AWS CLI</title>
      <link>http://www.rushiagr.com/blog/2016/01/02/better-aws-command-line-interface/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/02/better-aws-command-line-interface/</guid>
      <description>For a user of Amazon Web Services, quickly viewing a dashboard of all resources is not straightforward. If using a web browser, the session won&#39;t persist for more than a day and one will have to re-authenticate every day. If using AWS CLI, then he/she might not remember the exact command (was it describe-key-pair or describe-keypair or describe-keypairs?) but even if they do, the output is a not-so-readable JSON. For viewing virtual machines, you might not want to see hundreds of lines of detail.</description>
    </item>
    
    <item>
      <title>Build VM Images using Diskimage-builder</title>
      <link>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</link>
      <pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2016/01/02/build-vm-image-using-diskimage-builder/</guid>
      <description>OpenStack has this nice tool diskimage-builderto create virtual machine images without the need of a cloud. These vm images can then be uploaded to cloud (e.g. in Glance for OpenStack cloud), and they become immediately usable. You can also create VMs in virtualbox from these images (though I don&#39;t remember exact steps to make the image work with VirtualBox. Do let me know if you get the VM working with VirtualBox/Vagrant)</description>
    </item>
    
    <item>
      <title>Better way to view MySQL tables</title>
      <link>http://www.rushiagr.com/blog/2015/12/12/better-way-to-view-mysql-tables/</link>
      <pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/12/12/better-way-to-view-mysql-tables/</guid>
      <description>The problem You are trying to print a MySQL table with a large number of columns, with SELECT * command. You type SELECT * FROM mysql.user LIMIT 1, and your terminal becomes this. If you wanted to view more than one row, you&#39;re in a trouble :)
The solution Run MySQL with this option:
mysql --pager=&amp;quot;less --chop-long-lines --quit-if-one-screen --no-init&#39;  This will make your table display only the rows it can in the current screen, something like this.</description>
    </item>
    
    <item>
      <title>Quick JustDial scraper</title>
      <link>http://www.rushiagr.com/blog/2015/09/14/quick-justdial-scraper/</link>
      <pubDate>Mon, 14 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/14/quick-justdial-scraper/</guid>
      <description>So my friend asked me to scrape data from JustDial and give it to him in an excel sheet. I thought let&#39;s give it a try. He needed name of firm, address and phone number of any JustDial URL he wants to scrape. After effectively around 4 hours of work, the below script was created.
Note that the script is dirty. You need to edit the jd_url to search any other URL.</description>
    </item>
    
    <item>
      <title>OpenStack Keystone with Cassandra Database in DevStack</title>
      <link>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</link>
      <pubDate>Thu, 10 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/09/10/openstack-keystone-with-cassandra-database-in-devstack/</guid>
      <description>Using Cassandra as backing database for OpenStack Keystone was our solution to multi-region deployment problem of OpenStack cloud. This blog post is not to discuss the problem. We are talking about how to have a development environment to play around with Keystone working with a dev Cassandra deployment.
&amp;ldquo;Just run this script and you&#39;re all set!&amp;rdquo; I&#39;ve put together all commands into a script which can be found here:
https://raw.githubusercontent.com/rushiagr/keystone-cassandra/master/keystone-cassandra.sh  If you have a fresh Ubuntu VM, just copy this script into that machine and execute it.</description>
    </item>
    
    <item>
      <title>Apache mod_wsgi parallelization notes</title>
      <link>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</link>
      <pubDate>Fri, 24 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/07/24/apache-mod_wsgi-parallelization-notes/</guid>
      <description>This is my notes on &amp;lsquo;Processes and Threading&amp;rsquo; doc by the author of mod_wsgi module of Apache. This blog post just serves as a &amp;lsquo;quick refresher&amp;rsquo;, and is only useful if you have read the original document but it&#39;s been too long since you read it :)
Apache with mod_wsgi A Python application can run with multiple processes as well as multiple threads with mod_wsgi.
Prefork multiprocessing module Apache creates multiple processes, and each request is handled by one process.</description>
    </item>
    
    <item>
      <title>Docker quick start notes</title>
      <link>http://www.rushiagr.com/blog/2015/06/07/docker-quick-start-notes/</link>
      <pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/06/07/docker-quick-start-notes/</guid>
      <description>Update *: Blog updated to use latest way to install docker.  After reading about docker and containers, I thought let&#39;s try them out. Here are my notes. Obviously all of them are taken from Internet. Maybe this collection here will help someone start with docker faster than spending time searching all over the internet.
It assumes your base OS is Ubuntu 14.04 Trusty Tahr (when was the last time you saw the codename spelled &amp;lsquo;Trusty Tahr&amp;rsquo; and not &amp;lsquo;Trusty&amp;rsquo;?</description>
    </item>
    
    <item>
      <title>Cache APT packages with Squid proxy</title>
      <link>http://www.rushiagr.com/blog/2015/06/05/cache-apt-packages-with-squid-proxy/</link>
      <pubDate>Fri, 05 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2015/06/05/cache-apt-packages-with-squid-proxy/</guid>
      <description>TL;DR: Know how to install and set up Squid proxy, so that you can cache packages, and hence save bandwidth if you want to install those packages again and again. Also works if you are already behind a squid proxy.
Problem: Repetitive download. Slow. If you deal with virtual machines a lot, you might know the pain of managing packages on each one of them. Every time I had to create a new VM, I would run apt-get update (to get information about all the latest packages available for my Ubuntu system), apt-get dist-upgrade (to install latest versions of all packages already installed), and also install some packages not present in stock Ubuntu image, like git (yes, it&#39;s 2015 and Ubuntu still doesn&#39;t come pre-installed with git), ipython, bwm-ng and some others.</description>
    </item>
    
    <item>
      <title>Puppet installation from modules</title>
      <link>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</link>
      <pubDate>Sun, 14 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/14/puppet-installation-from-modules/</guid>
      <description>A quick example of how to use Puppet to install and manage MySQL. We&#39;ll download required Puppet modules from their git repositories.
Again, everything is tried on Ubuntu (14.04).
Make sure hostname -f shows your FQDN. Then install puppet
sudo apt-get install puppet  We&#39;ll use git submodules to manage different git repositories. But first, create our own repository
mkdir puppet-mysql cd puppet-mysql git init  Install Puppet modules stdlib and mysql into directory modules as git submodules.</description>
    </item>
    
    <item>
      <title>iSCSI administration on Ubuntu - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/iscsi-administration-on-ubuntu-quick-start/</guid>
      <description>This post get&#39;s you started with iSCSI administration on an Ubuntu machine. Although I have used Ubuntu Trusty (14.04) version, it should work with Precise (12.04) too, with the latest packages.
Prerequisites Make sure you have atleast a little idea of what these terms mean: iSCSI, LUN, IQN, initiator, target and portal. Google and wikipedia are your friends.
A quick summary: There are two parts of iSCSI communication - initiator and target.</description>
    </item>
    
    <item>
      <title>OpenStack Unit Testing Nuggets</title>
      <link>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/09/05/openstack-unit-testing-nuggets/</guid>
      <description>A small post about little things I found out while running unit tests in OpenStack.
Unit-testing setup Everybody knows ./run_tests.sh is used to run the unit tests of an OpenStack project. But, you require to install dependencies before doing it. And installing dependencies might not always succeed. So make sure you install these packages before running pip install -r requirements.txt:
sudo apt-get install build-essential libssl-dev libffi-dev \ python-dev libxslt1-dev libpq-dev python-mysqldb \ libmysqlclient-dev libvirt-dev  Atleast cinder and nova dependencies will get installed properly after this.</description>
    </item>
    
    <item>
      <title>Amazon EC2 API with OpenStack - Developer Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</link>
      <pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/09/amazon-ec2-api-with-openstack-developer-quick-start/</guid>
      <description>OpenStack has support for EC2 API, that is, you can fire Amazon&#39;s API against an OpenStack cloud and it will still work. This article gets you started with using them locally against DevStack. It is more of a starter guide to a novice.
Fire a DevStack with it&#39;s default settings. See this post for more information on it.
git clone http://github.com/openstack-dev/devstack cd devstack/ ./stack.sh  Source openrc
source openrc  View all EC2 credentials available for the current user (here, demo user in demo tenant)</description>
    </item>
    
    <item>
      <title>DevStack behind proxy</title>
      <link>http://www.rushiagr.com/blog/2014/08/05/devstack-behind-proxy/</link>
      <pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/05/devstack-behind-proxy/</guid>
      <description>I have now seen some people struggling to get DevStack working behind proxy. Some, thinking it is a bug in DevStack, have actually posted patches for it too! Here, I&#39;ll tell you the simple way to get stack.sh complete succesfully from behind a proxy.
By default, devstack will clone from the &amp;lsquo;actual&amp;rsquo; OpenStack git repositories, residing at git://git.openstack.org. Some people might face a problem with it, as DevStack uses git protocol to clone the repo.</description>
    </item>
    
    <item>
      <title>Mounting QCOW2 images</title>
      <link>http://www.rushiagr.com/blog/2014/08/02/qcow2-mount/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/08/02/qcow2-mount/</guid>
      <description>Isn&#39;t it fun that even before you start a VM out of an image, you can add files to that image, see and edit the directory and file structure of that VM?
I wanted to boot a VM out of a disk-image, but how will I know out of the 256 available IPs for that VM, which one actually got assigned? I tried vnc console, but the connection was terribly flaky.</description>
    </item>
    
    <item>
      <title>Open Source Puppet - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</link>
      <pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/12/open-source-puppet-quick-start/</guid>
      <description>This post aims to be your quickest guide to get started with Puppet. We&#39;ll be using the open source version of Puppet. An hour of spare time and two Ubuntu machines (physical or virtual doesn&#39;t matter) is all that is needed.
Quick Introduction Lets say you want to install and run apache server on one of the machines in your lab. On another, you want to create a new user. On a third machine, you want to install MySQL, and allow access to this machine only from the first server.</description>
    </item>
    
    <item>
      <title>OpenStack in an hour with DevStack</title>
      <link>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</link>
      <pubDate>Thu, 03 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/04/03/openstack-in-an-hour-with-devstack/</guid>
      <description>&lt;p&gt;So you found out a cool new technology &amp;ldquo;OpenStack&amp;rdquo; and want to try it real quick? Or probably you are hired in a company for your Python skills and now you are supposed to work on OpenStack in the shortest possible time? Fear not, it is not that hard to get started. &lt;a href=&#34;http://devstack.org&#34;&gt;DevStack&lt;/a&gt; is your friend-in-need. No, don&#39;t click that hyperlink just yet :)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</link>
      <pubDate>Mon, 31 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/03/31/mysql-cheat-sheet/</guid>
      <description>Databases are so important, yet almost all the time I need to work with it, I find that I have already forgotten all the syntax! So here I am writing down a quick cheat sheet to get me up and running when I&#39;m waking up from slumber. I hope this will help atleast one other guy on this planet.
I use mostly Ubuntu, so some of the commands might be Ubuntu specific.</description>
    </item>
    
    <item>
      <title>Playing around with Cinder multi-backend</title>
      <link>http://www.rushiagr.com/blog/2014/01/16/playing-around-with-cinder-backend/</link>
      <pubDate>Thu, 16 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/16/playing-around-with-cinder-backend/</guid>
      <description>&lt;p&gt;With Grizzly release, Cinder got equipped with another major feature &amp;ndash; multi-backends
with filter scheduler. So now you can have more than one storage boxes for block storage
and manage them with one Cinder deployment. Here, I&#39;m going to test it out using our
favourite method &amp;ndash; trying it out on DevStack!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quick Start: Linux Logical Volume Manager</title>
      <link>http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/</link>
      <pubDate>Tue, 14 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/14/quick-start-linux-logical-volume-manager/</guid>
      <description>While installing the latest Ubuntu OS on your computer, you will see that you can install the OS using LVM (Logical Volume Manager) utility. Ever wonder what is it? LVM (Logical Volume Manager) is that fantastic utility for storage administration. It provide the users with abilities which were not possible with raw disks. The storage is now &amp;lsquo;virtualized&amp;rsquo;. You can now easily create, move and extend volumes (for now, think of it as disk partitions) without bothering about data corruption.</description>
    </item>
    
    <item>
      <title>Installing OpenID plugin for MediaWiki</title>
      <link>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</link>
      <pubDate>Sun, 12 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2014/01/12/installing-openid-plugin-for-mediawiki/</guid>
      <description>&lt;p&gt;This post is about setting up your wiki such that their users access the wiki
only via an OpenID provider login (e.g. Google or Facebook login). This post assumes
MediaWiki is already installed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux Screens in DevStack</title>
      <link>http://www.rushiagr.com/blog/2013/06/05/linux-screens-in-devstack/</link>
      <pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/06/05/linux-screens-in-devstack/</guid>
      <description>&lt;p&gt;This blog article explains handling screens within OpenStack running as a DevStack setup. Some useful generic screen commands are also provided at the end.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cinder on DevStack - Quick Start</title>
      <link>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</link>
      <pubDate>Mon, 27 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/05/27/cinder-on-devstack-quick-start/</guid>
      <description>&lt;p&gt;This blog post covers all the important commands for OpenStack Cinder - The block storage project.
Although this guide is written based on DevStack, it will work with actual deployment of OpenStack
cloud also (except the DevStack/Linux specific bits).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>OpenStack Tempest quick start with DevStack</title>
      <link>http://www.rushiagr.com/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/</link>
      <pubDate>Wed, 20 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/03/20/openstack-tempest-quick-start-with-devstack/</guid>
      <description>&lt;p&gt;UPDATE(April 2014): Now when you set up DevStack, Tempest is automatically set up for you.&lt;/p&gt;
&lt;p&gt;This quick start guide explains setting up Tempest with a DevStack environment
for Grizzly release. Most of the information here is taken from
&lt;a href=&#34;http://www.joinfu.com/2012/03/testing-essex-rc1-with-devstack-and-tempest/&#34;&gt;here&lt;/a&gt;, the only difference being this blog post is more recent, and is based on Grizzly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git(hub) Cheat Sheet</title>
      <link>http://www.rushiagr.com/blog/2013/03/19/github-cheat-sheet/</link>
      <pubDate>Tue, 19 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://www.rushiagr.com/blog/2013/03/19/github-cheat-sheet/</guid>
      <description>&lt;p&gt;I am posting my github cheat sheet here. I started writing it as soon as I started
learning Github and Git. So, some of the content here can appear quite naive.
I will try to keep this blog post as updated as I can, and if you find any
suggestion, please comment!&lt;/p&gt;
&lt;p&gt;This post is just for a reference of commands. This post will be a bad way to learn
how git works. A basic understanding of git is assumed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>